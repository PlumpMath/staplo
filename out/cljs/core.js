// Compiled by ClojureScript 0.0-2755 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2755";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__4967__delegate = function (args){
return console.log.apply(console,(function (){var G__4966 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__4966) : cljs.core.into_array.call(null,G__4966));
})());
};
var G__4967 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__4968__i = 0, G__4968__a = new Array(arguments.length -  0);
while (G__4968__i < G__4968__a.length) {G__4968__a[G__4968__i] = arguments[G__4968__i + 0]; ++G__4968__i;}
  args = new cljs.core.IndexedSeq(G__4968__a,0);
} 
return G__4967__delegate.call(this,args);};
G__4967.cljs$lang$maxFixedArity = 0;
G__4967.cljs$lang$applyTo = (function (arglist__4969){
var args = cljs.core.seq(arglist__4969);
return G__4967__delegate(args);
});
G__4967.cljs$core$IFn$_invoke$arity$variadic = G__4967__delegate;
return G__4967;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__4971 = x;
return goog.isString(G__4971);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__4973 = x__$1;
return goog.typeOf(G__4973);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3760__auto__ = ty;
if(cljs.core.truth_(and__3760__auto__)){
return ty.cljs$lang$type;
} else {
return and__3760__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__4975 = obj;
return goog.typeOf(G__4975);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__4977 = Symbol;
return goog.typeOf(G__4977);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4659__auto___4979 = len;
var i_4980 = (0);
while(true){
if((i_4980 < n__4659__auto___4979)){
(new_arr[i_4980] = (arr[i_4980]));

var G__4981 = (i_4980 + (1));
i_4980 = G__4981;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__4982 = (i + (1));
i = G__4982;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__4991__delegate = function (array,i,idxs){
var G__4988 = aget;
var G__4989 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__4990 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__4988,G__4989,G__4990) : cljs.core.apply.call(null,G__4988,G__4989,G__4990));
};
var G__4991 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__4992__i = 0, G__4992__a = new Array(arguments.length -  2);
while (G__4992__i < G__4992__a.length) {G__4992__a[G__4992__i] = arguments[G__4992__i + 2]; ++G__4992__i;}
  idxs = new cljs.core.IndexedSeq(G__4992__a,0);
} 
return G__4991__delegate.call(this,array,i,idxs);};
G__4991.cljs$lang$maxFixedArity = 2;
G__4991.cljs$lang$applyTo = (function (arglist__4993){
var array = cljs.core.first(arglist__4993);
arglist__4993 = cljs.core.next(arglist__4993);
var i = cljs.core.first(arglist__4993);
var idxs = cljs.core.rest(arglist__4993);
return G__4991__delegate(array,i,idxs);
});
G__4991.cljs$core$IFn$_invoke$arity$variadic = G__4991__delegate;
return G__4991;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__4994 = null;
if (arguments.length > 2) {
var G__4995__i = 0, G__4995__a = new Array(arguments.length -  2);
while (G__4995__i < G__4995__a.length) {G__4995__a[G__4995__i] = arguments[G__4995__i + 2]; ++G__4995__i;}
G__4994 = new cljs.core.IndexedSeq(G__4995__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__4994);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__5004__delegate = function (array,idx,idx2,idxv){
var G__5000 = aset;
var G__5001 = (array[idx]);
var G__5002 = idx2;
var G__5003 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5000,G__5001,G__5002,G__5003) : cljs.core.apply.call(null,G__5000,G__5001,G__5002,G__5003));
};
var G__5004 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__5005__i = 0, G__5005__a = new Array(arguments.length -  3);
while (G__5005__i < G__5005__a.length) {G__5005__a[G__5005__i] = arguments[G__5005__i + 3]; ++G__5005__i;}
  idxv = new cljs.core.IndexedSeq(G__5005__a,0);
} 
return G__5004__delegate.call(this,array,idx,idx2,idxv);};
G__5004.cljs$lang$maxFixedArity = 3;
G__5004.cljs$lang$applyTo = (function (arglist__5006){
var array = cljs.core.first(arglist__5006);
arglist__5006 = cljs.core.next(arglist__5006);
var idx = cljs.core.first(arglist__5006);
arglist__5006 = cljs.core.next(arglist__5006);
var idx2 = cljs.core.first(arglist__5006);
var idxv = cljs.core.rest(arglist__5006);
return G__5004__delegate(array,idx,idx2,idxv);
});
G__5004.cljs$core$IFn$_invoke$arity$variadic = G__5004__delegate;
return G__5004;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__5007 = null;
if (arguments.length > 3) {
var G__5008__i = 0, G__5008__a = new Array(arguments.length -  3);
while (G__5008__i < G__5008__a.length) {G__5008__a[G__5008__i] = arguments[G__5008__i + 3]; ++G__5008__i;}
G__5007 = new cljs.core.IndexedSeq(G__5008__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__5007);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__5014 = (function (a,x){
a.push(x);

return a;
});
var G__5015 = [];
var G__5016 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5014,G__5015,G__5016) : cljs.core.reduce.call(null,G__5014,G__5015,G__5016));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__5017__i = 0, G__5017__a = new Array(arguments.length -  2);
while (G__5017__i < G__5017__a.length) {G__5017__a[G__5017__i] = arguments[G__5017__i + 2]; ++G__5017__i;}
  args = new cljs.core.IndexedSeq(G__5017__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__5018){
var obj = cljs.core.first(arglist__5018);
arglist__5018 = cljs.core.next(arglist__5018);
var s = cljs.core.first(arglist__5018);
var args = cljs.core.rest(arglist__5018);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj5020 = {};
return obj5020;
})();


cljs.core.IFn = (function (){var obj5022 = {};
return obj5022;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5068 = x__4416__auto__;
return goog.typeOf(G__5068);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5070 = x__4416__auto__;
return goog.typeOf(G__5070);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5072 = x__4416__auto__;
return goog.typeOf(G__5072);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5074 = x__4416__auto__;
return goog.typeOf(G__5074);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5076 = x__4416__auto__;
return goog.typeOf(G__5076);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5078 = x__4416__auto__;
return goog.typeOf(G__5078);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5080 = x__4416__auto__;
return goog.typeOf(G__5080);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5082 = x__4416__auto__;
return goog.typeOf(G__5082);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5084 = x__4416__auto__;
return goog.typeOf(G__5084);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5086 = x__4416__auto__;
return goog.typeOf(G__5086);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5088 = x__4416__auto__;
return goog.typeOf(G__5088);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5090 = x__4416__auto__;
return goog.typeOf(G__5090);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5092 = x__4416__auto__;
return goog.typeOf(G__5092);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5094 = x__4416__auto__;
return goog.typeOf(G__5094);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5096 = x__4416__auto__;
return goog.typeOf(G__5096);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5098 = x__4416__auto__;
return goog.typeOf(G__5098);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5100 = x__4416__auto__;
return goog.typeOf(G__5100);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5102 = x__4416__auto__;
return goog.typeOf(G__5102);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5104 = x__4416__auto__;
return goog.typeOf(G__5104);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5106 = x__4416__auto__;
return goog.typeOf(G__5106);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5108 = x__4416__auto__;
return goog.typeOf(G__5108);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__5110 = x__4416__auto__;
return goog.typeOf(G__5110);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj5112 = {};
return obj5112;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3760__auto__ = value;
if(and__3760__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3760__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4416__auto__ = (((value == null))?null:value);
return (function (){var or__3772__auto__ = (cljs.core._clone[(function (){var G__5116 = x__4416__auto__;
return goog.typeOf(G__5116);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._clone["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj5118 = {};
return obj5118;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._count[(function (){var G__5122 = x__4416__auto__;
return goog.typeOf(G__5122);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._count["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj5124 = {};
return obj5124;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._empty[(function (){var G__5128 = x__4416__auto__;
return goog.typeOf(G__5128);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._empty["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj5130 = {};
return obj5130;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._conj[(function (){var G__5134 = x__4416__auto__;
return goog.typeOf(G__5134);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._conj["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj5136 = {};
return obj5136;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._nth[(function (){var G__5142 = x__4416__auto__;
return goog.typeOf(G__5142);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._nth["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._nth[(function (){var G__5144 = x__4416__auto__;
return goog.typeOf(G__5144);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._nth["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj5146 = {};
return obj5146;
})();


cljs.core.ISeq = (function (){var obj5148 = {};
return obj5148;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._first[(function (){var G__5152 = x__4416__auto__;
return goog.typeOf(G__5152);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._first["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._rest[(function (){var G__5156 = x__4416__auto__;
return goog.typeOf(G__5156);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._rest["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj5158 = {};
return obj5158;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._next[(function (){var G__5162 = x__4416__auto__;
return goog.typeOf(G__5162);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._next["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj5164 = {};
return obj5164;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._lookup[(function (){var G__5170 = x__4416__auto__;
return goog.typeOf(G__5170);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._lookup["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._lookup[(function (){var G__5172 = x__4416__auto__;
return goog.typeOf(G__5172);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._lookup["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj5174 = {};
return obj5174;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__5178 = x__4416__auto__;
return goog.typeOf(G__5178);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._assoc[(function (){var G__5182 = x__4416__auto__;
return goog.typeOf(G__5182);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj5184 = {};
return obj5184;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._dissoc[(function (){var G__5188 = x__4416__auto__;
return goog.typeOf(G__5188);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj5190 = {};
return obj5190;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._key[(function (){var G__5194 = x__4416__auto__;
return goog.typeOf(G__5194);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._key["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._val[(function (){var G__5198 = x__4416__auto__;
return goog.typeOf(G__5198);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._val["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj5200 = {};
return obj5200;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._disjoin[(function (){var G__5204 = x__4416__auto__;
return goog.typeOf(G__5204);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj5206 = {};
return obj5206;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._peek[(function (){var G__5210 = x__4416__auto__;
return goog.typeOf(G__5210);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._peek["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._pop[(function (){var G__5214 = x__4416__auto__;
return goog.typeOf(G__5214);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._pop["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj5216 = {};
return obj5216;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._assoc_n[(function (){var G__5220 = x__4416__auto__;
return goog.typeOf(G__5220);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj5222 = {};
return obj5222;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._deref[(function (){var G__5226 = x__4416__auto__;
return goog.typeOf(G__5226);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._deref["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj5228 = {};
return obj5228;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._deref_with_timeout[(function (){var G__5232 = x__4416__auto__;
return goog.typeOf(G__5232);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj5234 = {};
return obj5234;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._meta[(function (){var G__5238 = x__4416__auto__;
return goog.typeOf(G__5238);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._meta["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj5240 = {};
return obj5240;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._with_meta[(function (){var G__5244 = x__4416__auto__;
return goog.typeOf(G__5244);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj5246 = {};
return obj5246;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._reduce[(function (){var G__5252 = x__4416__auto__;
return goog.typeOf(G__5252);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reduce["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._reduce[(function (){var G__5254 = x__4416__auto__;
return goog.typeOf(G__5254);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reduce["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj5256 = {};
return obj5256;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._kv_reduce[(function (){var G__5260 = x__4416__auto__;
return goog.typeOf(G__5260);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj5262 = {};
return obj5262;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._equiv[(function (){var G__5266 = x__4416__auto__;
return goog.typeOf(G__5266);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._equiv["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj5268 = {};
return obj5268;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._hash[(function (){var G__5272 = x__4416__auto__;
return goog.typeOf(G__5272);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._hash["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj5274 = {};
return obj5274;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._seq[(function (){var G__5278 = x__4416__auto__;
return goog.typeOf(G__5278);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._seq["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj5280 = {};
return obj5280;
})();


cljs.core.IList = (function (){var obj5282 = {};
return obj5282;
})();


cljs.core.IRecord = (function (){var obj5284 = {};
return obj5284;
})();


cljs.core.IReversible = (function (){var obj5286 = {};
return obj5286;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._rseq[(function (){var G__5290 = x__4416__auto__;
return goog.typeOf(G__5290);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._rseq["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj5292 = {};
return obj5292;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._sorted_seq[(function (){var G__5296 = x__4416__auto__;
return goog.typeOf(G__5296);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._sorted_seq_from[(function (){var G__5300 = x__4416__auto__;
return goog.typeOf(G__5300);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._entry_key[(function (){var G__5304 = x__4416__auto__;
return goog.typeOf(G__5304);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._comparator[(function (){var G__5308 = x__4416__auto__;
return goog.typeOf(G__5308);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._comparator["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj5310 = {};
return obj5310;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3760__auto__ = writer;
if(and__3760__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3760__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4416__auto__ = (((writer == null))?null:writer);
return (function (){var or__3772__auto__ = (cljs.core._write[(function (){var G__5314 = x__4416__auto__;
return goog.typeOf(G__5314);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._write["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3760__auto__ = writer;
if(and__3760__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3760__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4416__auto__ = (((writer == null))?null:writer);
return (function (){var or__3772__auto__ = (cljs.core._flush[(function (){var G__5318 = x__4416__auto__;
return goog.typeOf(G__5318);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._flush["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj5320 = {};
return obj5320;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._pr_writer[(function (){var G__5324 = x__4416__auto__;
return goog.typeOf(G__5324);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj5326 = {};
return obj5326;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3760__auto__ = d;
if(and__3760__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3760__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4416__auto__ = (((d == null))?null:d);
return (function (){var or__3772__auto__ = (cljs.core._realized_QMARK_[(function (){var G__5330 = x__4416__auto__;
return goog.typeOf(G__5330);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj5332 = {};
return obj5332;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._notify_watches[(function (){var G__5336 = x__4416__auto__;
return goog.typeOf(G__5336);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._add_watch[(function (){var G__5340 = x__4416__auto__;
return goog.typeOf(G__5340);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._remove_watch[(function (){var G__5344 = x__4416__auto__;
return goog.typeOf(G__5344);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj5346 = {};
return obj5346;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._as_transient[(function (){var G__5350 = x__4416__auto__;
return goog.typeOf(G__5350);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj5352 = {};
return obj5352;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._conj_BANG_[(function (){var G__5356 = x__4416__auto__;
return goog.typeOf(G__5356);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._persistent_BANG_[(function (){var G__5360 = x__4416__auto__;
return goog.typeOf(G__5360);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj5362 = {};
return obj5362;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._assoc_BANG_[(function (){var G__5366 = x__4416__auto__;
return goog.typeOf(G__5366);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj5368 = {};
return obj5368;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__5372 = x__4416__auto__;
return goog.typeOf(G__5372);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj5374 = {};
return obj5374;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__5378 = x__4416__auto__;
return goog.typeOf(G__5378);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._pop_BANG_[(function (){var G__5382 = x__4416__auto__;
return goog.typeOf(G__5382);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj5384 = {};
return obj5384;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__5388 = x__4416__auto__;
return goog.typeOf(G__5388);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj5390 = {};
return obj5390;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._compare[(function (){var G__5394 = x__4416__auto__;
return goog.typeOf(G__5394);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._compare["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj5396 = {};
return obj5396;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._drop_first[(function (){var G__5400 = x__4416__auto__;
return goog.typeOf(G__5400);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj5402 = {};
return obj5402;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._chunked_first[(function (){var G__5406 = x__4416__auto__;
return goog.typeOf(G__5406);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._chunked_rest[(function (){var G__5410 = x__4416__auto__;
return goog.typeOf(G__5410);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj5412 = {};
return obj5412;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._chunked_next[(function (){var G__5416 = x__4416__auto__;
return goog.typeOf(G__5416);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj5418 = {};
return obj5418;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._name[(function (){var G__5422 = x__4416__auto__;
return goog.typeOf(G__5422);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._name["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._namespace[(function (){var G__5426 = x__4416__auto__;
return goog.typeOf(G__5426);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._namespace["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj5428 = {};
return obj5428;
})();


cljs.core.IReset = (function (){var obj5430 = {};
return obj5430;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._reset_BANG_[(function (){var G__5434 = x__4416__auto__;
return goog.typeOf(G__5434);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj5436 = {};
return obj5436;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__5446 = x__4416__auto__;
return goog.typeOf(G__5446);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__5448 = x__4416__auto__;
return goog.typeOf(G__5448);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__5450 = x__4416__auto__;
return goog.typeOf(G__5450);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__5452 = x__4416__auto__;
return goog.typeOf(G__5452);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj5454 = {};
return obj5454;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._vreset_BANG_[(function (){var G__5458 = x__4416__auto__;
return goog.typeOf(G__5458);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj5460 = {};
return obj5460;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._iterator[(function (){var G__5464 = x__4416__auto__;
return goog.typeOf(G__5464);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._iterator["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__5467 = (4294967295);
var G__5468 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5467,G__5468) : Math.imul.call(null,G__5467,G__5468));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__5471 = a;
var G__5472 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5471,G__5472) : Math.imul.call(null,G__5471,G__5472));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__5473 = (i + (2));
var G__5474 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__5473;
h1 = G__5474;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj5476 = {};
return obj5476;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__5477 = (i + (1));
var G__5478 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__5477;
hash = G__5478;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj5482 = {};
return obj5482;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__5485 = o;
if(G__5485){
var bit__4446__auto__ = (G__5485.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4446__auto__) || (G__5485.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__5486 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5486) : Math.floor.call(null,G__5486));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3760__auto__ = cljs.core.not(a.ns);
if(and__3760__auto__){
return b.ns;
} else {
return and__3760__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__5493 = a.ns;
var G__5494 = b.ns;
return goog.array.defaultCompare(G__5493,G__5494);
})();
if(((0) === nsc)){
var G__5495 = a.name;
var G__5496 = b.name;
return goog.array.defaultCompare(G__5495,G__5496);
} else {
return nsc;
}
}
} else {
var G__5497 = a.name;
var G__5498 = b.name;
return goog.array.defaultCompare(G__5497,G__5498);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4193__auto__ = self__._hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__5500 = null;
var G__5500__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__5500__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__5500 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__5500__2.call(this,self__,coll);
case 3:
return G__5500__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5500.cljs$core$IFn$_invoke$arity$2 = G__5500__2;
G__5500.cljs$core$IFn$_invoke$arity$3 = G__5500__3;
return G__5500;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args5499){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5499)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__5548 = null;
var G__5548__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__5548__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__5548__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__5548__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__5548__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__5548__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__5548__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__5548__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__5548__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__5548__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__5548__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__5548__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__5548__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__5548__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__5548__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__5548__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__5548__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__5548__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__5548__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__5548__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__5548__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__5548__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5504 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5505 = a;
var G__5506 = b;
var G__5507 = c;
var G__5508 = d;
var G__5509 = e;
var G__5510 = f;
var G__5511 = g;
var G__5512 = h;
var G__5513 = i;
var G__5514 = j;
var G__5515 = k;
var G__5516 = l;
var G__5517 = m;
var G__5518 = n;
var G__5519 = o;
var G__5520 = p;
var G__5521 = q;
var G__5522 = r;
var G__5523 = s;
var G__5524 = t;
var G__5525 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5504,G__5505,G__5506,G__5507,G__5508,G__5509,G__5510,G__5511,G__5512,G__5513,G__5514,G__5515,G__5516,G__5517,G__5518,G__5519,G__5520,G__5521,G__5522,G__5523,G__5524,G__5525) : cljs.core.apply.call(null,G__5504,G__5505,G__5506,G__5507,G__5508,G__5509,G__5510,G__5511,G__5512,G__5513,G__5514,G__5515,G__5516,G__5517,G__5518,G__5519,G__5520,G__5521,G__5522,G__5523,G__5524,G__5525));
});
G__5548 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__5548__1.call(this,self__);
case 2:
return G__5548__2.call(this,self__,a);
case 3:
return G__5548__3.call(this,self__,a,b);
case 4:
return G__5548__4.call(this,self__,a,b,c);
case 5:
return G__5548__5.call(this,self__,a,b,c,d);
case 6:
return G__5548__6.call(this,self__,a,b,c,d,e);
case 7:
return G__5548__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__5548__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__5548__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__5548__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__5548__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__5548__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__5548__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__5548__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__5548__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__5548__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__5548__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__5548__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__5548__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__5548__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__5548__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__5548__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5548.cljs$core$IFn$_invoke$arity$1 = G__5548__1;
G__5548.cljs$core$IFn$_invoke$arity$2 = G__5548__2;
G__5548.cljs$core$IFn$_invoke$arity$3 = G__5548__3;
G__5548.cljs$core$IFn$_invoke$arity$4 = G__5548__4;
G__5548.cljs$core$IFn$_invoke$arity$5 = G__5548__5;
G__5548.cljs$core$IFn$_invoke$arity$6 = G__5548__6;
G__5548.cljs$core$IFn$_invoke$arity$7 = G__5548__7;
G__5548.cljs$core$IFn$_invoke$arity$8 = G__5548__8;
G__5548.cljs$core$IFn$_invoke$arity$9 = G__5548__9;
G__5548.cljs$core$IFn$_invoke$arity$10 = G__5548__10;
G__5548.cljs$core$IFn$_invoke$arity$11 = G__5548__11;
G__5548.cljs$core$IFn$_invoke$arity$12 = G__5548__12;
G__5548.cljs$core$IFn$_invoke$arity$13 = G__5548__13;
G__5548.cljs$core$IFn$_invoke$arity$14 = G__5548__14;
G__5548.cljs$core$IFn$_invoke$arity$15 = G__5548__15;
G__5548.cljs$core$IFn$_invoke$arity$16 = G__5548__16;
G__5548.cljs$core$IFn$_invoke$arity$17 = G__5548__17;
G__5548.cljs$core$IFn$_invoke$arity$18 = G__5548__18;
G__5548.cljs$core$IFn$_invoke$arity$19 = G__5548__19;
G__5548.cljs$core$IFn$_invoke$arity$20 = G__5548__20;
G__5548.cljs$core$IFn$_invoke$arity$21 = G__5548__21;
G__5548.cljs$core$IFn$_invoke$arity$22 = G__5548__22;
return G__5548;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args5503){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5503)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__5526 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5527 = a;
var G__5528 = b;
var G__5529 = c;
var G__5530 = d;
var G__5531 = e;
var G__5532 = f;
var G__5533 = g;
var G__5534 = h;
var G__5535 = i;
var G__5536 = j;
var G__5537 = k;
var G__5538 = l;
var G__5539 = m;
var G__5540 = n;
var G__5541 = o;
var G__5542 = p;
var G__5543 = q;
var G__5544 = r;
var G__5545 = s;
var G__5546 = t;
var G__5547 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5526,G__5527,G__5528,G__5529,G__5530,G__5531,G__5532,G__5533,G__5534,G__5535,G__5536,G__5537,G__5538,G__5539,G__5540,G__5541,G__5542,G__5543,G__5544,G__5545,G__5546,G__5547) : cljs.core.apply.call(null,G__5526,G__5527,G__5528,G__5529,G__5530,G__5531,G__5532,G__5533,G__5534,G__5535,G__5536,G__5537,G__5538,G__5539,G__5540,G__5541,G__5542,G__5543,G__5544,G__5545,G__5546,G__5547));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__5550 = x;
if(G__5550){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__5550.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__5550.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5550);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5550);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__5552 = value;
if(G__5552){
var bit__4453__auto__ = (G__5552.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4453__auto__) || (G__5552.cljs$core$ICloneable$)){
return true;
} else {
if((!G__5552.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5552);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5552);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5554 = coll;
if(G__5554){
var bit__4446__auto__ = (G__5554.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4446__auto__) || (G__5554.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5556 = coll;
if(G__5556){
var bit__4446__auto__ = (G__5556.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__5556.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__5558 = coll;
if(G__5558){
var bit__4446__auto__ = (G__5558.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__5558.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5560 = coll;
if(G__5560){
var bit__4446__auto__ = (G__5560.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4446__auto__) || (G__5560.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__5565__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__5566 = y;
var G__5567 = cljs.core.first(more);
var G__5568 = cljs.core.next(more);
x = G__5566;
y = G__5567;
more = G__5568;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__5565 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__5569__i = 0, G__5569__a = new Array(arguments.length -  2);
while (G__5569__i < G__5569__a.length) {G__5569__a[G__5569__i] = arguments[G__5569__i + 2]; ++G__5569__i;}
  more = new cljs.core.IndexedSeq(G__5569__a,0);
} 
return G__5565__delegate.call(this,x,y,more);};
G__5565.cljs$lang$maxFixedArity = 2;
G__5565.cljs$lang$applyTo = (function (arglist__5570){
var x = cljs.core.first(arglist__5570);
arglist__5570 = cljs.core.next(arglist__5570);
var y = cljs.core.first(arglist__5570);
var more = cljs.core.rest(arglist__5570);
return G__5565__delegate(x,y,more);
});
G__5565.cljs$core$IFn$_invoke$arity$variadic = G__5565__delegate;
return G__5565;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__5571 = null;
if (arguments.length > 2) {
var G__5572__i = 0, G__5572__a = new Array(arguments.length -  2);
while (G__5572__i < G__5572__a.length) {G__5572__a[G__5572__i] = arguments[G__5572__i + 2]; ++G__5572__i;}
G__5571 = new cljs.core.IndexedSeq(G__5572__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__5571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__5573 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5573) : cljs.core.es6_iterator_seq.call(null,G__5573));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5574 = (n + (1));
var G__5575 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5576 = cljs.core.next(coll__$1);
n = G__5574;
hash_code = G__5575;
coll__$1 = G__5576;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5577 = (n + (1));
var G__5578 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5579 = cljs.core.next(coll__$1);
n = G__5577;
hash_code = G__5578;
coll__$1 = G__5579;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__5580 = o;
return goog.getUid(G__5580);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__5582 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5582) : cljs.core.deref.call(null,G__5582));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5589 = val;
var G__5590 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5589,G__5590) : f.call(null,G__5589,G__5590));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5595 = nval;
var G__5596 = (n + (1));
val = G__5595;
n = G__5596;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5591 = val__$1;
var G__5592 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5591,G__5592) : f.call(null,G__5591,G__5592));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5597 = nval;
var G__5598 = (n + (1));
val__$1 = G__5597;
n = G__5598;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5593 = val__$1;
var G__5594 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5593,G__5594) : f.call(null,G__5593,G__5594));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5599 = nval;
var G__5600 = (n + (1));
val__$1 = G__5599;
n = G__5600;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5607 = val;
var G__5608 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5607,G__5608) : f.call(null,G__5607,G__5608));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5613 = nval;
var G__5614 = (n + (1));
val = G__5613;
n = G__5614;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5609 = val__$1;
var G__5610 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5609,G__5610) : f.call(null,G__5609,G__5610));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5615 = nval;
var G__5616 = (n + (1));
val__$1 = G__5615;
n = G__5616;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5611 = val__$1;
var G__5612 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5611,G__5612) : f.call(null,G__5611,G__5612));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5617 = nval;
var G__5618 = (n + (1));
val__$1 = G__5617;
n = G__5618;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__5620 = x;
if(G__5620){
var bit__4453__auto__ = (G__5620.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4453__auto__) || (G__5620.cljs$core$ICounted$)){
return true;
} else {
if((!G__5620.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5620);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5620);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__5622 = x;
if(G__5622){
var bit__4453__auto__ = (G__5622.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4453__auto__) || (G__5622.cljs$core$IIndexed$)){
return true;
} else {
if((!G__5622.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5622);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5622);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5623 = coll__$1;
var G__5624 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5623,G__5624) : cljs.core.equiv_sequential.call(null,G__5623,G__5624));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5625 = o;
var G__5626 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5625,G__5626) : cljs.core.cons.call(null,G__5625,G__5626));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5629 = coll__$1;
var G__5630 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5629,G__5630) : cljs.core.equiv_sequential.call(null,G__5629,G__5630));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__5631 = cljs.core.List.EMPTY;
var G__5632 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5631,G__5632) : cljs.core.with_meta.call(null,G__5631,G__5632));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__5633 = f;
var G__5634 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5633,G__5634) : cljs.core.seq_reduce.call(null,G__5633,G__5634));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__5635 = f;
var G__5636 = start;
var G__5637 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5635,G__5636,G__5637) : cljs.core.seq_reduce.call(null,G__5635,G__5636,G__5637));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5638 = o;
var G__5639 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5638,G__5639) : cljs.core.cons.call(null,G__5638,G__5639));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__5640 = sn;
s = G__5640;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__5645__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__5646 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__5647 = cljs.core.first(xs);
var G__5648 = cljs.core.next(xs);
coll = G__5646;
x = G__5647;
xs = G__5648;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__5645 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__5649__i = 0, G__5649__a = new Array(arguments.length -  2);
while (G__5649__i < G__5649__a.length) {G__5649__a[G__5649__i] = arguments[G__5649__i + 2]; ++G__5649__i;}
  xs = new cljs.core.IndexedSeq(G__5649__a,0);
} 
return G__5645__delegate.call(this,coll,x,xs);};
G__5645.cljs$lang$maxFixedArity = 2;
G__5645.cljs$lang$applyTo = (function (arglist__5650){
var coll = cljs.core.first(arglist__5650);
arglist__5650 = cljs.core.next(arglist__5650);
var x = cljs.core.first(arglist__5650);
var xs = cljs.core.rest(arglist__5650);
return G__5645__delegate(coll,x,xs);
});
G__5645.cljs$core$IFn$_invoke$arity$variadic = G__5645__delegate;
return G__5645;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__5651 = null;
if (arguments.length > 2) {
var G__5652__i = 0, G__5652__a = new Array(arguments.length -  2);
while (G__5652__i < G__5652__a.length) {G__5652__a[G__5652__i] = arguments[G__5652__i + 2]; ++G__5652__i;}
G__5651 = new cljs.core.IndexedSeq(G__5652__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__5651);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__5653 = cljs.core.next(s);
var G__5654 = (acc + (1));
s = G__5653;
acc = G__5654;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__5656 = coll;
if(G__5656){
var bit__4446__auto__ = (G__5656.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4446__auto__) || (G__5656.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__5657 = cljs.core.next(coll);
var G__5658 = (n - (1));
coll = G__5657;
n = G__5658;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__5659 = cljs.core.next(coll);
var G__5660 = (n - (1));
var G__5661 = not_found;
coll = G__5659;
n = G__5660;
not_found = G__5661;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__5666 = coll;
if(G__5666){
var bit__4446__auto__ = (G__5666.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4446__auto__) || (G__5666.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5667 = coll;
if(G__5667){
var bit__4453__auto__ = (G__5667.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4453__auto__) || (G__5667.cljs$core$ISeq$)){
return true;
} else {
if((!G__5667.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5667);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5667);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__5668 = coll;
if(G__5668){
var bit__4446__auto__ = (G__5668.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4446__auto__) || (G__5668.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5669 = coll;
if(G__5669){
var bit__4453__auto__ = (G__5669.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4453__auto__) || (G__5669.cljs$core$ISeq$)){
return true;
} else {
if((!G__5669.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5669);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5669);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__5670 = (n__$1 - (1));
var G__5671 = cljs.core.rest(xs);
n__$1 = G__5670;
xs = G__5671;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__5674 = o;
if(G__5674){
var bit__4446__auto__ = (G__5674.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4446__auto__) || (G__5674.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__5675 = o;
if(G__5675){
var bit__4446__auto__ = (G__5675.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4446__auto__) || (G__5675.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__5679__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__5680 = ret;
var G__5681 = cljs.core.first(kvs);
var G__5682 = cljs.core.second(kvs);
var G__5683 = cljs.core.nnext(kvs);
coll = G__5680;
k = G__5681;
v = G__5682;
kvs = G__5683;
continue;
} else {
return ret;
}
break;
}
};
var G__5679 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__5684__i = 0, G__5684__a = new Array(arguments.length -  3);
while (G__5684__i < G__5684__a.length) {G__5684__a[G__5684__i] = arguments[G__5684__i + 3]; ++G__5684__i;}
  kvs = new cljs.core.IndexedSeq(G__5684__a,0);
} 
return G__5679__delegate.call(this,coll,k,v,kvs);};
G__5679.cljs$lang$maxFixedArity = 3;
G__5679.cljs$lang$applyTo = (function (arglist__5685){
var coll = cljs.core.first(arglist__5685);
arglist__5685 = cljs.core.next(arglist__5685);
var k = cljs.core.first(arglist__5685);
arglist__5685 = cljs.core.next(arglist__5685);
var v = cljs.core.first(arglist__5685);
var kvs = cljs.core.rest(arglist__5685);
return G__5679__delegate(coll,k,v,kvs);
});
G__5679.cljs$core$IFn$_invoke$arity$variadic = G__5679__delegate;
return G__5679;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__5686 = null;
if (arguments.length > 3) {
var G__5687__i = 0, G__5687__a = new Array(arguments.length -  3);
while (G__5687__i < G__5687__a.length) {G__5687__a[G__5687__i] = arguments[G__5687__i + 3]; ++G__5687__i;}
G__5686 = new cljs.core.IndexedSeq(G__5687__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__5686);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__5690__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__5691 = ret;
var G__5692 = cljs.core.first(ks);
var G__5693 = cljs.core.next(ks);
coll = G__5691;
k = G__5692;
ks = G__5693;
continue;
} else {
return ret;
}
}
break;
}
};
var G__5690 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__5694__i = 0, G__5694__a = new Array(arguments.length -  2);
while (G__5694__i < G__5694__a.length) {G__5694__a[G__5694__i] = arguments[G__5694__i + 2]; ++G__5694__i;}
  ks = new cljs.core.IndexedSeq(G__5694__a,0);
} 
return G__5690__delegate.call(this,coll,k,ks);};
G__5690.cljs$lang$maxFixedArity = 2;
G__5690.cljs$lang$applyTo = (function (arglist__5695){
var coll = cljs.core.first(arglist__5695);
arglist__5695 = cljs.core.next(arglist__5695);
var k = cljs.core.first(arglist__5695);
var ks = cljs.core.rest(arglist__5695);
return G__5690__delegate(coll,k,ks);
});
G__5690.cljs$core$IFn$_invoke$arity$variadic = G__5690__delegate;
return G__5690;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__5696 = null;
if (arguments.length > 2) {
var G__5697__i = 0, G__5697__a = new Array(arguments.length -  2);
while (G__5697__i < G__5697__a.length) {G__5697__a[G__5697__i] = arguments[G__5697__i + 2]; ++G__5697__i;}
G__5696 = new cljs.core.IndexedSeq(G__5697__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__5696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3772__auto__ = (function (){var G__5702 = f;
return goog.isFunction(G__5702);
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__5703 = f;
if(G__5703){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto____$1 = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
return G__5703.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__5703.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__5703);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__5703);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__6169 = null;
var G__6169__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__6169__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5705 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5705) : self__.afn.call(null,G__5705));
});
var G__6169__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5706 = a;
var G__5707 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5706,G__5707) : self__.afn.call(null,G__5706,G__5707));
});
var G__6169__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5708 = a;
var G__5709 = b;
var G__5710 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5708,G__5709,G__5710) : self__.afn.call(null,G__5708,G__5709,G__5710));
});
var G__6169__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5711 = a;
var G__5712 = b;
var G__5713 = c;
var G__5714 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5711,G__5712,G__5713,G__5714) : self__.afn.call(null,G__5711,G__5712,G__5713,G__5714));
});
var G__6169__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5715 = a;
var G__5716 = b;
var G__5717 = c;
var G__5718 = d;
var G__5719 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5715,G__5716,G__5717,G__5718,G__5719) : self__.afn.call(null,G__5715,G__5716,G__5717,G__5718,G__5719));
});
var G__6169__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5720 = a;
var G__5721 = b;
var G__5722 = c;
var G__5723 = d;
var G__5724 = e;
var G__5725 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5720,G__5721,G__5722,G__5723,G__5724,G__5725) : self__.afn.call(null,G__5720,G__5721,G__5722,G__5723,G__5724,G__5725));
});
var G__6169__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5726 = a;
var G__5727 = b;
var G__5728 = c;
var G__5729 = d;
var G__5730 = e;
var G__5731 = f;
var G__5732 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5726,G__5727,G__5728,G__5729,G__5730,G__5731,G__5732) : self__.afn.call(null,G__5726,G__5727,G__5728,G__5729,G__5730,G__5731,G__5732));
});
var G__6169__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5733 = a;
var G__5734 = b;
var G__5735 = c;
var G__5736 = d;
var G__5737 = e;
var G__5738 = f;
var G__5739 = g;
var G__5740 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5733,G__5734,G__5735,G__5736,G__5737,G__5738,G__5739,G__5740) : self__.afn.call(null,G__5733,G__5734,G__5735,G__5736,G__5737,G__5738,G__5739,G__5740));
});
var G__6169__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5741 = a;
var G__5742 = b;
var G__5743 = c;
var G__5744 = d;
var G__5745 = e;
var G__5746 = f;
var G__5747 = g;
var G__5748 = h;
var G__5749 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5741,G__5742,G__5743,G__5744,G__5745,G__5746,G__5747,G__5748,G__5749) : self__.afn.call(null,G__5741,G__5742,G__5743,G__5744,G__5745,G__5746,G__5747,G__5748,G__5749));
});
var G__6169__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5750 = a;
var G__5751 = b;
var G__5752 = c;
var G__5753 = d;
var G__5754 = e;
var G__5755 = f;
var G__5756 = g;
var G__5757 = h;
var G__5758 = i;
var G__5759 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5750,G__5751,G__5752,G__5753,G__5754,G__5755,G__5756,G__5757,G__5758,G__5759) : self__.afn.call(null,G__5750,G__5751,G__5752,G__5753,G__5754,G__5755,G__5756,G__5757,G__5758,G__5759));
});
var G__6169__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5760 = a;
var G__5761 = b;
var G__5762 = c;
var G__5763 = d;
var G__5764 = e;
var G__5765 = f;
var G__5766 = g;
var G__5767 = h;
var G__5768 = i;
var G__5769 = j;
var G__5770 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5760,G__5761,G__5762,G__5763,G__5764,G__5765,G__5766,G__5767,G__5768,G__5769,G__5770) : self__.afn.call(null,G__5760,G__5761,G__5762,G__5763,G__5764,G__5765,G__5766,G__5767,G__5768,G__5769,G__5770));
});
var G__6169__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5771 = a;
var G__5772 = b;
var G__5773 = c;
var G__5774 = d;
var G__5775 = e;
var G__5776 = f;
var G__5777 = g;
var G__5778 = h;
var G__5779 = i;
var G__5780 = j;
var G__5781 = k;
var G__5782 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__5771,G__5772,G__5773,G__5774,G__5775,G__5776,G__5777,G__5778,G__5779,G__5780,G__5781,G__5782) : self__.afn.call(null,G__5771,G__5772,G__5773,G__5774,G__5775,G__5776,G__5777,G__5778,G__5779,G__5780,G__5781,G__5782));
});
var G__6169__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5783 = a;
var G__5784 = b;
var G__5785 = c;
var G__5786 = d;
var G__5787 = e;
var G__5788 = f;
var G__5789 = g;
var G__5790 = h;
var G__5791 = i;
var G__5792 = j;
var G__5793 = k;
var G__5794 = l;
var G__5795 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__5783,G__5784,G__5785,G__5786,G__5787,G__5788,G__5789,G__5790,G__5791,G__5792,G__5793,G__5794,G__5795) : self__.afn.call(null,G__5783,G__5784,G__5785,G__5786,G__5787,G__5788,G__5789,G__5790,G__5791,G__5792,G__5793,G__5794,G__5795));
});
var G__6169__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5796 = a;
var G__5797 = b;
var G__5798 = c;
var G__5799 = d;
var G__5800 = e;
var G__5801 = f;
var G__5802 = g;
var G__5803 = h;
var G__5804 = i;
var G__5805 = j;
var G__5806 = k;
var G__5807 = l;
var G__5808 = m;
var G__5809 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__5796,G__5797,G__5798,G__5799,G__5800,G__5801,G__5802,G__5803,G__5804,G__5805,G__5806,G__5807,G__5808,G__5809) : self__.afn.call(null,G__5796,G__5797,G__5798,G__5799,G__5800,G__5801,G__5802,G__5803,G__5804,G__5805,G__5806,G__5807,G__5808,G__5809));
});
var G__6169__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5810 = a;
var G__5811 = b;
var G__5812 = c;
var G__5813 = d;
var G__5814 = e;
var G__5815 = f;
var G__5816 = g;
var G__5817 = h;
var G__5818 = i;
var G__5819 = j;
var G__5820 = k;
var G__5821 = l;
var G__5822 = m;
var G__5823 = n;
var G__5824 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__5810,G__5811,G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821,G__5822,G__5823,G__5824) : self__.afn.call(null,G__5810,G__5811,G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821,G__5822,G__5823,G__5824));
});
var G__6169__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5825 = a;
var G__5826 = b;
var G__5827 = c;
var G__5828 = d;
var G__5829 = e;
var G__5830 = f;
var G__5831 = g;
var G__5832 = h;
var G__5833 = i;
var G__5834 = j;
var G__5835 = k;
var G__5836 = l;
var G__5837 = m;
var G__5838 = n;
var G__5839 = o;
var G__5840 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__5825,G__5826,G__5827,G__5828,G__5829,G__5830,G__5831,G__5832,G__5833,G__5834,G__5835,G__5836,G__5837,G__5838,G__5839,G__5840) : self__.afn.call(null,G__5825,G__5826,G__5827,G__5828,G__5829,G__5830,G__5831,G__5832,G__5833,G__5834,G__5835,G__5836,G__5837,G__5838,G__5839,G__5840));
});
var G__6169__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5841 = a;
var G__5842 = b;
var G__5843 = c;
var G__5844 = d;
var G__5845 = e;
var G__5846 = f;
var G__5847 = g;
var G__5848 = h;
var G__5849 = i;
var G__5850 = j;
var G__5851 = k;
var G__5852 = l;
var G__5853 = m;
var G__5854 = n;
var G__5855 = o;
var G__5856 = p;
var G__5857 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__5841,G__5842,G__5843,G__5844,G__5845,G__5846,G__5847,G__5848,G__5849,G__5850,G__5851,G__5852,G__5853,G__5854,G__5855,G__5856,G__5857) : self__.afn.call(null,G__5841,G__5842,G__5843,G__5844,G__5845,G__5846,G__5847,G__5848,G__5849,G__5850,G__5851,G__5852,G__5853,G__5854,G__5855,G__5856,G__5857));
});
var G__6169__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5858 = a;
var G__5859 = b;
var G__5860 = c;
var G__5861 = d;
var G__5862 = e;
var G__5863 = f;
var G__5864 = g;
var G__5865 = h;
var G__5866 = i;
var G__5867 = j;
var G__5868 = k;
var G__5869 = l;
var G__5870 = m;
var G__5871 = n;
var G__5872 = o;
var G__5873 = p;
var G__5874 = q;
var G__5875 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__5858,G__5859,G__5860,G__5861,G__5862,G__5863,G__5864,G__5865,G__5866,G__5867,G__5868,G__5869,G__5870,G__5871,G__5872,G__5873,G__5874,G__5875) : self__.afn.call(null,G__5858,G__5859,G__5860,G__5861,G__5862,G__5863,G__5864,G__5865,G__5866,G__5867,G__5868,G__5869,G__5870,G__5871,G__5872,G__5873,G__5874,G__5875));
});
var G__6169__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5876 = a;
var G__5877 = b;
var G__5878 = c;
var G__5879 = d;
var G__5880 = e;
var G__5881 = f;
var G__5882 = g;
var G__5883 = h;
var G__5884 = i;
var G__5885 = j;
var G__5886 = k;
var G__5887 = l;
var G__5888 = m;
var G__5889 = n;
var G__5890 = o;
var G__5891 = p;
var G__5892 = q;
var G__5893 = r;
var G__5894 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__5876,G__5877,G__5878,G__5879,G__5880,G__5881,G__5882,G__5883,G__5884,G__5885,G__5886,G__5887,G__5888,G__5889,G__5890,G__5891,G__5892,G__5893,G__5894) : self__.afn.call(null,G__5876,G__5877,G__5878,G__5879,G__5880,G__5881,G__5882,G__5883,G__5884,G__5885,G__5886,G__5887,G__5888,G__5889,G__5890,G__5891,G__5892,G__5893,G__5894));
});
var G__6169__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5895 = a;
var G__5896 = b;
var G__5897 = c;
var G__5898 = d;
var G__5899 = e;
var G__5900 = f;
var G__5901 = g;
var G__5902 = h;
var G__5903 = i;
var G__5904 = j;
var G__5905 = k;
var G__5906 = l;
var G__5907 = m;
var G__5908 = n;
var G__5909 = o;
var G__5910 = p;
var G__5911 = q;
var G__5912 = r;
var G__5913 = s;
var G__5914 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__5895,G__5896,G__5897,G__5898,G__5899,G__5900,G__5901,G__5902,G__5903,G__5904,G__5905,G__5906,G__5907,G__5908,G__5909,G__5910,G__5911,G__5912,G__5913,G__5914) : self__.afn.call(null,G__5895,G__5896,G__5897,G__5898,G__5899,G__5900,G__5901,G__5902,G__5903,G__5904,G__5905,G__5906,G__5907,G__5908,G__5909,G__5910,G__5911,G__5912,G__5913,G__5914));
});
var G__6169__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5915 = self__.afn;
var G__5916 = a;
var G__5917 = b;
var G__5918 = c;
var G__5919 = d;
var G__5920 = e;
var G__5921 = f;
var G__5922 = g;
var G__5923 = h;
var G__5924 = i;
var G__5925 = j;
var G__5926 = k;
var G__5927 = l;
var G__5928 = m;
var G__5929 = n;
var G__5930 = o;
var G__5931 = p;
var G__5932 = q;
var G__5933 = r;
var G__5934 = s;
var G__5935 = t;
var G__5936 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5915,G__5916,G__5917,G__5918,G__5919,G__5920,G__5921,G__5922,G__5923,G__5924,G__5925,G__5926,G__5927,G__5928,G__5929,G__5930,G__5931,G__5932,G__5933,G__5934,G__5935,G__5936) : cljs.core.apply.call(null,G__5915,G__5916,G__5917,G__5918,G__5919,G__5920,G__5921,G__5922,G__5923,G__5924,G__5925,G__5926,G__5927,G__5928,G__5929,G__5930,G__5931,G__5932,G__5933,G__5934,G__5935,G__5936));
});
G__6169 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6169__1.call(this,self__);
case 2:
return G__6169__2.call(this,self__,a);
case 3:
return G__6169__3.call(this,self__,a,b);
case 4:
return G__6169__4.call(this,self__,a,b,c);
case 5:
return G__6169__5.call(this,self__,a,b,c,d);
case 6:
return G__6169__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6169__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6169__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6169__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6169__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6169__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6169__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6169__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6169__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6169__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6169__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6169__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6169__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6169__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6169__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6169__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6169__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6169.cljs$core$IFn$_invoke$arity$1 = G__6169__1;
G__6169.cljs$core$IFn$_invoke$arity$2 = G__6169__2;
G__6169.cljs$core$IFn$_invoke$arity$3 = G__6169__3;
G__6169.cljs$core$IFn$_invoke$arity$4 = G__6169__4;
G__6169.cljs$core$IFn$_invoke$arity$5 = G__6169__5;
G__6169.cljs$core$IFn$_invoke$arity$6 = G__6169__6;
G__6169.cljs$core$IFn$_invoke$arity$7 = G__6169__7;
G__6169.cljs$core$IFn$_invoke$arity$8 = G__6169__8;
G__6169.cljs$core$IFn$_invoke$arity$9 = G__6169__9;
G__6169.cljs$core$IFn$_invoke$arity$10 = G__6169__10;
G__6169.cljs$core$IFn$_invoke$arity$11 = G__6169__11;
G__6169.cljs$core$IFn$_invoke$arity$12 = G__6169__12;
G__6169.cljs$core$IFn$_invoke$arity$13 = G__6169__13;
G__6169.cljs$core$IFn$_invoke$arity$14 = G__6169__14;
G__6169.cljs$core$IFn$_invoke$arity$15 = G__6169__15;
G__6169.cljs$core$IFn$_invoke$arity$16 = G__6169__16;
G__6169.cljs$core$IFn$_invoke$arity$17 = G__6169__17;
G__6169.cljs$core$IFn$_invoke$arity$18 = G__6169__18;
G__6169.cljs$core$IFn$_invoke$arity$19 = G__6169__19;
G__6169.cljs$core$IFn$_invoke$arity$20 = G__6169__20;
G__6169.cljs$core$IFn$_invoke$arity$21 = G__6169__21;
G__6169.cljs$core$IFn$_invoke$arity$22 = G__6169__22;
return G__6169;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args5704){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5704)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__5937 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5937) : self__.afn.call(null,G__5937));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__5938 = a;
var G__5939 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5938,G__5939) : self__.afn.call(null,G__5938,G__5939));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__5940 = a;
var G__5941 = b;
var G__5942 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5940,G__5941,G__5942) : self__.afn.call(null,G__5940,G__5941,G__5942));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__5943 = a;
var G__5944 = b;
var G__5945 = c;
var G__5946 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5943,G__5944,G__5945,G__5946) : self__.afn.call(null,G__5943,G__5944,G__5945,G__5946));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__5947 = a;
var G__5948 = b;
var G__5949 = c;
var G__5950 = d;
var G__5951 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5947,G__5948,G__5949,G__5950,G__5951) : self__.afn.call(null,G__5947,G__5948,G__5949,G__5950,G__5951));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__5952 = a;
var G__5953 = b;
var G__5954 = c;
var G__5955 = d;
var G__5956 = e;
var G__5957 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5952,G__5953,G__5954,G__5955,G__5956,G__5957) : self__.afn.call(null,G__5952,G__5953,G__5954,G__5955,G__5956,G__5957));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__5958 = a;
var G__5959 = b;
var G__5960 = c;
var G__5961 = d;
var G__5962 = e;
var G__5963 = f;
var G__5964 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5958,G__5959,G__5960,G__5961,G__5962,G__5963,G__5964) : self__.afn.call(null,G__5958,G__5959,G__5960,G__5961,G__5962,G__5963,G__5964));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__5965 = a;
var G__5966 = b;
var G__5967 = c;
var G__5968 = d;
var G__5969 = e;
var G__5970 = f;
var G__5971 = g;
var G__5972 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5965,G__5966,G__5967,G__5968,G__5969,G__5970,G__5971,G__5972) : self__.afn.call(null,G__5965,G__5966,G__5967,G__5968,G__5969,G__5970,G__5971,G__5972));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__5973 = a;
var G__5974 = b;
var G__5975 = c;
var G__5976 = d;
var G__5977 = e;
var G__5978 = f;
var G__5979 = g;
var G__5980 = h;
var G__5981 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5973,G__5974,G__5975,G__5976,G__5977,G__5978,G__5979,G__5980,G__5981) : self__.afn.call(null,G__5973,G__5974,G__5975,G__5976,G__5977,G__5978,G__5979,G__5980,G__5981));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__5982 = a;
var G__5983 = b;
var G__5984 = c;
var G__5985 = d;
var G__5986 = e;
var G__5987 = f;
var G__5988 = g;
var G__5989 = h;
var G__5990 = i;
var G__5991 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5982,G__5983,G__5984,G__5985,G__5986,G__5987,G__5988,G__5989,G__5990,G__5991) : self__.afn.call(null,G__5982,G__5983,G__5984,G__5985,G__5986,G__5987,G__5988,G__5989,G__5990,G__5991));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__5992 = a;
var G__5993 = b;
var G__5994 = c;
var G__5995 = d;
var G__5996 = e;
var G__5997 = f;
var G__5998 = g;
var G__5999 = h;
var G__6000 = i;
var G__6001 = j;
var G__6002 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5992,G__5993,G__5994,G__5995,G__5996,G__5997,G__5998,G__5999,G__6000,G__6001,G__6002) : self__.afn.call(null,G__5992,G__5993,G__5994,G__5995,G__5996,G__5997,G__5998,G__5999,G__6000,G__6001,G__6002));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__6003 = a;
var G__6004 = b;
var G__6005 = c;
var G__6006 = d;
var G__6007 = e;
var G__6008 = f;
var G__6009 = g;
var G__6010 = h;
var G__6011 = i;
var G__6012 = j;
var G__6013 = k;
var G__6014 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6003,G__6004,G__6005,G__6006,G__6007,G__6008,G__6009,G__6010,G__6011,G__6012,G__6013,G__6014) : self__.afn.call(null,G__6003,G__6004,G__6005,G__6006,G__6007,G__6008,G__6009,G__6010,G__6011,G__6012,G__6013,G__6014));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__6015 = a;
var G__6016 = b;
var G__6017 = c;
var G__6018 = d;
var G__6019 = e;
var G__6020 = f;
var G__6021 = g;
var G__6022 = h;
var G__6023 = i;
var G__6024 = j;
var G__6025 = k;
var G__6026 = l;
var G__6027 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6015,G__6016,G__6017,G__6018,G__6019,G__6020,G__6021,G__6022,G__6023,G__6024,G__6025,G__6026,G__6027) : self__.afn.call(null,G__6015,G__6016,G__6017,G__6018,G__6019,G__6020,G__6021,G__6022,G__6023,G__6024,G__6025,G__6026,G__6027));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__6028 = a;
var G__6029 = b;
var G__6030 = c;
var G__6031 = d;
var G__6032 = e;
var G__6033 = f;
var G__6034 = g;
var G__6035 = h;
var G__6036 = i;
var G__6037 = j;
var G__6038 = k;
var G__6039 = l;
var G__6040 = m;
var G__6041 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6028,G__6029,G__6030,G__6031,G__6032,G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041) : self__.afn.call(null,G__6028,G__6029,G__6030,G__6031,G__6032,G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__6042 = a;
var G__6043 = b;
var G__6044 = c;
var G__6045 = d;
var G__6046 = e;
var G__6047 = f;
var G__6048 = g;
var G__6049 = h;
var G__6050 = i;
var G__6051 = j;
var G__6052 = k;
var G__6053 = l;
var G__6054 = m;
var G__6055 = n;
var G__6056 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6042,G__6043,G__6044,G__6045,G__6046,G__6047,G__6048,G__6049,G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056) : self__.afn.call(null,G__6042,G__6043,G__6044,G__6045,G__6046,G__6047,G__6048,G__6049,G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__6057 = a;
var G__6058 = b;
var G__6059 = c;
var G__6060 = d;
var G__6061 = e;
var G__6062 = f;
var G__6063 = g;
var G__6064 = h;
var G__6065 = i;
var G__6066 = j;
var G__6067 = k;
var G__6068 = l;
var G__6069 = m;
var G__6070 = n;
var G__6071 = o;
var G__6072 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063,G__6064,G__6065,G__6066,G__6067,G__6068,G__6069,G__6070,G__6071,G__6072) : self__.afn.call(null,G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063,G__6064,G__6065,G__6066,G__6067,G__6068,G__6069,G__6070,G__6071,G__6072));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__6073 = a;
var G__6074 = b;
var G__6075 = c;
var G__6076 = d;
var G__6077 = e;
var G__6078 = f;
var G__6079 = g;
var G__6080 = h;
var G__6081 = i;
var G__6082 = j;
var G__6083 = k;
var G__6084 = l;
var G__6085 = m;
var G__6086 = n;
var G__6087 = o;
var G__6088 = p;
var G__6089 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6073,G__6074,G__6075,G__6076,G__6077,G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084,G__6085,G__6086,G__6087,G__6088,G__6089) : self__.afn.call(null,G__6073,G__6074,G__6075,G__6076,G__6077,G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084,G__6085,G__6086,G__6087,G__6088,G__6089));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__6090 = a;
var G__6091 = b;
var G__6092 = c;
var G__6093 = d;
var G__6094 = e;
var G__6095 = f;
var G__6096 = g;
var G__6097 = h;
var G__6098 = i;
var G__6099 = j;
var G__6100 = k;
var G__6101 = l;
var G__6102 = m;
var G__6103 = n;
var G__6104 = o;
var G__6105 = p;
var G__6106 = q;
var G__6107 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098,G__6099,G__6100,G__6101,G__6102,G__6103,G__6104,G__6105,G__6106,G__6107) : self__.afn.call(null,G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098,G__6099,G__6100,G__6101,G__6102,G__6103,G__6104,G__6105,G__6106,G__6107));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__6108 = a;
var G__6109 = b;
var G__6110 = c;
var G__6111 = d;
var G__6112 = e;
var G__6113 = f;
var G__6114 = g;
var G__6115 = h;
var G__6116 = i;
var G__6117 = j;
var G__6118 = k;
var G__6119 = l;
var G__6120 = m;
var G__6121 = n;
var G__6122 = o;
var G__6123 = p;
var G__6124 = q;
var G__6125 = r;
var G__6126 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6108,G__6109,G__6110,G__6111,G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123,G__6124,G__6125,G__6126) : self__.afn.call(null,G__6108,G__6109,G__6110,G__6111,G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123,G__6124,G__6125,G__6126));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__6127 = a;
var G__6128 = b;
var G__6129 = c;
var G__6130 = d;
var G__6131 = e;
var G__6132 = f;
var G__6133 = g;
var G__6134 = h;
var G__6135 = i;
var G__6136 = j;
var G__6137 = k;
var G__6138 = l;
var G__6139 = m;
var G__6140 = n;
var G__6141 = o;
var G__6142 = p;
var G__6143 = q;
var G__6144 = r;
var G__6145 = s;
var G__6146 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6127,G__6128,G__6129,G__6130,G__6131,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145,G__6146) : self__.afn.call(null,G__6127,G__6128,G__6129,G__6130,G__6131,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145,G__6146));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6147 = self__.afn;
var G__6148 = a;
var G__6149 = b;
var G__6150 = c;
var G__6151 = d;
var G__6152 = e;
var G__6153 = f;
var G__6154 = g;
var G__6155 = h;
var G__6156 = i;
var G__6157 = j;
var G__6158 = k;
var G__6159 = l;
var G__6160 = m;
var G__6161 = n;
var G__6162 = o;
var G__6163 = p;
var G__6164 = q;
var G__6165 = r;
var G__6166 = s;
var G__6167 = t;
var G__6168 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6147,G__6148,G__6149,G__6150,G__6151,G__6152,G__6153,G__6154,G__6155,G__6156,G__6157,G__6158,G__6159,G__6160,G__6161,G__6162,G__6163,G__6164,G__6165,G__6166,G__6167,G__6168) : cljs.core.apply.call(null,G__6147,G__6148,G__6149,G__6150,G__6151,G__6152,G__6153,G__6154,G__6155,G__6156,G__6157,G__6158,G__6159,G__6160,G__6161,G__6162,G__6163,G__6164,G__6165,G__6166,G__6167,G__6168));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__6173 = o;
if(G__6173){
var bit__4453__auto__ = (G__6173.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4453__auto__) || (G__6173.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__6173.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6173);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6173);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3760__auto__ = !((o == null));
if(and__3760__auto__){
var G__6177 = o;
if(G__6177){
var bit__4453__auto__ = (G__6177.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4453__auto__) || (G__6177.cljs$core$IMeta$)){
return true;
} else {
if((!G__6177.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6177);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6177);
}
} else {
return and__3760__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__6180__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6181 = ret;
var G__6182 = cljs.core.first(ks);
var G__6183 = cljs.core.next(ks);
coll = G__6181;
k = G__6182;
ks = G__6183;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6180 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6184__i = 0, G__6184__a = new Array(arguments.length -  2);
while (G__6184__i < G__6184__a.length) {G__6184__a[G__6184__i] = arguments[G__6184__i + 2]; ++G__6184__i;}
  ks = new cljs.core.IndexedSeq(G__6184__a,0);
} 
return G__6180__delegate.call(this,coll,k,ks);};
G__6180.cljs$lang$maxFixedArity = 2;
G__6180.cljs$lang$applyTo = (function (arglist__6185){
var coll = cljs.core.first(arglist__6185);
arglist__6185 = cljs.core.next(arglist__6185);
var k = cljs.core.first(arglist__6185);
var ks = cljs.core.rest(arglist__6185);
return G__6180__delegate(coll,k,ks);
});
G__6180.cljs$core$IFn$_invoke$arity$variadic = G__6180__delegate;
return G__6180;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__6186 = null;
if (arguments.length > 2) {
var G__6187__i = 0, G__6187__a = new Array(arguments.length -  2);
while (G__6187__i < G__6187__a.length) {G__6187__a[G__6187__i] = arguments[G__6187__i + 2]; ++G__6187__i;}
G__6186 = new cljs.core.IndexedSeq(G__6187__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6189 = x;
if(G__6189){
var bit__4453__auto__ = (G__6189.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4453__auto__) || (G__6189.cljs$core$ICollection$)){
return true;
} else {
if((!G__6189.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6189);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6189);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6191 = x;
if(G__6191){
var bit__4453__auto__ = (G__6191.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4453__auto__) || (G__6191.cljs$core$ISet$)){
return true;
} else {
if((!G__6191.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6191);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6191);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__6193 = x;
if(G__6193){
var bit__4453__auto__ = (G__6193.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4453__auto__) || (G__6193.cljs$core$IAssociative$)){
return true;
} else {
if((!G__6193.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6193);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6193);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__6195 = x;
if(G__6195){
var bit__4453__auto__ = (G__6195.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4453__auto__) || (G__6195.cljs$core$ISequential$)){
return true;
} else {
if((!G__6195.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6195);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6195);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__6197 = x;
if(G__6197){
var bit__4453__auto__ = (G__6197.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4453__auto__) || (G__6197.cljs$core$ISorted$)){
return true;
} else {
if((!G__6197.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6197);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6197);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__6199 = x;
if(G__6199){
var bit__4453__auto__ = (G__6199.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4453__auto__) || (G__6199.cljs$core$IReduce$)){
return true;
} else {
if((!G__6199.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6199);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6199);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6201 = x;
if(G__6201){
var bit__4453__auto__ = (G__6201.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4453__auto__) || (G__6201.cljs$core$IMap$)){
return true;
} else {
if((!G__6201.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6201);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6201);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__6203 = x;
if(G__6203){
var bit__4453__auto__ = (G__6203.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4453__auto__) || (G__6203.cljs$core$IVector$)){
return true;
} else {
if((!G__6203.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6203);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6203);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__6205 = x;
if(G__6205){
var bit__4446__auto__ = (G__6205.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4446__auto__) || (G__6205.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj6211 = {};
return obj6211;
});
var js_obj__1 = (function() { 
var G__6214__delegate = function (keyvals){
var G__6212 = goog.object.create;
var G__6213 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6212,G__6213) : cljs.core.apply.call(null,G__6212,G__6213));
};
var G__6214 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__6215__i = 0, G__6215__a = new Array(arguments.length -  0);
while (G__6215__i < G__6215__a.length) {G__6215__a[G__6215__i] = arguments[G__6215__i + 0]; ++G__6215__i;}
  keyvals = new cljs.core.IndexedSeq(G__6215__a,0);
} 
return G__6214__delegate.call(this,keyvals);};
G__6214.cljs$lang$maxFixedArity = 0;
G__6214.cljs$lang$applyTo = (function (arglist__6216){
var keyvals = cljs.core.seq(arglist__6216);
return G__6214__delegate(keyvals);
});
G__6214.cljs$core$IFn$_invoke$arity$variadic = G__6214__delegate;
return G__6214;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__6217 = null;
if (arguments.length > 0) {
var G__6218__i = 0, G__6218__a = new Array(arguments.length -  0);
while (G__6218__i < G__6218__a.length) {G__6218__a[G__6218__i] = arguments[G__6218__i + 0]; ++G__6218__i;}
G__6217 = new cljs.core.IndexedSeq(G__6218__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__6221_6223 = obj;
var G__6222_6224 = ((function (G__6221_6223,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__6221_6223,keys))
;
goog.object.forEach(G__6221_6223,G__6222_6224);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6225 = (i__$1 + (1));
var G__6226 = (j__$1 + (1));
var G__6227 = (len__$1 - (1));
i__$1 = G__6225;
j__$1 = G__6226;
len__$1 = G__6227;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6228 = (i__$1 - (1));
var G__6229 = (j__$1 - (1));
var G__6230 = (len__$1 - (1));
i__$1 = G__6228;
j__$1 = G__6229;
len__$1 = G__6230;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj6232 = {};
return obj6232;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__6234 = s;
if(G__6234){
var bit__4453__auto__ = (G__6234.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4453__auto__) || (G__6234.cljs$core$ISeq$)){
return true;
} else {
if((!G__6234.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6234);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6234);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__6236 = s;
if(G__6236){
var bit__4453__auto__ = (G__6236.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4453__auto__) || (G__6236.cljs$core$ISeqable$)){
return true;
} else {
if((!G__6236.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6236);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6236);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3772__auto__ = cljs.core.fn_QMARK_(f);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var G__6240 = f;
if(G__6240){
var bit__4453__auto__ = (G__6240.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4453__auto__) || (G__6240.cljs$core$IFn$)){
return true;
} else {
if((!G__6240.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6240);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6240);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__6253 = n;
return isNaN(G__6253);
})())) && (!((n === Infinity))) && (((function (){var G__6254 = n;
return parseFloat(G__6254);
})() === (function (){var G__6255 = n;
var G__6256 = (10);
return parseInt(G__6255,G__6256);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__6257__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__6258 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__6259 = etc;
s = G__6258;
xs = G__6259;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__6257 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6260__i = 0, G__6260__a = new Array(arguments.length -  2);
while (G__6260__i < G__6260__a.length) {G__6260__a[G__6260__i] = arguments[G__6260__i + 2]; ++G__6260__i;}
  more = new cljs.core.IndexedSeq(G__6260__a,0);
} 
return G__6257__delegate.call(this,x,y,more);};
G__6257.cljs$lang$maxFixedArity = 2;
G__6257.cljs$lang$applyTo = (function (arglist__6261){
var x = cljs.core.first(arglist__6261);
arglist__6261 = cljs.core.next(arglist__6261);
var y = cljs.core.first(arglist__6261);
var more = cljs.core.rest(arglist__6261);
return G__6257__delegate(x,y,more);
});
G__6257.cljs$core$IFn$_invoke$arity$variadic = G__6257__delegate;
return G__6257;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__6262 = null;
if (arguments.length > 2) {
var G__6263__i = 0, G__6263__a = new Array(arguments.length -  2);
while (G__6263__i < G__6263__a.length) {G__6263__a[G__6263__i] = arguments[G__6263__i + 2]; ++G__6263__i;}
G__6262 = new cljs.core.IndexedSeq(G__6263__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__6267 = x;
if(G__6267){
var bit__4446__auto__ = (G__6267.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4446__auto__) || (G__6267.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__6268 = x;
var G__6269 = y;
return goog.array.defaultCompare(G__6268,G__6269);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__6274 = xs;
var G__6275 = ys;
var G__6276 = len;
var G__6277 = (n + (1));
xs = G__6274;
ys = G__6275;
len = G__6276;
n = G__6277;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__6282 = x;
var G__6283 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6282,G__6283) : f.call(null,G__6282,G__6283));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__6284 = y;
var G__6285 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6284,G__6285) : f.call(null,G__6284,G__6285));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__6291 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6291) : cljs.core.to_array.call(null,G__6291));
})();
var G__6292_6294 = a;
var G__6293_6295 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__6292_6294,G__6293_6295);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__6301 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6301) : keyfn.call(null,G__6301));
})(),(function (){var G__6302 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6302) : keyfn.call(null,G__6302));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__6308 = f;
var G__6309 = cljs.core.first(s);
var G__6310 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6308,G__6309,G__6310) : cljs.core.reduce.call(null,G__6308,G__6309,G__6310));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__6311 = val__$1;
var G__6312 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6311,G__6312) : f.call(null,G__6311,G__6312));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6313 = nval;
var G__6314 = cljs.core.next(coll__$1);
val__$1 = G__6313;
coll__$1 = G__6314;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__6318 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6318) : cljs.core.to_array.call(null,G__6318));
})();
var G__6319_6321 = a;
goog.array.shuffle(G__6319_6321);

var G__6320 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6320) : cljs.core.vec.call(null,G__6320));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__6324 = coll;
if(G__6324){
var bit__4446__auto__ = (G__6324.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4446__auto__) || (G__6324.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__6325 = coll;
if(G__6325){
var bit__4446__auto__ = (G__6325.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4446__auto__) || (G__6325.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__6334 = null;
var G__6334__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__6334__1 = (function (x){
var G__6331 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6331) : cf.call(null,G__6331));
});
var G__6334__2 = (function (x,y){
var G__6332 = x;
var G__6333 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6332,G__6333) : f.call(null,G__6332,G__6333));
});
G__6334 = function(x,y){
switch(arguments.length){
case 0:
return G__6334__0.call(this);
case 1:
return G__6334__1.call(this,x);
case 2:
return G__6334__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6334.cljs$core$IFn$_invoke$arity$0 = G__6334__0;
G__6334.cljs$core$IFn$_invoke$arity$1 = G__6334__1;
G__6334.cljs$core$IFn$_invoke$arity$2 = G__6334__2;
return G__6334;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__6341 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6341) : xform.call(null,G__6341));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__6342 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6342) : f__$1.call(null,G__6342));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__6343__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__6343 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6344__i = 0, G__6344__a = new Array(arguments.length -  2);
while (G__6344__i < G__6344__a.length) {G__6344__a[G__6344__i] = arguments[G__6344__i + 2]; ++G__6344__i;}
  more = new cljs.core.IndexedSeq(G__6344__a,0);
} 
return G__6343__delegate.call(this,x,y,more);};
G__6343.cljs$lang$maxFixedArity = 2;
G__6343.cljs$lang$applyTo = (function (arglist__6345){
var x = cljs.core.first(arglist__6345);
arglist__6345 = cljs.core.next(arglist__6345);
var y = cljs.core.first(arglist__6345);
var more = cljs.core.rest(arglist__6345);
return G__6343__delegate(x,y,more);
});
G__6343.cljs$core$IFn$_invoke$arity$variadic = G__6343__delegate;
return G__6343;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__6346 = null;
if (arguments.length > 2) {
var G__6347__i = 0, G__6347__a = new Array(arguments.length -  2);
while (G__6347__i < G__6347__a.length) {G__6347__a[G__6347__i] = arguments[G__6347__i + 2]; ++G__6347__i;}
G__6346 = new cljs.core.IndexedSeq(G__6347__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6346);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__6348__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__6348 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6349__i = 0, G__6349__a = new Array(arguments.length -  2);
while (G__6349__i < G__6349__a.length) {G__6349__a[G__6349__i] = arguments[G__6349__i + 2]; ++G__6349__i;}
  more = new cljs.core.IndexedSeq(G__6349__a,0);
} 
return G__6348__delegate.call(this,x,y,more);};
G__6348.cljs$lang$maxFixedArity = 2;
G__6348.cljs$lang$applyTo = (function (arglist__6350){
var x = cljs.core.first(arglist__6350);
arglist__6350 = cljs.core.next(arglist__6350);
var y = cljs.core.first(arglist__6350);
var more = cljs.core.rest(arglist__6350);
return G__6348__delegate(x,y,more);
});
G__6348.cljs$core$IFn$_invoke$arity$variadic = G__6348__delegate;
return G__6348;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__6351 = null;
if (arguments.length > 2) {
var G__6352__i = 0, G__6352__a = new Array(arguments.length -  2);
while (G__6352__i < G__6352__a.length) {G__6352__a[G__6352__i] = arguments[G__6352__i + 2]; ++G__6352__i;}
G__6351 = new cljs.core.IndexedSeq(G__6352__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__6353__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__6353 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6354__i = 0, G__6354__a = new Array(arguments.length -  2);
while (G__6354__i < G__6354__a.length) {G__6354__a[G__6354__i] = arguments[G__6354__i + 2]; ++G__6354__i;}
  more = new cljs.core.IndexedSeq(G__6354__a,0);
} 
return G__6353__delegate.call(this,x,y,more);};
G__6353.cljs$lang$maxFixedArity = 2;
G__6353.cljs$lang$applyTo = (function (arglist__6355){
var x = cljs.core.first(arglist__6355);
arglist__6355 = cljs.core.next(arglist__6355);
var y = cljs.core.first(arglist__6355);
var more = cljs.core.rest(arglist__6355);
return G__6353__delegate(x,y,more);
});
G__6353.cljs$core$IFn$_invoke$arity$variadic = G__6353__delegate;
return G__6353;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__6356 = null;
if (arguments.length > 2) {
var G__6357__i = 0, G__6357__a = new Array(arguments.length -  2);
while (G__6357__i < G__6357__a.length) {G__6357__a[G__6357__i] = arguments[G__6357__i + 2]; ++G__6357__i;}
G__6356 = new cljs.core.IndexedSeq(G__6357__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__6362__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6362 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6363__i = 0, G__6363__a = new Array(arguments.length -  2);
while (G__6363__i < G__6363__a.length) {G__6363__a[G__6363__i] = arguments[G__6363__i + 2]; ++G__6363__i;}
  more = new cljs.core.IndexedSeq(G__6363__a,0);
} 
return G__6362__delegate.call(this,x,y,more);};
G__6362.cljs$lang$maxFixedArity = 2;
G__6362.cljs$lang$applyTo = (function (arglist__6364){
var x = cljs.core.first(arglist__6364);
arglist__6364 = cljs.core.next(arglist__6364);
var y = cljs.core.first(arglist__6364);
var more = cljs.core.rest(arglist__6364);
return G__6362__delegate(x,y,more);
});
G__6362.cljs$core$IFn$_invoke$arity$variadic = G__6362__delegate;
return G__6362;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__6365 = null;
if (arguments.length > 2) {
var G__6366__i = 0, G__6366__a = new Array(arguments.length -  2);
while (G__6366__i < G__6366__a.length) {G__6366__a[G__6366__i] = arguments[G__6366__i + 2]; ++G__6366__i;}
G__6365 = new cljs.core.IndexedSeq(G__6366__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__6367__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__6368 = y;
var G__6369 = cljs.core.first(more);
var G__6370 = cljs.core.next(more);
x = G__6368;
y = G__6369;
more = G__6370;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6367 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6371__i = 0, G__6371__a = new Array(arguments.length -  2);
while (G__6371__i < G__6371__a.length) {G__6371__a[G__6371__i] = arguments[G__6371__i + 2]; ++G__6371__i;}
  more = new cljs.core.IndexedSeq(G__6371__a,0);
} 
return G__6367__delegate.call(this,x,y,more);};
G__6367.cljs$lang$maxFixedArity = 2;
G__6367.cljs$lang$applyTo = (function (arglist__6372){
var x = cljs.core.first(arglist__6372);
arglist__6372 = cljs.core.next(arglist__6372);
var y = cljs.core.first(arglist__6372);
var more = cljs.core.rest(arglist__6372);
return G__6367__delegate(x,y,more);
});
G__6367.cljs$core$IFn$_invoke$arity$variadic = G__6367__delegate;
return G__6367;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__6373 = null;
if (arguments.length > 2) {
var G__6374__i = 0, G__6374__a = new Array(arguments.length -  2);
while (G__6374__i < G__6374__a.length) {G__6374__a[G__6374__i] = arguments[G__6374__i + 2]; ++G__6374__i;}
G__6373 = new cljs.core.IndexedSeq(G__6374__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6373);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__6375__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__6376 = y;
var G__6377 = cljs.core.first(more);
var G__6378 = cljs.core.next(more);
x = G__6376;
y = G__6377;
more = G__6378;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6375 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6379__i = 0, G__6379__a = new Array(arguments.length -  2);
while (G__6379__i < G__6379__a.length) {G__6379__a[G__6379__i] = arguments[G__6379__i + 2]; ++G__6379__i;}
  more = new cljs.core.IndexedSeq(G__6379__a,0);
} 
return G__6375__delegate.call(this,x,y,more);};
G__6375.cljs$lang$maxFixedArity = 2;
G__6375.cljs$lang$applyTo = (function (arglist__6380){
var x = cljs.core.first(arglist__6380);
arglist__6380 = cljs.core.next(arglist__6380);
var y = cljs.core.first(arglist__6380);
var more = cljs.core.rest(arglist__6380);
return G__6375__delegate(x,y,more);
});
G__6375.cljs$core$IFn$_invoke$arity$variadic = G__6375__delegate;
return G__6375;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__6381 = null;
if (arguments.length > 2) {
var G__6382__i = 0, G__6382__a = new Array(arguments.length -  2);
while (G__6382__i < G__6382__a.length) {G__6382__a[G__6382__i] = arguments[G__6382__i + 2]; ++G__6382__i;}
G__6381 = new cljs.core.IndexedSeq(G__6382__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__6383__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__6384 = y;
var G__6385 = cljs.core.first(more);
var G__6386 = cljs.core.next(more);
x = G__6384;
y = G__6385;
more = G__6386;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6383 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6387__i = 0, G__6387__a = new Array(arguments.length -  2);
while (G__6387__i < G__6387__a.length) {G__6387__a[G__6387__i] = arguments[G__6387__i + 2]; ++G__6387__i;}
  more = new cljs.core.IndexedSeq(G__6387__a,0);
} 
return G__6383__delegate.call(this,x,y,more);};
G__6383.cljs$lang$maxFixedArity = 2;
G__6383.cljs$lang$applyTo = (function (arglist__6388){
var x = cljs.core.first(arglist__6388);
arglist__6388 = cljs.core.next(arglist__6388);
var y = cljs.core.first(arglist__6388);
var more = cljs.core.rest(arglist__6388);
return G__6383__delegate(x,y,more);
});
G__6383.cljs$core$IFn$_invoke$arity$variadic = G__6383__delegate;
return G__6383;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__6389 = null;
if (arguments.length > 2) {
var G__6390__i = 0, G__6390__a = new Array(arguments.length -  2);
while (G__6390__i < G__6390__a.length) {G__6390__a[G__6390__i] = arguments[G__6390__i + 2]; ++G__6390__i;}
G__6389 = new cljs.core.IndexedSeq(G__6390__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__6391__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__6392 = y;
var G__6393 = cljs.core.first(more);
var G__6394 = cljs.core.next(more);
x = G__6392;
y = G__6393;
more = G__6394;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6391 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6395__i = 0, G__6395__a = new Array(arguments.length -  2);
while (G__6395__i < G__6395__a.length) {G__6395__a[G__6395__i] = arguments[G__6395__i + 2]; ++G__6395__i;}
  more = new cljs.core.IndexedSeq(G__6395__a,0);
} 
return G__6391__delegate.call(this,x,y,more);};
G__6391.cljs$lang$maxFixedArity = 2;
G__6391.cljs$lang$applyTo = (function (arglist__6396){
var x = cljs.core.first(arglist__6396);
arglist__6396 = cljs.core.next(arglist__6396);
var y = cljs.core.first(arglist__6396);
var more = cljs.core.rest(arglist__6396);
return G__6391__delegate(x,y,more);
});
G__6391.cljs$core$IFn$_invoke$arity$variadic = G__6391__delegate;
return G__6391;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__6397 = null;
if (arguments.length > 2) {
var G__6398__i = 0, G__6398__a = new Array(arguments.length -  2);
while (G__6398__i < G__6398__a.length) {G__6398__a[G__6398__i] = arguments[G__6398__i + 2]; ++G__6398__i;}
G__6397 = new cljs.core.IndexedSeq(G__6398__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6397);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4089__auto__ = x;
var y__4090__auto__ = y;
return ((x__4089__auto__ > y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
});
var max__3 = (function() { 
var G__6399__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4089__auto__ = x;
var y__4090__auto__ = y;
return ((x__4089__auto__ > y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
})(),more);
};
var G__6399 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6400__i = 0, G__6400__a = new Array(arguments.length -  2);
while (G__6400__i < G__6400__a.length) {G__6400__a[G__6400__i] = arguments[G__6400__i + 2]; ++G__6400__i;}
  more = new cljs.core.IndexedSeq(G__6400__a,0);
} 
return G__6399__delegate.call(this,x,y,more);};
G__6399.cljs$lang$maxFixedArity = 2;
G__6399.cljs$lang$applyTo = (function (arglist__6401){
var x = cljs.core.first(arglist__6401);
arglist__6401 = cljs.core.next(arglist__6401);
var y = cljs.core.first(arglist__6401);
var more = cljs.core.rest(arglist__6401);
return G__6399__delegate(x,y,more);
});
G__6399.cljs$core$IFn$_invoke$arity$variadic = G__6399__delegate;
return G__6399;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__6402 = null;
if (arguments.length > 2) {
var G__6403__i = 0, G__6403__a = new Array(arguments.length -  2);
while (G__6403__i < G__6403__a.length) {G__6403__a[G__6403__i] = arguments[G__6403__i + 2]; ++G__6403__i;}
G__6402 = new cljs.core.IndexedSeq(G__6403__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4096__auto__ = x;
var y__4097__auto__ = y;
return ((x__4096__auto__ < y__4097__auto__) ? x__4096__auto__ : y__4097__auto__);
});
var min__3 = (function() { 
var G__6404__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4096__auto__ = x;
var y__4097__auto__ = y;
return ((x__4096__auto__ < y__4097__auto__) ? x__4096__auto__ : y__4097__auto__);
})(),more);
};
var G__6404 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6405__i = 0, G__6405__a = new Array(arguments.length -  2);
while (G__6405__i < G__6405__a.length) {G__6405__a[G__6405__i] = arguments[G__6405__i + 2]; ++G__6405__i;}
  more = new cljs.core.IndexedSeq(G__6405__a,0);
} 
return G__6404__delegate.call(this,x,y,more);};
G__6404.cljs$lang$maxFixedArity = 2;
G__6404.cljs$lang$applyTo = (function (arglist__6406){
var x = cljs.core.first(arglist__6406);
arglist__6406 = cljs.core.next(arglist__6406);
var y = cljs.core.first(arglist__6406);
var more = cljs.core.rest(arglist__6406);
return G__6404__delegate(x,y,more);
});
G__6404.cljs$core$IFn$_invoke$arity$variadic = G__6404__delegate;
return G__6404;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__6407 = null;
if (arguments.length > 2) {
var G__6408__i = 0, G__6408__a = new Array(arguments.length -  2);
while (G__6408__i < G__6408__a.length) {G__6408__a[G__6408__i] = arguments[G__6408__i + 2]; ++G__6408__i;}
G__6407 = new cljs.core.IndexedSeq(G__6408__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6407);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__6409__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__6409 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6410__i = 0, G__6410__a = new Array(arguments.length -  2);
while (G__6410__i < G__6410__a.length) {G__6410__a[G__6410__i] = arguments[G__6410__i + 2]; ++G__6410__i;}
  more = new cljs.core.IndexedSeq(G__6410__a,0);
} 
return G__6409__delegate.call(this,x,y,more);};
G__6409.cljs$lang$maxFixedArity = 2;
G__6409.cljs$lang$applyTo = (function (arglist__6411){
var x = cljs.core.first(arglist__6411);
arglist__6411 = cljs.core.next(arglist__6411);
var y = cljs.core.first(arglist__6411);
var more = cljs.core.rest(arglist__6411);
return G__6409__delegate(x,y,more);
});
G__6409.cljs$core$IFn$_invoke$arity$variadic = G__6409__delegate;
return G__6409;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__6412 = null;
if (arguments.length > 2) {
var G__6413__i = 0, G__6413__a = new Array(arguments.length -  2);
while (G__6413__i < G__6413__a.length) {G__6413__a[G__6413__i] = arguments[G__6413__i + 2]; ++G__6413__i;}
G__6412 = new cljs.core.IndexedSeq(G__6413__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__6414__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__6414 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6415__i = 0, G__6415__a = new Array(arguments.length -  2);
while (G__6415__i < G__6415__a.length) {G__6415__a[G__6415__i] = arguments[G__6415__i + 2]; ++G__6415__i;}
  more = new cljs.core.IndexedSeq(G__6415__a,0);
} 
return G__6414__delegate.call(this,x,y,more);};
G__6414.cljs$lang$maxFixedArity = 2;
G__6414.cljs$lang$applyTo = (function (arglist__6416){
var x = cljs.core.first(arglist__6416);
arglist__6416 = cljs.core.next(arglist__6416);
var y = cljs.core.first(arglist__6416);
var more = cljs.core.rest(arglist__6416);
return G__6414__delegate(x,y,more);
});
G__6414.cljs$core$IFn$_invoke$arity$variadic = G__6414__delegate;
return G__6414;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__6417 = null;
if (arguments.length > 2) {
var G__6418__i = 0, G__6418__a = new Array(arguments.length -  2);
while (G__6418__i < G__6418__a.length) {G__6418__a[G__6418__i] = arguments[G__6418__i + 2]; ++G__6418__i;}
G__6417 = new cljs.core.IndexedSeq(G__6418__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__6423__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6423 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6424__i = 0, G__6424__a = new Array(arguments.length -  2);
while (G__6424__i < G__6424__a.length) {G__6424__a[G__6424__i] = arguments[G__6424__i + 2]; ++G__6424__i;}
  more = new cljs.core.IndexedSeq(G__6424__a,0);
} 
return G__6423__delegate.call(this,x,y,more);};
G__6423.cljs$lang$maxFixedArity = 2;
G__6423.cljs$lang$applyTo = (function (arglist__6425){
var x = cljs.core.first(arglist__6425);
arglist__6425 = cljs.core.next(arglist__6425);
var y = cljs.core.first(arglist__6425);
var more = cljs.core.rest(arglist__6425);
return G__6423__delegate(x,y,more);
});
G__6423.cljs$core$IFn$_invoke$arity$variadic = G__6423__delegate;
return G__6423;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__6426 = null;
if (arguments.length > 2) {
var G__6427__i = 0, G__6427__a = new Array(arguments.length -  2);
while (G__6427__i < G__6427__a.length) {G__6427__a[G__6427__i] = arguments[G__6427__i + 2]; ++G__6427__i;}
G__6426 = new cljs.core.IndexedSeq(G__6427__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__6428__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__6428 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6429__i = 0, G__6429__a = new Array(arguments.length -  2);
while (G__6429__i < G__6429__a.length) {G__6429__a[G__6429__i] = arguments[G__6429__i + 2]; ++G__6429__i;}
  more = new cljs.core.IndexedSeq(G__6429__a,0);
} 
return G__6428__delegate.call(this,x,y,more);};
G__6428.cljs$lang$maxFixedArity = 2;
G__6428.cljs$lang$applyTo = (function (arglist__6430){
var x = cljs.core.first(arglist__6430);
arglist__6430 = cljs.core.next(arglist__6430);
var y = cljs.core.first(arglist__6430);
var more = cljs.core.rest(arglist__6430);
return G__6428__delegate(x,y,more);
});
G__6428.cljs$core$IFn$_invoke$arity$variadic = G__6428__delegate;
return G__6428;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__6431 = null;
if (arguments.length > 2) {
var G__6432__i = 0, G__6432__a = new Array(arguments.length -  2);
while (G__6432__i < G__6432__a.length) {G__6432__a[G__6432__i] = arguments[G__6432__i + 2]; ++G__6432__i;}
G__6431 = new cljs.core.IndexedSeq(G__6432__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__6433__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__6433 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6434__i = 0, G__6434__a = new Array(arguments.length -  2);
while (G__6434__i < G__6434__a.length) {G__6434__a[G__6434__i] = arguments[G__6434__i + 2]; ++G__6434__i;}
  more = new cljs.core.IndexedSeq(G__6434__a,0);
} 
return G__6433__delegate.call(this,x,y,more);};
G__6433.cljs$lang$maxFixedArity = 2;
G__6433.cljs$lang$applyTo = (function (arglist__6435){
var x = cljs.core.first(arglist__6435);
arglist__6435 = cljs.core.next(arglist__6435);
var y = cljs.core.first(arglist__6435);
var more = cljs.core.rest(arglist__6435);
return G__6433__delegate(x,y,more);
});
G__6433.cljs$core$IFn$_invoke$arity$variadic = G__6433__delegate;
return G__6433;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__6436 = null;
if (arguments.length > 2) {
var G__6437__i = 0, G__6437__a = new Array(arguments.length -  2);
while (G__6437__i < G__6437__a.length) {G__6437__a[G__6437__i] = arguments[G__6437__i + 2]; ++G__6437__i;}
G__6436 = new cljs.core.IndexedSeq(G__6437__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__6440 = x;
var G__6441 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6440,G__6441) : cljs.core.mod.call(null,G__6440,G__6441));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__6442__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__6442 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6443__i = 0, G__6443__a = new Array(arguments.length -  2);
while (G__6443__i < G__6443__a.length) {G__6443__a[G__6443__i] = arguments[G__6443__i + 2]; ++G__6443__i;}
  more = new cljs.core.IndexedSeq(G__6443__a,0);
} 
return G__6442__delegate.call(this,x,y,more);};
G__6442.cljs$lang$maxFixedArity = 2;
G__6442.cljs$lang$applyTo = (function (arglist__6444){
var x = cljs.core.first(arglist__6444);
arglist__6444 = cljs.core.next(arglist__6444);
var y = cljs.core.first(arglist__6444);
var more = cljs.core.rest(arglist__6444);
return G__6442__delegate(x,y,more);
});
G__6442.cljs$core$IFn$_invoke$arity$variadic = G__6442__delegate;
return G__6442;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__6445 = null;
if (arguments.length > 2) {
var G__6446__i = 0, G__6446__a = new Array(arguments.length -  2);
while (G__6446__i < G__6446__a.length) {G__6446__a[G__6446__i] = arguments[G__6446__i + 2]; ++G__6446__i;}
G__6445 = new cljs.core.IndexedSeq(G__6446__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__6447__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__6447 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6448__i = 0, G__6448__a = new Array(arguments.length -  2);
while (G__6448__i < G__6448__a.length) {G__6448__a[G__6448__i] = arguments[G__6448__i + 2]; ++G__6448__i;}
  more = new cljs.core.IndexedSeq(G__6448__a,0);
} 
return G__6447__delegate.call(this,x,y,more);};
G__6447.cljs$lang$maxFixedArity = 2;
G__6447.cljs$lang$applyTo = (function (arglist__6449){
var x = cljs.core.first(arglist__6449);
arglist__6449 = cljs.core.next(arglist__6449);
var y = cljs.core.first(arglist__6449);
var more = cljs.core.rest(arglist__6449);
return G__6447__delegate(x,y,more);
});
G__6447.cljs$core$IFn$_invoke$arity$variadic = G__6447__delegate;
return G__6447;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__6450 = null;
if (arguments.length > 2) {
var G__6451__i = 0, G__6451__a = new Array(arguments.length -  2);
while (G__6451__i < G__6451__a.length) {G__6451__a[G__6451__i] = arguments[G__6451__i + 2]; ++G__6451__i;}
G__6450 = new cljs.core.IndexedSeq(G__6451__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__6454 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6454) : Math.floor.call(null,G__6454));
} else {
var G__6455 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6455) : Math.ceil.call(null,G__6455));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__6456__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__6456 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6457__i = 0, G__6457__a = new Array(arguments.length -  2);
while (G__6457__i < G__6457__a.length) {G__6457__a[G__6457__i] = arguments[G__6457__i + 2]; ++G__6457__i;}
  more = new cljs.core.IndexedSeq(G__6457__a,0);
} 
return G__6456__delegate.call(this,x,y,more);};
G__6456.cljs$lang$maxFixedArity = 2;
G__6456.cljs$lang$applyTo = (function (arglist__6458){
var x = cljs.core.first(arglist__6458);
arglist__6458 = cljs.core.next(arglist__6458);
var y = cljs.core.first(arglist__6458);
var more = cljs.core.rest(arglist__6458);
return G__6456__delegate(x,y,more);
});
G__6456.cljs$core$IFn$_invoke$arity$variadic = G__6456__delegate;
return G__6456;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__6459 = null;
if (arguments.length > 2) {
var G__6460__i = 0, G__6460__a = new Array(arguments.length -  2);
while (G__6460__i < G__6460__a.length) {G__6460__a[G__6460__i] = arguments[G__6460__i + 2]; ++G__6460__i;}
G__6459 = new cljs.core.IndexedSeq(G__6460__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6459);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__6461__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__6461 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6462__i = 0, G__6462__a = new Array(arguments.length -  2);
while (G__6462__i < G__6462__a.length) {G__6462__a[G__6462__i] = arguments[G__6462__i + 2]; ++G__6462__i;}
  more = new cljs.core.IndexedSeq(G__6462__a,0);
} 
return G__6461__delegate.call(this,x,y,more);};
G__6461.cljs$lang$maxFixedArity = 2;
G__6461.cljs$lang$applyTo = (function (arglist__6463){
var x = cljs.core.first(arglist__6463);
arglist__6463 = cljs.core.next(arglist__6463);
var y = cljs.core.first(arglist__6463);
var more = cljs.core.rest(arglist__6463);
return G__6461__delegate(x,y,more);
});
G__6461.cljs$core$IFn$_invoke$arity$variadic = G__6461__delegate;
return G__6461;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__6464 = null;
if (arguments.length > 2) {
var G__6465__i = 0, G__6465__a = new Array(arguments.length -  2);
while (G__6465__i < G__6465__a.length) {G__6465__a[G__6465__i] = arguments[G__6465__i + 2]; ++G__6465__i;}
G__6464 = new cljs.core.IndexedSeq(G__6465__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6464);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__6466__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__6466 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6467__i = 0, G__6467__a = new Array(arguments.length -  2);
while (G__6467__i < G__6467__a.length) {G__6467__a[G__6467__i] = arguments[G__6467__i + 2]; ++G__6467__i;}
  more = new cljs.core.IndexedSeq(G__6467__a,0);
} 
return G__6466__delegate.call(this,x,y,more);};
G__6466.cljs$lang$maxFixedArity = 2;
G__6466.cljs$lang$applyTo = (function (arglist__6468){
var x = cljs.core.first(arglist__6468);
arglist__6468 = cljs.core.next(arglist__6468);
var y = cljs.core.first(arglist__6468);
var more = cljs.core.rest(arglist__6468);
return G__6466__delegate(x,y,more);
});
G__6466.cljs$core$IFn$_invoke$arity$variadic = G__6466__delegate;
return G__6466;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__6469 = null;
if (arguments.length > 2) {
var G__6470__i = 0, G__6470__a = new Array(arguments.length -  2);
while (G__6470__i < G__6470__a.length) {G__6470__a[G__6470__i] = arguments[G__6470__i + 2]; ++G__6470__i;}
G__6469 = new cljs.core.IndexedSeq(G__6470__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6469);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__6471__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__6471 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6472__i = 0, G__6472__a = new Array(arguments.length -  2);
while (G__6472__i < G__6472__a.length) {G__6472__a[G__6472__i] = arguments[G__6472__i + 2]; ++G__6472__i;}
  more = new cljs.core.IndexedSeq(G__6472__a,0);
} 
return G__6471__delegate.call(this,x,y,more);};
G__6471.cljs$lang$maxFixedArity = 2;
G__6471.cljs$lang$applyTo = (function (arglist__6473){
var x = cljs.core.first(arglist__6473);
arglist__6473 = cljs.core.next(arglist__6473);
var y = cljs.core.first(arglist__6473);
var more = cljs.core.rest(arglist__6473);
return G__6471__delegate(x,y,more);
});
G__6471.cljs$core$IFn$_invoke$arity$variadic = G__6471__delegate;
return G__6471;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__6474 = null;
if (arguments.length > 2) {
var G__6475__i = 0, G__6475__a = new Array(arguments.length -  2);
while (G__6475__i < G__6475__a.length) {G__6475__a[G__6475__i] = arguments[G__6475__i + 2]; ++G__6475__i;}
G__6474 = new cljs.core.IndexedSeq(G__6475__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__6480__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6481 = y;
var G__6482 = cljs.core.first(more);
var G__6483 = cljs.core.next(more);
x = G__6481;
y = G__6482;
more = G__6483;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6480 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6484__i = 0, G__6484__a = new Array(arguments.length -  2);
while (G__6484__i < G__6484__a.length) {G__6484__a[G__6484__i] = arguments[G__6484__i + 2]; ++G__6484__i;}
  more = new cljs.core.IndexedSeq(G__6484__a,0);
} 
return G__6480__delegate.call(this,x,y,more);};
G__6480.cljs$lang$maxFixedArity = 2;
G__6480.cljs$lang$applyTo = (function (arglist__6485){
var x = cljs.core.first(arglist__6485);
arglist__6485 = cljs.core.next(arglist__6485);
var y = cljs.core.first(arglist__6485);
var more = cljs.core.rest(arglist__6485);
return G__6480__delegate(x,y,more);
});
G__6480.cljs$core$IFn$_invoke$arity$variadic = G__6480__delegate;
return G__6480;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__6486 = null;
if (arguments.length > 2) {
var G__6487__i = 0, G__6487__a = new Array(arguments.length -  2);
while (G__6487__i < G__6487__a.length) {G__6487__a[G__6487__i] = arguments[G__6487__i + 2]; ++G__6487__i;}
G__6486 = new cljs.core.IndexedSeq(G__6487__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__6488 = (n__$1 - (1));
var G__6489 = cljs.core.next(xs);
n__$1 = G__6488;
xs = G__6489;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__6493 = x;
return goog.string.buildString(G__6493);
}
});
var str__2 = (function() { 
var G__6494__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__6495 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__6496 = cljs.core.next(more);
sb = G__6495;
more = G__6496;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__6494 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__6497__i = 0, G__6497__a = new Array(arguments.length -  1);
while (G__6497__i < G__6497__a.length) {G__6497__a[G__6497__i] = arguments[G__6497__i + 1]; ++G__6497__i;}
  ys = new cljs.core.IndexedSeq(G__6497__a,0);
} 
return G__6494__delegate.call(this,x,ys);};
G__6494.cljs$lang$maxFixedArity = 1;
G__6494.cljs$lang$applyTo = (function (arglist__6498){
var x = cljs.core.first(arglist__6498);
var ys = cljs.core.rest(arglist__6498);
return G__6494__delegate(x,ys);
});
G__6494.cljs$core$IFn$_invoke$arity$variadic = G__6494__delegate;
return G__6494;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__6499 = null;
if (arguments.length > 1) {
var G__6500__i = 0, G__6500__a = new Array(arguments.length -  1);
while (G__6500__i < G__6500__a.length) {G__6500__a[G__6500__i] = arguments[G__6500__i + 1]; ++G__6500__i;}
G__6499 = new cljs.core.IndexedSeq(G__6500__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__6501 = cljs.core.next(xs);
var G__6502 = cljs.core.next(ys);
xs = G__6501;
ys = G__6502;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__6503 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__6504 = cljs.core.next(s);
res = G__6503;
s = G__6504;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__6509 = ((h + (cljs.core.hash((function (){var G__6507 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6507) : cljs.core.key.call(null,G__6507));
})()) ^ cljs.core.hash((function (){var G__6508 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6508) : cljs.core.val.call(null,G__6508));
})()))) % (4503599627370496));
var G__6510 = cljs.core.next(s);
h = G__6509;
s = G__6510;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__6511 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__6512 = cljs.core.next(s__$1);
h = G__6511;
s__$1 = G__6512;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__6523_6533 = cljs.core.seq(fn_map);
var chunk__6524_6534 = null;
var count__6525_6535 = (0);
var i__6526_6536 = (0);
while(true){
if((i__6526_6536 < count__6525_6535)){
var vec__6527_6537 = chunk__6524_6534.cljs$core$IIndexed$_nth$arity$2(null,i__6526_6536);
var key_name_6538 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6527_6537,(0),null);
var f_6539 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6527_6537,(1),null);
var str_name_6540 = (function (){var G__6528 = key_name_6538;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6528) : cljs.core.name.call(null,G__6528));
})();
(obj[str_name_6540] = f_6539);

var G__6541 = seq__6523_6533;
var G__6542 = chunk__6524_6534;
var G__6543 = count__6525_6535;
var G__6544 = (i__6526_6536 + (1));
seq__6523_6533 = G__6541;
chunk__6524_6534 = G__6542;
count__6525_6535 = G__6543;
i__6526_6536 = G__6544;
continue;
} else {
var temp__4126__auto___6545 = cljs.core.seq(seq__6523_6533);
if(temp__4126__auto___6545){
var seq__6523_6546__$1 = temp__4126__auto___6545;
if(cljs.core.chunked_seq_QMARK_(seq__6523_6546__$1)){
var c__4559__auto___6547 = (function (){var G__6529 = seq__6523_6546__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6529) : cljs.core.chunk_first.call(null,G__6529));
})();
var G__6548 = (function (){var G__6530 = seq__6523_6546__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6530) : cljs.core.chunk_rest.call(null,G__6530));
})();
var G__6549 = c__4559__auto___6547;
var G__6550 = cljs.core.count(c__4559__auto___6547);
var G__6551 = (0);
seq__6523_6533 = G__6548;
chunk__6524_6534 = G__6549;
count__6525_6535 = G__6550;
i__6526_6536 = G__6551;
continue;
} else {
var vec__6531_6552 = cljs.core.first(seq__6523_6546__$1);
var key_name_6553 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6531_6552,(0),null);
var f_6554 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6531_6552,(1),null);
var str_name_6555 = (function (){var G__6532 = key_name_6553;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6532) : cljs.core.name.call(null,G__6532));
})();
(obj[str_name_6555] = f_6554);

var G__6556 = cljs.core.next(seq__6523_6546__$1);
var G__6557 = null;
var G__6558 = (0);
var G__6559 = (0);
seq__6523_6533 = G__6556;
chunk__6524_6534 = G__6557;
count__6525_6535 = G__6558;
i__6526_6536 = G__6559;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__6561 = coll;
if(G__6561){
var bit__4453__auto__ = (G__6561.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4453__auto__) || (G__6561.cljs$core$IReversible$)){
return true;
} else {
if((!G__6561.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6561);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6561);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__6562 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__6562;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__6563 = (i - (1));
var G__6564 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__6563;
r = G__6564;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__6565__i = 0, G__6565__a = new Array(arguments.length -  0);
while (G__6565__i < G__6565__a.length) {G__6565__a[G__6565__i] = arguments[G__6565__i + 0]; ++G__6565__i;}
  xs = new cljs.core.IndexedSeq(G__6565__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__6566){
var xs = cljs.core.seq(arglist__6566);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3772__auto__ = (coll == null);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var G__6570 = coll;
if(G__6570){
var bit__4446__auto__ = (G__6570.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__6570.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__6572 = x;
if(G__6572){
var bit__4453__auto__ = (G__6572.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4453__auto__) || (G__6572.cljs$core$IList$)){
return true;
} else {
if((!G__6572.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6572);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6572);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3760__auto__ = cljs.core.not(a.ns);
if(and__3760__auto__){
return b.ns;
} else {
return and__3760__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6579 = a.ns;
var G__6580 = b.ns;
return goog.array.defaultCompare(G__6579,G__6580);
})();
if(((0) === nsc)){
var G__6581 = a.name;
var G__6582 = b.name;
return goog.array.defaultCompare(G__6581,G__6582);
} else {
return nsc;
}
}
} else {
var G__6583 = a.name;
var G__6584 = b.name;
return goog.array.defaultCompare(G__6583,G__6584);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4193__auto__ = self__._hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__6586 = null;
var G__6586__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__6586__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__6586 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6586__2.call(this,self__,coll);
case 3:
return G__6586__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6586.cljs$core$IFn$_invoke$arity$2 = G__6586__2;
G__6586.cljs$core$IFn$_invoke$arity$3 = G__6586__3;
return G__6586;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args6585){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6585)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__6588 = x;
if(G__6588){
var bit__4446__auto__ = (G__6588.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4446__auto__) || (G__6588.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__6590 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6590) : cljs.core.name.call(null,G__6590));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__6591 = ls.sval();
ls = G__6591;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__6593 = s;
if(G__6593){
var bit__4446__auto__ = (G__6593.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4446__auto__) || (G__6593.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__6594 = cljs.core.next(s__$1);
s__$1 = G__6594;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_6595 = (0);
var xs_6596 = cljs.core.seq(coll);
while(true){
if(xs_6596){
(ret[i_6595] = cljs.core.to_array(cljs.core.first(xs_6596)));

var G__6597 = (i_6595 + (1));
var G__6598 = cljs.core.next(xs_6596);
i_6595 = G__6597;
xs_6596 = G__6598;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6601 = (i + (1));
var G__6602 = cljs.core.next(s__$1);
i = G__6601;
s__$1 = G__6602;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___6603 = size;
var i_6604 = (0);
while(true){
if((i_6604 < n__4659__auto___6603)){
(a[i_6604] = init_val_or_seq);

var G__6605 = (i_6604 + (1));
i_6604 = G__6605;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6608 = (i + (1));
var G__6609 = cljs.core.next(s__$1);
i = G__6608;
s__$1 = G__6609;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___6610 = size;
var i_6611 = (0);
while(true){
if((i_6611 < n__4659__auto___6610)){
(a[i_6611] = init_val_or_seq);

var G__6612 = (i_6611 + (1));
i_6611 = G__6612;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6615 = (i + (1));
var G__6616 = cljs.core.next(s__$1);
i = G__6615;
s__$1 = G__6616;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___6617 = size;
var i_6618 = (0);
while(true){
if((i_6618 < n__4659__auto___6617)){
(a[i_6618] = init_val_or_seq);

var G__6619 = (i_6618 + (1));
i_6618 = G__6619;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6622 = (i + (1));
var G__6623 = cljs.core.next(s__$1);
i = G__6622;
s__$1 = G__6623;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___6624 = size;
var i_6625 = (0);
while(true){
if((i_6625 < n__4659__auto___6624)){
(a[i_6625] = init_val_or_seq);

var G__6626 = (i_6625 + (1));
i_6625 = G__6626;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__6627 = cljs.core.next(s__$1);
var G__6628 = (i - (1));
var G__6629 = (sum + (1));
s__$1 = G__6627;
i = G__6628;
sum = G__6629;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__6649__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__6649 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__6650__i = 0, G__6650__a = new Array(arguments.length -  2);
while (G__6650__i < G__6650__a.length) {G__6650__a[G__6650__i] = arguments[G__6650__i + 2]; ++G__6650__i;}
  zs = new cljs.core.IndexedSeq(G__6650__a,0);
} 
return G__6649__delegate.call(this,x,y,zs);};
G__6649.cljs$lang$maxFixedArity = 2;
G__6649.cljs$lang$applyTo = (function (arglist__6651){
var x = cljs.core.first(arglist__6651);
arglist__6651 = cljs.core.next(arglist__6651);
var y = cljs.core.first(arglist__6651);
var zs = cljs.core.rest(arglist__6651);
return G__6649__delegate(x,y,zs);
});
G__6649.cljs$core$IFn$_invoke$arity$variadic = G__6649__delegate;
return G__6649;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__6652 = null;
if (arguments.length > 2) {
var G__6653__i = 0, G__6653__a = new Array(arguments.length -  2);
while (G__6653__i < G__6653__a.length) {G__6653__a[G__6653__i] = arguments[G__6653__i + 2]; ++G__6653__i;}
G__6652 = new cljs.core.IndexedSeq(G__6653__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__6654__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__6654 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__6655__i = 0, G__6655__a = new Array(arguments.length -  4);
while (G__6655__i < G__6655__a.length) {G__6655__a[G__6655__i] = arguments[G__6655__i + 4]; ++G__6655__i;}
  more = new cljs.core.IndexedSeq(G__6655__a,0);
} 
return G__6654__delegate.call(this,a,b,c,d,more);};
G__6654.cljs$lang$maxFixedArity = 4;
G__6654.cljs$lang$applyTo = (function (arglist__6656){
var a = cljs.core.first(arglist__6656);
arglist__6656 = cljs.core.next(arglist__6656);
var b = cljs.core.first(arglist__6656);
arglist__6656 = cljs.core.next(arglist__6656);
var c = cljs.core.first(arglist__6656);
arglist__6656 = cljs.core.next(arglist__6656);
var d = cljs.core.first(arglist__6656);
var more = cljs.core.rest(arglist__6656);
return G__6654__delegate(a,b,c,d,more);
});
G__6654.cljs$core$IFn$_invoke$arity$variadic = G__6654__delegate;
return G__6654;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__6657 = null;
if (arguments.length > 4) {
var G__6658__i = 0, G__6658__a = new Array(arguments.length -  4);
while (G__6658__i < G__6658__a.length) {G__6658__a[G__6658__i] = arguments[G__6658__i + 4]; ++G__6658__i;}
G__6657 = new cljs.core.IndexedSeq(G__6658__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__6657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__6659__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6660 = ntcoll;
var G__6661 = cljs.core.first(vals);
var G__6662 = cljs.core.next(vals);
tcoll = G__6660;
val = G__6661;
vals = G__6662;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6659 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6663__i = 0, G__6663__a = new Array(arguments.length -  2);
while (G__6663__i < G__6663__a.length) {G__6663__a[G__6663__i] = arguments[G__6663__i + 2]; ++G__6663__i;}
  vals = new cljs.core.IndexedSeq(G__6663__a,0);
} 
return G__6659__delegate.call(this,tcoll,val,vals);};
G__6659.cljs$lang$maxFixedArity = 2;
G__6659.cljs$lang$applyTo = (function (arglist__6664){
var tcoll = cljs.core.first(arglist__6664);
arglist__6664 = cljs.core.next(arglist__6664);
var val = cljs.core.first(arglist__6664);
var vals = cljs.core.rest(arglist__6664);
return G__6659__delegate(tcoll,val,vals);
});
G__6659.cljs$core$IFn$_invoke$arity$variadic = G__6659__delegate;
return G__6659;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__6665 = null;
if (arguments.length > 2) {
var G__6666__i = 0, G__6666__a = new Array(arguments.length -  2);
while (G__6666__i < G__6666__a.length) {G__6666__a[G__6666__i] = arguments[G__6666__i + 2]; ++G__6666__i;}
G__6665 = new cljs.core.IndexedSeq(G__6666__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6665);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__6667__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__6668 = ntcoll;
var G__6669 = cljs.core.first(kvs);
var G__6670 = cljs.core.second(kvs);
var G__6671 = cljs.core.nnext(kvs);
tcoll = G__6668;
key = G__6669;
val = G__6670;
kvs = G__6671;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6667 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6672__i = 0, G__6672__a = new Array(arguments.length -  3);
while (G__6672__i < G__6672__a.length) {G__6672__a[G__6672__i] = arguments[G__6672__i + 3]; ++G__6672__i;}
  kvs = new cljs.core.IndexedSeq(G__6672__a,0);
} 
return G__6667__delegate.call(this,tcoll,key,val,kvs);};
G__6667.cljs$lang$maxFixedArity = 3;
G__6667.cljs$lang$applyTo = (function (arglist__6673){
var tcoll = cljs.core.first(arglist__6673);
arglist__6673 = cljs.core.next(arglist__6673);
var key = cljs.core.first(arglist__6673);
arglist__6673 = cljs.core.next(arglist__6673);
var val = cljs.core.first(arglist__6673);
var kvs = cljs.core.rest(arglist__6673);
return G__6667__delegate(tcoll,key,val,kvs);
});
G__6667.cljs$core$IFn$_invoke$arity$variadic = G__6667__delegate;
return G__6667;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__6674 = null;
if (arguments.length > 3) {
var G__6675__i = 0, G__6675__a = new Array(arguments.length -  3);
while (G__6675__i < G__6675__a.length) {G__6675__a[G__6675__i] = arguments[G__6675__i + 3]; ++G__6675__i;}
G__6674 = new cljs.core.IndexedSeq(G__6675__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__6674);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__6676__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__6677 = ntcoll;
var G__6678 = cljs.core.first(ks);
var G__6679 = cljs.core.next(ks);
tcoll = G__6677;
key = G__6678;
ks = G__6679;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6676 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6680__i = 0, G__6680__a = new Array(arguments.length -  2);
while (G__6680__i < G__6680__a.length) {G__6680__a[G__6680__i] = arguments[G__6680__i + 2]; ++G__6680__i;}
  ks = new cljs.core.IndexedSeq(G__6680__a,0);
} 
return G__6676__delegate.call(this,tcoll,key,ks);};
G__6676.cljs$lang$maxFixedArity = 2;
G__6676.cljs$lang$applyTo = (function (arglist__6681){
var tcoll = cljs.core.first(arglist__6681);
arglist__6681 = cljs.core.next(arglist__6681);
var key = cljs.core.first(arglist__6681);
var ks = cljs.core.rest(arglist__6681);
return G__6676__delegate(tcoll,key,ks);
});
G__6676.cljs$core$IFn$_invoke$arity$variadic = G__6676__delegate;
return G__6676;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__6682 = null;
if (arguments.length > 2) {
var G__6683__i = 0, G__6683__a = new Array(arguments.length -  2);
while (G__6683__i < G__6683__a.length) {G__6683__a[G__6683__i] = arguments[G__6683__i + 2]; ++G__6683__i;}
G__6682 = new cljs.core.IndexedSeq(G__6683__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__6682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__6684__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6685 = ntcoll;
var G__6686 = cljs.core.first(vals);
var G__6687 = cljs.core.next(vals);
tcoll = G__6685;
val = G__6686;
vals = G__6687;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6684 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6688__i = 0, G__6688__a = new Array(arguments.length -  2);
while (G__6688__i < G__6688__a.length) {G__6688__a[G__6688__i] = arguments[G__6688__i + 2]; ++G__6688__i;}
  vals = new cljs.core.IndexedSeq(G__6688__a,0);
} 
return G__6684__delegate.call(this,tcoll,val,vals);};
G__6684.cljs$lang$maxFixedArity = 2;
G__6684.cljs$lang$applyTo = (function (arglist__6689){
var tcoll = cljs.core.first(arglist__6689);
arglist__6689 = cljs.core.next(arglist__6689);
var val = cljs.core.first(arglist__6689);
var vals = cljs.core.rest(arglist__6689);
return G__6684__delegate(tcoll,val,vals);
});
G__6684.cljs$core$IFn$_invoke$arity$variadic = G__6684__delegate;
return G__6684;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__6690 = null;
if (arguments.length > 2) {
var G__6691__i = 0, G__6691__a = new Array(arguments.length -  2);
while (G__6691__i < G__6691__a.length) {G__6691__a[G__6691__i] = arguments[G__6691__i + 2]; ++G__6691__i;}
G__6690 = new cljs.core.IndexedSeq(G__6691__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6690);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4703 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4703);
} else {
var G__6902 = a4703;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6902) : f.call(null,G__6902));
}
} else {
var b4704 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4703,b4704);
} else {
var G__6903 = a4703;
var G__6904 = b4704;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6903,G__6904) : f.call(null,G__6903,G__6904));
}
} else {
var c4705 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4703,b4704,c4705);
} else {
var G__6905 = a4703;
var G__6906 = b4704;
var G__6907 = c4705;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6905,G__6906,G__6907) : f.call(null,G__6905,G__6906,G__6907));
}
} else {
var d4706 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4703,b4704,c4705,d4706);
} else {
var G__6908 = a4703;
var G__6909 = b4704;
var G__6910 = c4705;
var G__6911 = d4706;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__6908,G__6909,G__6910,G__6911) : f.call(null,G__6908,G__6909,G__6910,G__6911));
}
} else {
var e4707 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4703,b4704,c4705,d4706,e4707);
} else {
var G__6912 = a4703;
var G__6913 = b4704;
var G__6914 = c4705;
var G__6915 = d4706;
var G__6916 = e4707;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__6912,G__6913,G__6914,G__6915,G__6916) : f.call(null,G__6912,G__6913,G__6914,G__6915,G__6916));
}
} else {
var f4708 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4703,b4704,c4705,d4706,e4707,f4708);
} else {
var G__6917 = a4703;
var G__6918 = b4704;
var G__6919 = c4705;
var G__6920 = d4706;
var G__6921 = e4707;
var G__6922 = f4708;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__6917,G__6918,G__6919,G__6920,G__6921,G__6922) : f.call(null,G__6917,G__6918,G__6919,G__6920,G__6921,G__6922));
}
} else {
var g4709 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4703,b4704,c4705,d4706,e4707,f4708,g4709);
} else {
var G__6923 = a4703;
var G__6924 = b4704;
var G__6925 = c4705;
var G__6926 = d4706;
var G__6927 = e4707;
var G__6928 = f4708;
var G__6929 = g4709;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__6923,G__6924,G__6925,G__6926,G__6927,G__6928,G__6929) : f.call(null,G__6923,G__6924,G__6925,G__6926,G__6927,G__6928,G__6929));
}
} else {
var h4710 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710);
} else {
var G__6930 = a4703;
var G__6931 = b4704;
var G__6932 = c4705;
var G__6933 = d4706;
var G__6934 = e4707;
var G__6935 = f4708;
var G__6936 = g4709;
var G__6937 = h4710;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__6930,G__6931,G__6932,G__6933,G__6934,G__6935,G__6936,G__6937) : f.call(null,G__6930,G__6931,G__6932,G__6933,G__6934,G__6935,G__6936,G__6937));
}
} else {
var i4711 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711);
} else {
var G__6938 = a4703;
var G__6939 = b4704;
var G__6940 = c4705;
var G__6941 = d4706;
var G__6942 = e4707;
var G__6943 = f4708;
var G__6944 = g4709;
var G__6945 = h4710;
var G__6946 = i4711;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__6938,G__6939,G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946) : f.call(null,G__6938,G__6939,G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946));
}
} else {
var j4712 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712);
} else {
var G__6947 = a4703;
var G__6948 = b4704;
var G__6949 = c4705;
var G__6950 = d4706;
var G__6951 = e4707;
var G__6952 = f4708;
var G__6953 = g4709;
var G__6954 = h4710;
var G__6955 = i4711;
var G__6956 = j4712;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__6947,G__6948,G__6949,G__6950,G__6951,G__6952,G__6953,G__6954,G__6955,G__6956) : f.call(null,G__6947,G__6948,G__6949,G__6950,G__6951,G__6952,G__6953,G__6954,G__6955,G__6956));
}
} else {
var k4713 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713);
} else {
var G__6957 = a4703;
var G__6958 = b4704;
var G__6959 = c4705;
var G__6960 = d4706;
var G__6961 = e4707;
var G__6962 = f4708;
var G__6963 = g4709;
var G__6964 = h4710;
var G__6965 = i4711;
var G__6966 = j4712;
var G__6967 = k4713;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967) : f.call(null,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967));
}
} else {
var l4714 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714);
} else {
var G__6968 = a4703;
var G__6969 = b4704;
var G__6970 = c4705;
var G__6971 = d4706;
var G__6972 = e4707;
var G__6973 = f4708;
var G__6974 = g4709;
var G__6975 = h4710;
var G__6976 = i4711;
var G__6977 = j4712;
var G__6978 = k4713;
var G__6979 = l4714;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__6968,G__6969,G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979) : f.call(null,G__6968,G__6969,G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979));
}
} else {
var m4715 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715);
} else {
var G__6980 = a4703;
var G__6981 = b4704;
var G__6982 = c4705;
var G__6983 = d4706;
var G__6984 = e4707;
var G__6985 = f4708;
var G__6986 = g4709;
var G__6987 = h4710;
var G__6988 = i4711;
var G__6989 = j4712;
var G__6990 = k4713;
var G__6991 = l4714;
var G__6992 = m4715;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988,G__6989,G__6990,G__6991,G__6992) : f.call(null,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988,G__6989,G__6990,G__6991,G__6992));
}
} else {
var n4716 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716);
} else {
var G__6993 = a4703;
var G__6994 = b4704;
var G__6995 = c4705;
var G__6996 = d4706;
var G__6997 = e4707;
var G__6998 = f4708;
var G__6999 = g4709;
var G__7000 = h4710;
var G__7001 = i4711;
var G__7002 = j4712;
var G__7003 = k4713;
var G__7004 = l4714;
var G__7005 = m4715;
var G__7006 = n4716;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004,G__7005,G__7006) : f.call(null,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004,G__7005,G__7006));
}
} else {
var o4717 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717);
} else {
var G__7007 = a4703;
var G__7008 = b4704;
var G__7009 = c4705;
var G__7010 = d4706;
var G__7011 = e4707;
var G__7012 = f4708;
var G__7013 = g4709;
var G__7014 = h4710;
var G__7015 = i4711;
var G__7016 = j4712;
var G__7017 = k4713;
var G__7018 = l4714;
var G__7019 = m4715;
var G__7020 = n4716;
var G__7021 = o4717;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019,G__7020,G__7021) : f.call(null,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019,G__7020,G__7021));
}
} else {
var p4718 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718);
} else {
var G__7022 = a4703;
var G__7023 = b4704;
var G__7024 = c4705;
var G__7025 = d4706;
var G__7026 = e4707;
var G__7027 = f4708;
var G__7028 = g4709;
var G__7029 = h4710;
var G__7030 = i4711;
var G__7031 = j4712;
var G__7032 = k4713;
var G__7033 = l4714;
var G__7034 = m4715;
var G__7035 = n4716;
var G__7036 = o4717;
var G__7037 = p4718;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7022,G__7023,G__7024,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034,G__7035,G__7036,G__7037) : f.call(null,G__7022,G__7023,G__7024,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034,G__7035,G__7036,G__7037));
}
} else {
var q4719 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719);
} else {
var G__7038 = a4703;
var G__7039 = b4704;
var G__7040 = c4705;
var G__7041 = d4706;
var G__7042 = e4707;
var G__7043 = f4708;
var G__7044 = g4709;
var G__7045 = h4710;
var G__7046 = i4711;
var G__7047 = j4712;
var G__7048 = k4713;
var G__7049 = l4714;
var G__7050 = m4715;
var G__7051 = n4716;
var G__7052 = o4717;
var G__7053 = p4718;
var G__7054 = q4719;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046,G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054) : f.call(null,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046,G__7047,G__7048,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054));
}
} else {
var r4720 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719,r4720);
} else {
var G__7055 = a4703;
var G__7056 = b4704;
var G__7057 = c4705;
var G__7058 = d4706;
var G__7059 = e4707;
var G__7060 = f4708;
var G__7061 = g4709;
var G__7062 = h4710;
var G__7063 = i4711;
var G__7064 = j4712;
var G__7065 = k4713;
var G__7066 = l4714;
var G__7067 = m4715;
var G__7068 = n4716;
var G__7069 = o4717;
var G__7070 = p4718;
var G__7071 = q4719;
var G__7072 = r4720;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065,G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072) : f.call(null,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065,G__7066,G__7067,G__7068,G__7069,G__7070,G__7071,G__7072));
}
} else {
var s4721 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719,r4720,s4721);
} else {
var G__7073 = a4703;
var G__7074 = b4704;
var G__7075 = c4705;
var G__7076 = d4706;
var G__7077 = e4707;
var G__7078 = f4708;
var G__7079 = g4709;
var G__7080 = h4710;
var G__7081 = i4711;
var G__7082 = j4712;
var G__7083 = k4713;
var G__7084 = l4714;
var G__7085 = m4715;
var G__7086 = n4716;
var G__7087 = o4717;
var G__7088 = p4718;
var G__7089 = q4719;
var G__7090 = r4720;
var G__7091 = s4721;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7073,G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080,G__7081,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088,G__7089,G__7090,G__7091) : f.call(null,G__7073,G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080,G__7081,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088,G__7089,G__7090,G__7091));
}
} else {
var t4722 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719,r4720,s4721,t4722);
} else {
var G__7092 = a4703;
var G__7093 = b4704;
var G__7094 = c4705;
var G__7095 = d4706;
var G__7096 = e4707;
var G__7097 = f4708;
var G__7098 = g4709;
var G__7099 = h4710;
var G__7100 = i4711;
var G__7101 = j4712;
var G__7102 = k4713;
var G__7103 = l4714;
var G__7104 = m4715;
var G__7105 = n4716;
var G__7106 = o4717;
var G__7107 = p4718;
var G__7108 = q4719;
var G__7109 = r4720;
var G__7110 = s4721;
var G__7111 = t4722;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101,G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111) : f.call(null,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101,G__7102,G__7103,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__7112__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__7112 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__7113__i = 0, G__7113__a = new Array(arguments.length -  5);
while (G__7113__i < G__7113__a.length) {G__7113__a[G__7113__i] = arguments[G__7113__i + 5]; ++G__7113__i;}
  args = new cljs.core.IndexedSeq(G__7113__a,0);
} 
return G__7112__delegate.call(this,f,a,b,c,d,args);};
G__7112.cljs$lang$maxFixedArity = 5;
G__7112.cljs$lang$applyTo = (function (arglist__7114){
var f = cljs.core.first(arglist__7114);
arglist__7114 = cljs.core.next(arglist__7114);
var a = cljs.core.first(arglist__7114);
arglist__7114 = cljs.core.next(arglist__7114);
var b = cljs.core.first(arglist__7114);
arglist__7114 = cljs.core.next(arglist__7114);
var c = cljs.core.first(arglist__7114);
arglist__7114 = cljs.core.next(arglist__7114);
var d = cljs.core.first(arglist__7114);
var args = cljs.core.rest(arglist__7114);
return G__7112__delegate(f,a,b,c,d,args);
});
G__7112.cljs$core$IFn$_invoke$arity$variadic = G__7112__delegate;
return G__7112;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__7115 = null;
if (arguments.length > 5) {
var G__7116__i = 0, G__7116__a = new Array(arguments.length -  5);
while (G__7116__i < G__7116__a.length) {G__7116__a[G__7116__i] = arguments[G__7116__i + 5]; ++G__7116__i;}
G__7115 = new cljs.core.IndexedSeq(G__7116__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__7115);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__7132 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7132) : f.call(null,G__7132));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__7133 = cljs.core.meta(obj);
var G__7134 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7133,G__7134) : f.call(null,G__7133,G__7134));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__7135 = cljs.core.meta(obj);
var G__7136 = a;
var G__7137 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7135,G__7136,G__7137) : f.call(null,G__7135,G__7136,G__7137));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__7138 = cljs.core.meta(obj);
var G__7139 = a;
var G__7140 = b;
var G__7141 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7138,G__7139,G__7140,G__7141) : f.call(null,G__7138,G__7139,G__7140,G__7141));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__7142 = cljs.core.meta(obj);
var G__7143 = a;
var G__7144 = b;
var G__7145 = c;
var G__7146 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7142,G__7143,G__7144,G__7145,G__7146) : f.call(null,G__7142,G__7143,G__7144,G__7145,G__7146));
})());
});
var vary_meta__7 = (function() { 
var G__7147__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__7147 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__7148__i = 0, G__7148__a = new Array(arguments.length -  6);
while (G__7148__i < G__7148__a.length) {G__7148__a[G__7148__i] = arguments[G__7148__i + 6]; ++G__7148__i;}
  args = new cljs.core.IndexedSeq(G__7148__a,0);
} 
return G__7147__delegate.call(this,obj,f,a,b,c,d,args);};
G__7147.cljs$lang$maxFixedArity = 6;
G__7147.cljs$lang$applyTo = (function (arglist__7149){
var obj = cljs.core.first(arglist__7149);
arglist__7149 = cljs.core.next(arglist__7149);
var f = cljs.core.first(arglist__7149);
arglist__7149 = cljs.core.next(arglist__7149);
var a = cljs.core.first(arglist__7149);
arglist__7149 = cljs.core.next(arglist__7149);
var b = cljs.core.first(arglist__7149);
arglist__7149 = cljs.core.next(arglist__7149);
var c = cljs.core.first(arglist__7149);
arglist__7149 = cljs.core.next(arglist__7149);
var d = cljs.core.first(arglist__7149);
var args = cljs.core.rest(arglist__7149);
return G__7147__delegate(obj,f,a,b,c,d,args);
});
G__7147.cljs$core$IFn$_invoke$arity$variadic = G__7147__delegate;
return G__7147;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__7150 = null;
if (arguments.length > 6) {
var G__7151__i = 0, G__7151__a = new Array(arguments.length -  6);
while (G__7151__i < G__7151__a.length) {G__7151__a[G__7151__i] = arguments[G__7151__i + 6]; ++G__7151__i;}
G__7150 = new cljs.core.IndexedSeq(G__7151__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__7150);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__7152__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__7152 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7153__i = 0, G__7153__a = new Array(arguments.length -  2);
while (G__7153__i < G__7153__a.length) {G__7153__a[G__7153__i] = arguments[G__7153__i + 2]; ++G__7153__i;}
  more = new cljs.core.IndexedSeq(G__7153__a,0);
} 
return G__7152__delegate.call(this,x,y,more);};
G__7152.cljs$lang$maxFixedArity = 2;
G__7152.cljs$lang$applyTo = (function (arglist__7154){
var x = cljs.core.first(arglist__7154);
arglist__7154 = cljs.core.next(arglist__7154);
var y = cljs.core.first(arglist__7154);
var more = cljs.core.rest(arglist__7154);
return G__7152__delegate(x,y,more);
});
G__7152.cljs$core$IFn$_invoke$arity$variadic = G__7152__delegate;
return G__7152;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__7155 = null;
if (arguments.length > 2) {
var G__7156__i = 0, G__7156__a = new Array(arguments.length -  2);
while (G__7156__i < G__7156__a.length) {G__7156__a[G__7156__i] = arguments[G__7156__i + 2]; ++G__7156__i;}
G__7155 = new cljs.core.IndexedSeq(G__7156__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t7160 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t7160 = (function (nil_iter,meta7161){
this.nil_iter = nil_iter;
this.meta7161 = meta7161;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t7160.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t7160.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t7160.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t7160.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_7162){
var self__ = this;
var _7162__$1 = this;
return self__.meta7161;
});

cljs.core.t7160.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_7162,meta7161__$1){
var self__ = this;
var _7162__$1 = this;
return (new cljs.core.t7160(self__.nil_iter,meta7161__$1));
});

cljs.core.t7160.cljs$lang$type = true;

cljs.core.t7160.cljs$lang$ctorStr = "cljs.core/t7160";

cljs.core.t7160.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/t7160");
});

cljs.core.__GT_t7160 = (function __GT_t7160(nil_iter__$1,meta7161){
return (new cljs.core.t7160(nil_iter__$1,meta7161));
});

}

return (new cljs.core.t7160(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/adrian/dev/cl/staplo/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3760__auto__ = !((lt.stepper == null));
if(and__3760__auto__){
return self__.iter.hasNext();
} else {
return and__3760__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__7163 = lt;
var G__7164 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7163,G__7164) : self__.xform.call(null,G__7163,G__7164));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7165 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7165) : self__.xform.call(null,G__7165));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__7167 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7167) : xform.call(null,G__7167));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__7169 = cljs.core.next(iters__$1);
iters__$1 = G__7169;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4659__auto___7170 = self__.iters.length;
var i_7171 = (0);
while(true){
if((i_7171 < n__4659__auto___7170)){
(self__.nexts[i_7171] = (self__.iters[i_7171]).next());

var G__7172 = (i_7171 + (1));
i_7171 = G__7172;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3760__auto__ = !((lt.stepper == null));
if(and__3760__auto__){
return this$.hasNext();
} else {
return and__3760__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7168 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7168) : self__.xform.call(null,G__7168));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__7177 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7177) : xform.call(null,G__7177));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__7178_7182 = cljs.core.seq(colls);
var chunk__7179_7183 = null;
var count__7180_7184 = (0);
var i__7181_7185 = (0);
while(true){
if((i__7181_7185 < count__7180_7184)){
var coll_7186 = chunk__7179_7183.cljs$core$IIndexed$_nth$arity$2(null,i__7181_7185);
iters.push(cljs.core.iter(coll_7186));

var G__7187 = seq__7178_7182;
var G__7188 = chunk__7179_7183;
var G__7189 = count__7180_7184;
var G__7190 = (i__7181_7185 + (1));
seq__7178_7182 = G__7187;
chunk__7179_7183 = G__7188;
count__7180_7184 = G__7189;
i__7181_7185 = G__7190;
continue;
} else {
var temp__4126__auto___7191 = cljs.core.seq(seq__7178_7182);
if(temp__4126__auto___7191){
var seq__7178_7192__$1 = temp__4126__auto___7191;
if(cljs.core.chunked_seq_QMARK_(seq__7178_7192__$1)){
var c__4559__auto___7193 = cljs.core.chunk_first(seq__7178_7192__$1);
var G__7194 = cljs.core.chunk_rest(seq__7178_7192__$1);
var G__7195 = c__4559__auto___7193;
var G__7196 = cljs.core.count(c__4559__auto___7193);
var G__7197 = (0);
seq__7178_7182 = G__7194;
chunk__7179_7183 = G__7195;
count__7180_7184 = G__7196;
i__7181_7185 = G__7197;
continue;
} else {
var coll_7198 = cljs.core.first(seq__7178_7192__$1);
iters.push(cljs.core.iter(coll_7198));

var G__7199 = cljs.core.next(seq__7178_7192__$1);
var G__7200 = null;
var G__7201 = (0);
var G__7202 = (0);
seq__7178_7182 = G__7199;
chunk__7179_7183 = G__7200;
count__7180_7184 = G__7201;
i__7181_7185 = G__7202;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3772__auto__ = cljs.core.seq(coll);
if(or__3772__auto__){
return or__3772__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__7203__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__7203 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__7204__i = 0, G__7204__a = new Array(arguments.length -  2);
while (G__7204__i < G__7204__a.length) {G__7204__a[G__7204__i] = arguments[G__7204__i + 2]; ++G__7204__i;}
  colls = new cljs.core.IndexedSeq(G__7204__a,0);
} 
return G__7203__delegate.call(this,xform,coll,colls);};
G__7203.cljs$lang$maxFixedArity = 2;
G__7203.cljs$lang$applyTo = (function (arglist__7205){
var xform = cljs.core.first(arglist__7205);
arglist__7205 = cljs.core.next(arglist__7205);
var coll = cljs.core.first(arglist__7205);
var colls = cljs.core.rest(arglist__7205);
return G__7203__delegate(xform,coll,colls);
});
G__7203.cljs$core$IFn$_invoke$arity$variadic = G__7203__delegate;
return G__7203;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__7206 = null;
if (arguments.length > 2) {
var G__7207__i = 0, G__7207__a = new Array(arguments.length -  2);
while (G__7207__i < G__7207__a.length) {G__7207__a[G__7207__i] = arguments[G__7207__i + 2]; ++G__7207__i;}
G__7206 = new cljs.core.IndexedSeq(G__7207__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__7206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__7209 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7209) : pred.call(null,G__7209));
})())){
var G__7210 = pred;
var G__7211 = cljs.core.next(coll);
pred = G__7210;
coll = G__7211;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3772__auto__ = (function (){var G__7215 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7215) : pred.call(null,G__7215));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__7216 = pred;
var G__7217 = cljs.core.next(coll);
pred = G__7216;
coll = G__7217;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__7224 = null;
var G__7224__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__7224__1 = (function (x){
return cljs.core.not((function (){var G__7221 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7221) : f.call(null,G__7221));
})());
});
var G__7224__2 = (function (x,y){
return cljs.core.not((function (){var G__7222 = x;
var G__7223 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7222,G__7223) : f.call(null,G__7222,G__7223));
})());
});
var G__7224__3 = (function() { 
var G__7225__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__7225 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7226__i = 0, G__7226__a = new Array(arguments.length -  2);
while (G__7226__i < G__7226__a.length) {G__7226__a[G__7226__i] = arguments[G__7226__i + 2]; ++G__7226__i;}
  zs = new cljs.core.IndexedSeq(G__7226__a,0);
} 
return G__7225__delegate.call(this,x,y,zs);};
G__7225.cljs$lang$maxFixedArity = 2;
G__7225.cljs$lang$applyTo = (function (arglist__7227){
var x = cljs.core.first(arglist__7227);
arglist__7227 = cljs.core.next(arglist__7227);
var y = cljs.core.first(arglist__7227);
var zs = cljs.core.rest(arglist__7227);
return G__7225__delegate(x,y,zs);
});
G__7225.cljs$core$IFn$_invoke$arity$variadic = G__7225__delegate;
return G__7225;
})()
;
G__7224 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__7224__0.call(this);
case 1:
return G__7224__1.call(this,x);
case 2:
return G__7224__2.call(this,x,y);
default:
var G__7228 = null;
if (arguments.length > 2) {
var G__7229__i = 0, G__7229__a = new Array(arguments.length -  2);
while (G__7229__i < G__7229__a.length) {G__7229__a[G__7229__i] = arguments[G__7229__i + 2]; ++G__7229__i;}
G__7228 = new cljs.core.IndexedSeq(G__7229__a,0);
}
return G__7224__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7224.cljs$lang$maxFixedArity = 2;
G__7224.cljs$lang$applyTo = G__7224__3.cljs$lang$applyTo;
G__7224.cljs$core$IFn$_invoke$arity$0 = G__7224__0;
G__7224.cljs$core$IFn$_invoke$arity$1 = G__7224__1;
G__7224.cljs$core$IFn$_invoke$arity$2 = G__7224__2;
G__7224.cljs$core$IFn$_invoke$arity$variadic = G__7224__3.cljs$core$IFn$_invoke$arity$variadic;
return G__7224;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__7230__delegate = function (args){
return x;
};
var G__7230 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7231__i = 0, G__7231__a = new Array(arguments.length -  0);
while (G__7231__i < G__7231__a.length) {G__7231__a[G__7231__i] = arguments[G__7231__i + 0]; ++G__7231__i;}
  args = new cljs.core.IndexedSeq(G__7231__a,0);
} 
return G__7230__delegate.call(this,args);};
G__7230.cljs$lang$maxFixedArity = 0;
G__7230.cljs$lang$applyTo = (function (arglist__7232){
var args = cljs.core.seq(arglist__7232);
return G__7230__delegate(args);
});
G__7230.cljs$core$IFn$_invoke$arity$variadic = G__7230__delegate;
return G__7230;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__7287 = null;
var G__7287__0 = (function (){
var G__7260 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7260) : f.call(null,G__7260));
});
var G__7287__1 = (function (x){
var G__7261 = (function (){var G__7262 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7262) : g.call(null,G__7262));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7261) : f.call(null,G__7261));
});
var G__7287__2 = (function (x,y){
var G__7263 = (function (){var G__7264 = x;
var G__7265 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7264,G__7265) : g.call(null,G__7264,G__7265));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7263) : f.call(null,G__7263));
});
var G__7287__3 = (function (x,y,z){
var G__7266 = (function (){var G__7267 = x;
var G__7268 = y;
var G__7269 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7267,G__7268,G__7269) : g.call(null,G__7267,G__7268,G__7269));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7266) : f.call(null,G__7266));
});
var G__7287__4 = (function() { 
var G__7288__delegate = function (x,y,z,args){
var G__7270 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7270) : f.call(null,G__7270));
};
var G__7288 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7289__i = 0, G__7289__a = new Array(arguments.length -  3);
while (G__7289__i < G__7289__a.length) {G__7289__a[G__7289__i] = arguments[G__7289__i + 3]; ++G__7289__i;}
  args = new cljs.core.IndexedSeq(G__7289__a,0);
} 
return G__7288__delegate.call(this,x,y,z,args);};
G__7288.cljs$lang$maxFixedArity = 3;
G__7288.cljs$lang$applyTo = (function (arglist__7290){
var x = cljs.core.first(arglist__7290);
arglist__7290 = cljs.core.next(arglist__7290);
var y = cljs.core.first(arglist__7290);
arglist__7290 = cljs.core.next(arglist__7290);
var z = cljs.core.first(arglist__7290);
var args = cljs.core.rest(arglist__7290);
return G__7288__delegate(x,y,z,args);
});
G__7288.cljs$core$IFn$_invoke$arity$variadic = G__7288__delegate;
return G__7288;
})()
;
G__7287 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7287__0.call(this);
case 1:
return G__7287__1.call(this,x);
case 2:
return G__7287__2.call(this,x,y);
case 3:
return G__7287__3.call(this,x,y,z);
default:
var G__7291 = null;
if (arguments.length > 3) {
var G__7292__i = 0, G__7292__a = new Array(arguments.length -  3);
while (G__7292__i < G__7292__a.length) {G__7292__a[G__7292__i] = arguments[G__7292__i + 3]; ++G__7292__i;}
G__7291 = new cljs.core.IndexedSeq(G__7292__a,0);
}
return G__7287__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7287.cljs$lang$maxFixedArity = 3;
G__7287.cljs$lang$applyTo = G__7287__4.cljs$lang$applyTo;
G__7287.cljs$core$IFn$_invoke$arity$0 = G__7287__0;
G__7287.cljs$core$IFn$_invoke$arity$1 = G__7287__1;
G__7287.cljs$core$IFn$_invoke$arity$2 = G__7287__2;
G__7287.cljs$core$IFn$_invoke$arity$3 = G__7287__3;
G__7287.cljs$core$IFn$_invoke$arity$variadic = G__7287__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7287;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__7293 = null;
var G__7293__0 = (function (){
var G__7271 = (function (){var G__7272 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7272) : g.call(null,G__7272));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7271) : f.call(null,G__7271));
});
var G__7293__1 = (function (x){
var G__7273 = (function (){var G__7274 = (function (){var G__7275 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7275) : h.call(null,G__7275));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7274) : g.call(null,G__7274));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7273) : f.call(null,G__7273));
});
var G__7293__2 = (function (x,y){
var G__7276 = (function (){var G__7277 = (function (){var G__7278 = x;
var G__7279 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7278,G__7279) : h.call(null,G__7278,G__7279));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7277) : g.call(null,G__7277));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7276) : f.call(null,G__7276));
});
var G__7293__3 = (function (x,y,z){
var G__7280 = (function (){var G__7281 = (function (){var G__7282 = x;
var G__7283 = y;
var G__7284 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7282,G__7283,G__7284) : h.call(null,G__7282,G__7283,G__7284));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7281) : g.call(null,G__7281));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7280) : f.call(null,G__7280));
});
var G__7293__4 = (function() { 
var G__7294__delegate = function (x,y,z,args){
var G__7285 = (function (){var G__7286 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7286) : g.call(null,G__7286));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7285) : f.call(null,G__7285));
};
var G__7294 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7295__i = 0, G__7295__a = new Array(arguments.length -  3);
while (G__7295__i < G__7295__a.length) {G__7295__a[G__7295__i] = arguments[G__7295__i + 3]; ++G__7295__i;}
  args = new cljs.core.IndexedSeq(G__7295__a,0);
} 
return G__7294__delegate.call(this,x,y,z,args);};
G__7294.cljs$lang$maxFixedArity = 3;
G__7294.cljs$lang$applyTo = (function (arglist__7296){
var x = cljs.core.first(arglist__7296);
arglist__7296 = cljs.core.next(arglist__7296);
var y = cljs.core.first(arglist__7296);
arglist__7296 = cljs.core.next(arglist__7296);
var z = cljs.core.first(arglist__7296);
var args = cljs.core.rest(arglist__7296);
return G__7294__delegate(x,y,z,args);
});
G__7294.cljs$core$IFn$_invoke$arity$variadic = G__7294__delegate;
return G__7294;
})()
;
G__7293 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7293__0.call(this);
case 1:
return G__7293__1.call(this,x);
case 2:
return G__7293__2.call(this,x,y);
case 3:
return G__7293__3.call(this,x,y,z);
default:
var G__7297 = null;
if (arguments.length > 3) {
var G__7298__i = 0, G__7298__a = new Array(arguments.length -  3);
while (G__7298__i < G__7298__a.length) {G__7298__a[G__7298__i] = arguments[G__7298__i + 3]; ++G__7298__i;}
G__7297 = new cljs.core.IndexedSeq(G__7298__a,0);
}
return G__7293__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7293.cljs$lang$maxFixedArity = 3;
G__7293.cljs$lang$applyTo = G__7293__4.cljs$lang$applyTo;
G__7293.cljs$core$IFn$_invoke$arity$0 = G__7293__0;
G__7293.cljs$core$IFn$_invoke$arity$1 = G__7293__1;
G__7293.cljs$core$IFn$_invoke$arity$2 = G__7293__2;
G__7293.cljs$core$IFn$_invoke$arity$3 = G__7293__3;
G__7293.cljs$core$IFn$_invoke$arity$variadic = G__7293__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7293;
})()
});
var comp__4 = (function() { 
var G__7299__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__7300__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__7301 = cljs.core.first(fs__$2).call(null,ret);
var G__7302 = cljs.core.next(fs__$2);
ret = G__7301;
fs__$2 = G__7302;
continue;
} else {
return ret;
}
break;
}
};
var G__7300 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7303__i = 0, G__7303__a = new Array(arguments.length -  0);
while (G__7303__i < G__7303__a.length) {G__7303__a[G__7303__i] = arguments[G__7303__i + 0]; ++G__7303__i;}
  args = new cljs.core.IndexedSeq(G__7303__a,0);
} 
return G__7300__delegate.call(this,args);};
G__7300.cljs$lang$maxFixedArity = 0;
G__7300.cljs$lang$applyTo = (function (arglist__7304){
var args = cljs.core.seq(arglist__7304);
return G__7300__delegate(args);
});
G__7300.cljs$core$IFn$_invoke$arity$variadic = G__7300__delegate;
return G__7300;
})()
;
;})(fs__$1))
};
var G__7299 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__7305__i = 0, G__7305__a = new Array(arguments.length -  3);
while (G__7305__i < G__7305__a.length) {G__7305__a[G__7305__i] = arguments[G__7305__i + 3]; ++G__7305__i;}
  fs = new cljs.core.IndexedSeq(G__7305__a,0);
} 
return G__7299__delegate.call(this,f1,f2,f3,fs);};
G__7299.cljs$lang$maxFixedArity = 3;
G__7299.cljs$lang$applyTo = (function (arglist__7306){
var f1 = cljs.core.first(arglist__7306);
arglist__7306 = cljs.core.next(arglist__7306);
var f2 = cljs.core.first(arglist__7306);
arglist__7306 = cljs.core.next(arglist__7306);
var f3 = cljs.core.first(arglist__7306);
var fs = cljs.core.rest(arglist__7306);
return G__7299__delegate(f1,f2,f3,fs);
});
G__7299.cljs$core$IFn$_invoke$arity$variadic = G__7299__delegate;
return G__7299;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__7307 = null;
if (arguments.length > 3) {
var G__7308__i = 0, G__7308__a = new Array(arguments.length -  3);
while (G__7308__i < G__7308__a.length) {G__7308__a[G__7308__i] = arguments[G__7308__i + 3]; ++G__7308__i;}
G__7307 = new cljs.core.IndexedSeq(G__7308__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__7307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__7393 = null;
var G__7393__0 = (function (){
var G__7351 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7351) : f.call(null,G__7351));
});
var G__7393__1 = (function (x){
var G__7352 = arg1;
var G__7353 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7352,G__7353) : f.call(null,G__7352,G__7353));
});
var G__7393__2 = (function (x,y){
var G__7354 = arg1;
var G__7355 = x;
var G__7356 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7354,G__7355,G__7356) : f.call(null,G__7354,G__7355,G__7356));
});
var G__7393__3 = (function (x,y,z){
var G__7357 = arg1;
var G__7358 = x;
var G__7359 = y;
var G__7360 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7357,G__7358,G__7359,G__7360) : f.call(null,G__7357,G__7358,G__7359,G__7360));
});
var G__7393__4 = (function() { 
var G__7394__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__7394 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7395__i = 0, G__7395__a = new Array(arguments.length -  3);
while (G__7395__i < G__7395__a.length) {G__7395__a[G__7395__i] = arguments[G__7395__i + 3]; ++G__7395__i;}
  args = new cljs.core.IndexedSeq(G__7395__a,0);
} 
return G__7394__delegate.call(this,x,y,z,args);};
G__7394.cljs$lang$maxFixedArity = 3;
G__7394.cljs$lang$applyTo = (function (arglist__7396){
var x = cljs.core.first(arglist__7396);
arglist__7396 = cljs.core.next(arglist__7396);
var y = cljs.core.first(arglist__7396);
arglist__7396 = cljs.core.next(arglist__7396);
var z = cljs.core.first(arglist__7396);
var args = cljs.core.rest(arglist__7396);
return G__7394__delegate(x,y,z,args);
});
G__7394.cljs$core$IFn$_invoke$arity$variadic = G__7394__delegate;
return G__7394;
})()
;
G__7393 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7393__0.call(this);
case 1:
return G__7393__1.call(this,x);
case 2:
return G__7393__2.call(this,x,y);
case 3:
return G__7393__3.call(this,x,y,z);
default:
var G__7397 = null;
if (arguments.length > 3) {
var G__7398__i = 0, G__7398__a = new Array(arguments.length -  3);
while (G__7398__i < G__7398__a.length) {G__7398__a[G__7398__i] = arguments[G__7398__i + 3]; ++G__7398__i;}
G__7397 = new cljs.core.IndexedSeq(G__7398__a,0);
}
return G__7393__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7397);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7393.cljs$lang$maxFixedArity = 3;
G__7393.cljs$lang$applyTo = G__7393__4.cljs$lang$applyTo;
G__7393.cljs$core$IFn$_invoke$arity$0 = G__7393__0;
G__7393.cljs$core$IFn$_invoke$arity$1 = G__7393__1;
G__7393.cljs$core$IFn$_invoke$arity$2 = G__7393__2;
G__7393.cljs$core$IFn$_invoke$arity$3 = G__7393__3;
G__7393.cljs$core$IFn$_invoke$arity$variadic = G__7393__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7393;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__7399 = null;
var G__7399__0 = (function (){
var G__7361 = arg1;
var G__7362 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7361,G__7362) : f.call(null,G__7361,G__7362));
});
var G__7399__1 = (function (x){
var G__7363 = arg1;
var G__7364 = arg2;
var G__7365 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7363,G__7364,G__7365) : f.call(null,G__7363,G__7364,G__7365));
});
var G__7399__2 = (function (x,y){
var G__7366 = arg1;
var G__7367 = arg2;
var G__7368 = x;
var G__7369 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7366,G__7367,G__7368,G__7369) : f.call(null,G__7366,G__7367,G__7368,G__7369));
});
var G__7399__3 = (function (x,y,z){
var G__7370 = arg1;
var G__7371 = arg2;
var G__7372 = x;
var G__7373 = y;
var G__7374 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7370,G__7371,G__7372,G__7373,G__7374) : f.call(null,G__7370,G__7371,G__7372,G__7373,G__7374));
});
var G__7399__4 = (function() { 
var G__7400__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__7400 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7401__i = 0, G__7401__a = new Array(arguments.length -  3);
while (G__7401__i < G__7401__a.length) {G__7401__a[G__7401__i] = arguments[G__7401__i + 3]; ++G__7401__i;}
  args = new cljs.core.IndexedSeq(G__7401__a,0);
} 
return G__7400__delegate.call(this,x,y,z,args);};
G__7400.cljs$lang$maxFixedArity = 3;
G__7400.cljs$lang$applyTo = (function (arglist__7402){
var x = cljs.core.first(arglist__7402);
arglist__7402 = cljs.core.next(arglist__7402);
var y = cljs.core.first(arglist__7402);
arglist__7402 = cljs.core.next(arglist__7402);
var z = cljs.core.first(arglist__7402);
var args = cljs.core.rest(arglist__7402);
return G__7400__delegate(x,y,z,args);
});
G__7400.cljs$core$IFn$_invoke$arity$variadic = G__7400__delegate;
return G__7400;
})()
;
G__7399 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7399__0.call(this);
case 1:
return G__7399__1.call(this,x);
case 2:
return G__7399__2.call(this,x,y);
case 3:
return G__7399__3.call(this,x,y,z);
default:
var G__7403 = null;
if (arguments.length > 3) {
var G__7404__i = 0, G__7404__a = new Array(arguments.length -  3);
while (G__7404__i < G__7404__a.length) {G__7404__a[G__7404__i] = arguments[G__7404__i + 3]; ++G__7404__i;}
G__7403 = new cljs.core.IndexedSeq(G__7404__a,0);
}
return G__7399__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7403);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7399.cljs$lang$maxFixedArity = 3;
G__7399.cljs$lang$applyTo = G__7399__4.cljs$lang$applyTo;
G__7399.cljs$core$IFn$_invoke$arity$0 = G__7399__0;
G__7399.cljs$core$IFn$_invoke$arity$1 = G__7399__1;
G__7399.cljs$core$IFn$_invoke$arity$2 = G__7399__2;
G__7399.cljs$core$IFn$_invoke$arity$3 = G__7399__3;
G__7399.cljs$core$IFn$_invoke$arity$variadic = G__7399__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7399;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__7405 = null;
var G__7405__0 = (function (){
var G__7375 = arg1;
var G__7376 = arg2;
var G__7377 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7375,G__7376,G__7377) : f.call(null,G__7375,G__7376,G__7377));
});
var G__7405__1 = (function (x){
var G__7378 = arg1;
var G__7379 = arg2;
var G__7380 = arg3;
var G__7381 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7378,G__7379,G__7380,G__7381) : f.call(null,G__7378,G__7379,G__7380,G__7381));
});
var G__7405__2 = (function (x,y){
var G__7382 = arg1;
var G__7383 = arg2;
var G__7384 = arg3;
var G__7385 = x;
var G__7386 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7382,G__7383,G__7384,G__7385,G__7386) : f.call(null,G__7382,G__7383,G__7384,G__7385,G__7386));
});
var G__7405__3 = (function (x,y,z){
var G__7387 = arg1;
var G__7388 = arg2;
var G__7389 = arg3;
var G__7390 = x;
var G__7391 = y;
var G__7392 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7387,G__7388,G__7389,G__7390,G__7391,G__7392) : f.call(null,G__7387,G__7388,G__7389,G__7390,G__7391,G__7392));
});
var G__7405__4 = (function() { 
var G__7406__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__7406 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7407__i = 0, G__7407__a = new Array(arguments.length -  3);
while (G__7407__i < G__7407__a.length) {G__7407__a[G__7407__i] = arguments[G__7407__i + 3]; ++G__7407__i;}
  args = new cljs.core.IndexedSeq(G__7407__a,0);
} 
return G__7406__delegate.call(this,x,y,z,args);};
G__7406.cljs$lang$maxFixedArity = 3;
G__7406.cljs$lang$applyTo = (function (arglist__7408){
var x = cljs.core.first(arglist__7408);
arglist__7408 = cljs.core.next(arglist__7408);
var y = cljs.core.first(arglist__7408);
arglist__7408 = cljs.core.next(arglist__7408);
var z = cljs.core.first(arglist__7408);
var args = cljs.core.rest(arglist__7408);
return G__7406__delegate(x,y,z,args);
});
G__7406.cljs$core$IFn$_invoke$arity$variadic = G__7406__delegate;
return G__7406;
})()
;
G__7405 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7405__0.call(this);
case 1:
return G__7405__1.call(this,x);
case 2:
return G__7405__2.call(this,x,y);
case 3:
return G__7405__3.call(this,x,y,z);
default:
var G__7409 = null;
if (arguments.length > 3) {
var G__7410__i = 0, G__7410__a = new Array(arguments.length -  3);
while (G__7410__i < G__7410__a.length) {G__7410__a[G__7410__i] = arguments[G__7410__i + 3]; ++G__7410__i;}
G__7409 = new cljs.core.IndexedSeq(G__7410__a,0);
}
return G__7405__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7405.cljs$lang$maxFixedArity = 3;
G__7405.cljs$lang$applyTo = G__7405__4.cljs$lang$applyTo;
G__7405.cljs$core$IFn$_invoke$arity$0 = G__7405__0;
G__7405.cljs$core$IFn$_invoke$arity$1 = G__7405__1;
G__7405.cljs$core$IFn$_invoke$arity$2 = G__7405__2;
G__7405.cljs$core$IFn$_invoke$arity$3 = G__7405__3;
G__7405.cljs$core$IFn$_invoke$arity$variadic = G__7405__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7405;
})()
});
var partial__5 = (function() { 
var G__7411__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__7412__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__7412 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7413__i = 0, G__7413__a = new Array(arguments.length -  0);
while (G__7413__i < G__7413__a.length) {G__7413__a[G__7413__i] = arguments[G__7413__i + 0]; ++G__7413__i;}
  args = new cljs.core.IndexedSeq(G__7413__a,0);
} 
return G__7412__delegate.call(this,args);};
G__7412.cljs$lang$maxFixedArity = 0;
G__7412.cljs$lang$applyTo = (function (arglist__7414){
var args = cljs.core.seq(arglist__7414);
return G__7412__delegate(args);
});
G__7412.cljs$core$IFn$_invoke$arity$variadic = G__7412__delegate;
return G__7412;
})()
;
};
var G__7411 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__7415__i = 0, G__7415__a = new Array(arguments.length -  4);
while (G__7415__i < G__7415__a.length) {G__7415__a[G__7415__i] = arguments[G__7415__i + 4]; ++G__7415__i;}
  more = new cljs.core.IndexedSeq(G__7415__a,0);
} 
return G__7411__delegate.call(this,f,arg1,arg2,arg3,more);};
G__7411.cljs$lang$maxFixedArity = 4;
G__7411.cljs$lang$applyTo = (function (arglist__7416){
var f = cljs.core.first(arglist__7416);
arglist__7416 = cljs.core.next(arglist__7416);
var arg1 = cljs.core.first(arglist__7416);
arglist__7416 = cljs.core.next(arglist__7416);
var arg2 = cljs.core.first(arglist__7416);
arglist__7416 = cljs.core.next(arglist__7416);
var arg3 = cljs.core.first(arglist__7416);
var more = cljs.core.rest(arglist__7416);
return G__7411__delegate(f,arg1,arg2,arg3,more);
});
G__7411.cljs$core$IFn$_invoke$arity$variadic = G__7411__delegate;
return G__7411;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__7417 = null;
if (arguments.length > 4) {
var G__7418__i = 0, G__7418__a = new Array(arguments.length -  4);
while (G__7418__i < G__7418__a.length) {G__7418__a[G__7418__i] = arguments[G__7418__i + 4]; ++G__7418__i;}
G__7417 = new cljs.core.IndexedSeq(G__7418__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__7417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__7451 = null;
var G__7451__1 = (function (a){
var G__7435 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7435) : f.call(null,G__7435));
});
var G__7451__2 = (function (a,b){
var G__7436 = (((a == null))?x:a);
var G__7437 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7436,G__7437) : f.call(null,G__7436,G__7437));
});
var G__7451__3 = (function (a,b,c){
var G__7438 = (((a == null))?x:a);
var G__7439 = b;
var G__7440 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7438,G__7439,G__7440) : f.call(null,G__7438,G__7439,G__7440));
});
var G__7451__4 = (function() { 
var G__7452__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__7452 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7453__i = 0, G__7453__a = new Array(arguments.length -  3);
while (G__7453__i < G__7453__a.length) {G__7453__a[G__7453__i] = arguments[G__7453__i + 3]; ++G__7453__i;}
  ds = new cljs.core.IndexedSeq(G__7453__a,0);
} 
return G__7452__delegate.call(this,a,b,c,ds);};
G__7452.cljs$lang$maxFixedArity = 3;
G__7452.cljs$lang$applyTo = (function (arglist__7454){
var a = cljs.core.first(arglist__7454);
arglist__7454 = cljs.core.next(arglist__7454);
var b = cljs.core.first(arglist__7454);
arglist__7454 = cljs.core.next(arglist__7454);
var c = cljs.core.first(arglist__7454);
var ds = cljs.core.rest(arglist__7454);
return G__7452__delegate(a,b,c,ds);
});
G__7452.cljs$core$IFn$_invoke$arity$variadic = G__7452__delegate;
return G__7452;
})()
;
G__7451 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__7451__1.call(this,a);
case 2:
return G__7451__2.call(this,a,b);
case 3:
return G__7451__3.call(this,a,b,c);
default:
var G__7455 = null;
if (arguments.length > 3) {
var G__7456__i = 0, G__7456__a = new Array(arguments.length -  3);
while (G__7456__i < G__7456__a.length) {G__7456__a[G__7456__i] = arguments[G__7456__i + 3]; ++G__7456__i;}
G__7455 = new cljs.core.IndexedSeq(G__7456__a,0);
}
return G__7451__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7451.cljs$lang$maxFixedArity = 3;
G__7451.cljs$lang$applyTo = G__7451__4.cljs$lang$applyTo;
G__7451.cljs$core$IFn$_invoke$arity$1 = G__7451__1;
G__7451.cljs$core$IFn$_invoke$arity$2 = G__7451__2;
G__7451.cljs$core$IFn$_invoke$arity$3 = G__7451__3;
G__7451.cljs$core$IFn$_invoke$arity$variadic = G__7451__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7451;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__7457 = null;
var G__7457__2 = (function (a,b){
var G__7441 = (((a == null))?x:a);
var G__7442 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7441,G__7442) : f.call(null,G__7441,G__7442));
});
var G__7457__3 = (function (a,b,c){
var G__7443 = (((a == null))?x:a);
var G__7444 = (((b == null))?y:b);
var G__7445 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7443,G__7444,G__7445) : f.call(null,G__7443,G__7444,G__7445));
});
var G__7457__4 = (function() { 
var G__7458__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__7458 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7459__i = 0, G__7459__a = new Array(arguments.length -  3);
while (G__7459__i < G__7459__a.length) {G__7459__a[G__7459__i] = arguments[G__7459__i + 3]; ++G__7459__i;}
  ds = new cljs.core.IndexedSeq(G__7459__a,0);
} 
return G__7458__delegate.call(this,a,b,c,ds);};
G__7458.cljs$lang$maxFixedArity = 3;
G__7458.cljs$lang$applyTo = (function (arglist__7460){
var a = cljs.core.first(arglist__7460);
arglist__7460 = cljs.core.next(arglist__7460);
var b = cljs.core.first(arglist__7460);
arglist__7460 = cljs.core.next(arglist__7460);
var c = cljs.core.first(arglist__7460);
var ds = cljs.core.rest(arglist__7460);
return G__7458__delegate(a,b,c,ds);
});
G__7458.cljs$core$IFn$_invoke$arity$variadic = G__7458__delegate;
return G__7458;
})()
;
G__7457 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7457__2.call(this,a,b);
case 3:
return G__7457__3.call(this,a,b,c);
default:
var G__7461 = null;
if (arguments.length > 3) {
var G__7462__i = 0, G__7462__a = new Array(arguments.length -  3);
while (G__7462__i < G__7462__a.length) {G__7462__a[G__7462__i] = arguments[G__7462__i + 3]; ++G__7462__i;}
G__7461 = new cljs.core.IndexedSeq(G__7462__a,0);
}
return G__7457__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7457.cljs$lang$maxFixedArity = 3;
G__7457.cljs$lang$applyTo = G__7457__4.cljs$lang$applyTo;
G__7457.cljs$core$IFn$_invoke$arity$2 = G__7457__2;
G__7457.cljs$core$IFn$_invoke$arity$3 = G__7457__3;
G__7457.cljs$core$IFn$_invoke$arity$variadic = G__7457__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7457;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__7463 = null;
var G__7463__2 = (function (a,b){
var G__7446 = (((a == null))?x:a);
var G__7447 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7446,G__7447) : f.call(null,G__7446,G__7447));
});
var G__7463__3 = (function (a,b,c){
var G__7448 = (((a == null))?x:a);
var G__7449 = (((b == null))?y:b);
var G__7450 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7448,G__7449,G__7450) : f.call(null,G__7448,G__7449,G__7450));
});
var G__7463__4 = (function() { 
var G__7464__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__7464 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7465__i = 0, G__7465__a = new Array(arguments.length -  3);
while (G__7465__i < G__7465__a.length) {G__7465__a[G__7465__i] = arguments[G__7465__i + 3]; ++G__7465__i;}
  ds = new cljs.core.IndexedSeq(G__7465__a,0);
} 
return G__7464__delegate.call(this,a,b,c,ds);};
G__7464.cljs$lang$maxFixedArity = 3;
G__7464.cljs$lang$applyTo = (function (arglist__7466){
var a = cljs.core.first(arglist__7466);
arglist__7466 = cljs.core.next(arglist__7466);
var b = cljs.core.first(arglist__7466);
arglist__7466 = cljs.core.next(arglist__7466);
var c = cljs.core.first(arglist__7466);
var ds = cljs.core.rest(arglist__7466);
return G__7464__delegate(a,b,c,ds);
});
G__7464.cljs$core$IFn$_invoke$arity$variadic = G__7464__delegate;
return G__7464;
})()
;
G__7463 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7463__2.call(this,a,b);
case 3:
return G__7463__3.call(this,a,b,c);
default:
var G__7467 = null;
if (arguments.length > 3) {
var G__7468__i = 0, G__7468__a = new Array(arguments.length -  3);
while (G__7468__i < G__7468__a.length) {G__7468__a[G__7468__i] = arguments[G__7468__i + 3]; ++G__7468__i;}
G__7467 = new cljs.core.IndexedSeq(G__7468__a,0);
}
return G__7463__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7467);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7463.cljs$lang$maxFixedArity = 3;
G__7463.cljs$lang$applyTo = G__7463__4.cljs$lang$applyTo;
G__7463.cljs$core$IFn$_invoke$arity$2 = G__7463__2;
G__7463.cljs$core$IFn$_invoke$arity$3 = G__7463__3;
G__7463.cljs$core$IFn$_invoke$arity$variadic = G__7463__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7463;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__7499 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7499) : cljs.core.volatile_BANG_.call(null,G__7499));
})();
return ((function (i){
return (function() {
var G__7529 = null;
var G__7529__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7529__1 = (function (result){
var G__7500 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7500) : rf.call(null,G__7500));
});
var G__7529__2 = (function (result,input){
var G__7501 = result;
var G__7502 = (function (){var G__7503 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__7504 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7503,G__7504) : f.call(null,G__7503,G__7504));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7501,G__7502) : rf.call(null,G__7501,G__7502));
});
G__7529 = function(result,input){
switch(arguments.length){
case 0:
return G__7529__0.call(this);
case 1:
return G__7529__1.call(this,result);
case 2:
return G__7529__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7529.cljs$core$IFn$_invoke$arity$0 = G__7529__0;
G__7529.cljs$core$IFn$_invoke$arity$1 = G__7529__1;
G__7529.cljs$core$IFn$_invoke$arity$2 = G__7529__2;
return G__7529;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___7530 = size;
var i_7531 = (0);
while(true){
if((i_7531 < n__4659__auto___7530)){
cljs.core.chunk_append(b,(function (){var G__7525 = (idx + i_7531);
var G__7526 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7531);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7525,G__7526) : f.call(null,G__7525,G__7526));
})());

var G__7532 = (i_7531 + (1));
i_7531 = G__7532;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__7527 = idx;
var G__7528 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7527,G__7528) : f.call(null,G__7527,G__7528));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__7551 = null;
var G__7551__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7551__1 = (function (result){
var G__7545 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7545) : rf.call(null,G__7545));
});
var G__7551__2 = (function (result,input){
var v = (function (){var G__7546 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7546) : f.call(null,G__7546));
})();
if((v == null)){
return result;
} else {
var G__7547 = result;
var G__7548 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7547,G__7548) : rf.call(null,G__7547,G__7548));
}
});
G__7551 = function(result,input){
switch(arguments.length){
case 0:
return G__7551__0.call(this);
case 1:
return G__7551__1.call(this,result);
case 2:
return G__7551__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7551.cljs$core$IFn$_invoke$arity$0 = G__7551__0;
G__7551.cljs$core$IFn$_invoke$arity$1 = G__7551__1;
G__7551.cljs$core$IFn$_invoke$arity$2 = G__7551__2;
return G__7551;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___7552 = size;
var i_7553 = (0);
while(true){
if((i_7553 < n__4659__auto___7552)){
var x_7554 = (function (){var G__7549 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7553);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7549) : f.call(null,G__7549));
})();
if((x_7554 == null)){
} else {
cljs.core.chunk_append(b,x_7554);
}

var G__7555 = (i_7553 + (1));
i_7553 = G__7555;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7550 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7550) : f.call(null,G__7550));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__7556 = this$__$1;
return goog.getUid(G__7556);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__7557 = cljs.core.seq(self__.watches);
var chunk__7558 = null;
var count__7559 = (0);
var i__7560 = (0);
while(true){
if((i__7560 < count__7559)){
var vec__7561 = chunk__7558.cljs$core$IIndexed$_nth$arity$2(null,i__7560);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7561,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7561,(1),null);
var G__7562_7571 = key;
var G__7563_7572 = this$__$1;
var G__7564_7573 = oldval;
var G__7565_7574 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7562_7571,G__7563_7572,G__7564_7573,G__7565_7574) : f.call(null,G__7562_7571,G__7563_7572,G__7564_7573,G__7565_7574));

var G__7575 = seq__7557;
var G__7576 = chunk__7558;
var G__7577 = count__7559;
var G__7578 = (i__7560 + (1));
seq__7557 = G__7575;
chunk__7558 = G__7576;
count__7559 = G__7577;
i__7560 = G__7578;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__7557);
if(temp__4126__auto__){
var seq__7557__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__7557__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__7557__$1);
var G__7579 = cljs.core.chunk_rest(seq__7557__$1);
var G__7580 = c__4559__auto__;
var G__7581 = cljs.core.count(c__4559__auto__);
var G__7582 = (0);
seq__7557 = G__7579;
chunk__7558 = G__7580;
count__7559 = G__7581;
i__7560 = G__7582;
continue;
} else {
var vec__7566 = cljs.core.first(seq__7557__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7566,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7566,(1),null);
var G__7567_7583 = key;
var G__7568_7584 = this$__$1;
var G__7569_7585 = oldval;
var G__7570_7586 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7567_7583,G__7568_7584,G__7569_7585,G__7570_7586) : f.call(null,G__7567_7583,G__7568_7584,G__7569_7585,G__7570_7586));

var G__7587 = cljs.core.next(seq__7557__$1);
var G__7588 = null;
var G__7589 = (0);
var G__7590 = (0);
seq__7557 = G__7587;
chunk__7558 = G__7588;
count__7559 = G__7589;
i__7560 = G__7590;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__7594__delegate = function (x,p__7591){
var map__7593 = p__7591;
var map__7593__$1 = ((cljs.core.seq_QMARK_(map__7593))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7593):map__7593);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7593__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7593__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__7594 = function (x,var_args){
var p__7591 = null;
if (arguments.length > 1) {
var G__7595__i = 0, G__7595__a = new Array(arguments.length -  1);
while (G__7595__i < G__7595__a.length) {G__7595__a[G__7595__i] = arguments[G__7595__i + 1]; ++G__7595__i;}
  p__7591 = new cljs.core.IndexedSeq(G__7595__a,0);
} 
return G__7594__delegate.call(this,x,p__7591);};
G__7594.cljs$lang$maxFixedArity = 1;
G__7594.cljs$lang$applyTo = (function (arglist__7596){
var x = cljs.core.first(arglist__7596);
var p__7591 = cljs.core.rest(arglist__7596);
return G__7594__delegate(x,p__7591);
});
G__7594.cljs$core$IFn$_invoke$arity$variadic = G__7594__delegate;
return G__7594;
})()
;
atom = function(x,var_args){
var p__7591 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__7597 = null;
if (arguments.length > 1) {
var G__7598__i = 0, G__7598__a = new Array(arguments.length -  1);
while (G__7598__i < G__7598__a.length) {G__7598__a[G__7598__i] = arguments[G__7598__i + 1]; ++G__7598__i;}
G__7597 = new cljs.core.IndexedSeq(G__7598__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7597);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__7601 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7601) : validate.call(null,G__7601));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__7602 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7602) : cljs.core.pr_str.call(null,G__7602));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7609 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7609) : f.call(null,G__7609));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7610 = a.state;
var G__7611 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7610,G__7611) : f.call(null,G__7610,G__7611));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7612 = a.state;
var G__7613 = x;
var G__7614 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7612,G__7613,G__7614) : f.call(null,G__7612,G__7613,G__7614));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__7615__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__7615 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__7616__i = 0, G__7616__a = new Array(arguments.length -  4);
while (G__7616__i < G__7616__a.length) {G__7616__a[G__7616__i] = arguments[G__7616__i + 4]; ++G__7616__i;}
  more = new cljs.core.IndexedSeq(G__7616__a,0);
} 
return G__7615__delegate.call(this,a,f,x,y,more);};
G__7615.cljs$lang$maxFixedArity = 4;
G__7615.cljs$lang$applyTo = (function (arglist__7617){
var a = cljs.core.first(arglist__7617);
arglist__7617 = cljs.core.next(arglist__7617);
var f = cljs.core.first(arglist__7617);
arglist__7617 = cljs.core.next(arglist__7617);
var x = cljs.core.first(arglist__7617);
arglist__7617 = cljs.core.next(arglist__7617);
var y = cljs.core.first(arglist__7617);
var more = cljs.core.rest(arglist__7617);
return G__7615__delegate(a,f,x,y,more);
});
G__7615.cljs$core$IFn$_invoke$arity$variadic = G__7615__delegate;
return G__7615;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__7618 = null;
if (arguments.length > 4) {
var G__7619__i = 0, G__7619__a = new Array(arguments.length -  4);
while (G__7619__i < G__7619__a.length) {G__7619__a[G__7619__i] = arguments[G__7619__i + 4]; ++G__7619__i;}
G__7618 = new cljs.core.IndexedSeq(G__7619__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__7618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__7686 = null;
var G__7686__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7686__1 = (function (result){
var G__7653 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7653) : rf.call(null,G__7653));
});
var G__7686__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__7654 = i;
var G__7655 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7654,G__7655) : f.call(null,G__7654,G__7655));
})();
if((v == null)){
return result;
} else {
var G__7656 = result;
var G__7657 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7656,G__7657) : rf.call(null,G__7656,G__7657));
}
});
G__7686 = function(result,input){
switch(arguments.length){
case 0:
return G__7686__0.call(this);
case 1:
return G__7686__1.call(this,result);
case 2:
return G__7686__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7686.cljs$core$IFn$_invoke$arity$0 = G__7686__0;
G__7686.cljs$core$IFn$_invoke$arity$1 = G__7686__1;
G__7686.cljs$core$IFn$_invoke$arity$2 = G__7686__2;
return G__7686;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___7687 = size;
var i_7688 = (0);
while(true){
if((i_7688 < n__4659__auto___7687)){
var x_7689 = (function (){var G__7682 = (idx + i_7688);
var G__7683 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7688);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7682,G__7683) : f.call(null,G__7682,G__7683));
})();
if((x_7689 == null)){
} else {
cljs.core.chunk_append(b,x_7689);
}

var G__7690 = (i_7688 + (1));
i_7688 = G__7690;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7684 = idx;
var G__7685 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7684,G__7685) : f.call(null,G__7684,G__7685));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__7904 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7904) : p.call(null,G__7904));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__7906 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7906) : p.call(null,G__7906));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__7907 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7907) : p.call(null,G__7907));
} else {
return and__3760__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__7909 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7909) : p.call(null,G__7909));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__7911 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7911) : p.call(null,G__7911));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__7912 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7912) : p.call(null,G__7912));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__8081__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__8081 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8082__i = 0, G__8082__a = new Array(arguments.length -  3);
while (G__8082__i < G__8082__a.length) {G__8082__a[G__8082__i] = arguments[G__8082__i + 3]; ++G__8082__i;}
  args = new cljs.core.IndexedSeq(G__8082__a,0);
} 
return G__8081__delegate.call(this,x,y,z,args);};
G__8081.cljs$lang$maxFixedArity = 3;
G__8081.cljs$lang$applyTo = (function (arglist__8083){
var x = cljs.core.first(arglist__8083);
arglist__8083 = cljs.core.next(arglist__8083);
var y = cljs.core.first(arglist__8083);
arglist__8083 = cljs.core.next(arglist__8083);
var z = cljs.core.first(arglist__8083);
var args = cljs.core.rest(arglist__8083);
return G__8081__delegate(x,y,z,args);
});
G__8081.cljs$core$IFn$_invoke$arity$variadic = G__8081__delegate;
return G__8081;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__8084 = null;
if (arguments.length > 3) {
var G__8085__i = 0, G__8085__a = new Array(arguments.length -  3);
while (G__8085__i < G__8085__a.length) {G__8085__a[G__8085__i] = arguments[G__8085__i + 3]; ++G__8085__i;}
G__8084 = new cljs.core.IndexedSeq(G__8085__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8084);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__7944 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7944) : p1.call(null,G__7944));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__7945 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7945) : p2.call(null,G__7945));
} else {
return and__3760__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__7947 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7947) : p1.call(null,G__7947));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__7949 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7949) : p1.call(null,G__7949));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__7951 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7951) : p2.call(null,G__7951));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var G__7952 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7952) : p2.call(null,G__7952));
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__7954 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7954) : p1.call(null,G__7954));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__7956 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7956) : p1.call(null,G__7956));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__7958 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7958) : p1.call(null,G__7958));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var and__3760__auto____$3 = (function (){var G__7960 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7960) : p2.call(null,G__7960));
})();
if(cljs.core.truth_(and__3760__auto____$3)){
var and__3760__auto____$4 = (function (){var G__7962 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7962) : p2.call(null,G__7962));
})();
if(cljs.core.truth_(and__3760__auto____$4)){
var G__7963 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7963) : p2.call(null,G__7963));
} else {
return and__3760__auto____$4;
}
} else {
return and__3760__auto____$3;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__8086__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7691_SHARP_){
var and__3760__auto__ = (function (){var G__7968 = p1__7691_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7968) : p1.call(null,G__7968));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__7969 = p1__7691_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7969) : p2.call(null,G__7969));
} else {
return and__3760__auto__;
}
}),args)));
};
var G__8086 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8087__i = 0, G__8087__a = new Array(arguments.length -  3);
while (G__8087__i < G__8087__a.length) {G__8087__a[G__8087__i] = arguments[G__8087__i + 3]; ++G__8087__i;}
  args = new cljs.core.IndexedSeq(G__8087__a,0);
} 
return G__8086__delegate.call(this,x,y,z,args);};
G__8086.cljs$lang$maxFixedArity = 3;
G__8086.cljs$lang$applyTo = (function (arglist__8088){
var x = cljs.core.first(arglist__8088);
arglist__8088 = cljs.core.next(arglist__8088);
var y = cljs.core.first(arglist__8088);
arglist__8088 = cljs.core.next(arglist__8088);
var z = cljs.core.first(arglist__8088);
var args = cljs.core.rest(arglist__8088);
return G__8086__delegate(x,y,z,args);
});
G__8086.cljs$core$IFn$_invoke$arity$variadic = G__8086__delegate;
return G__8086;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__8089 = null;
if (arguments.length > 3) {
var G__8090__i = 0, G__8090__a = new Array(arguments.length -  3);
while (G__8090__i < G__8090__a.length) {G__8090__a[G__8090__i] = arguments[G__8090__i + 3]; ++G__8090__i;}
G__8089 = new cljs.core.IndexedSeq(G__8090__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8089);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__8015 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8015) : p1.call(null,G__8015));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__8017 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8017) : p2.call(null,G__8017));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__8018 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8018) : p3.call(null,G__8018));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__8020 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8020) : p1.call(null,G__8020));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__8022 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8022) : p2.call(null,G__8022));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__8024 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8024) : p3.call(null,G__8024));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var and__3760__auto____$3 = (function (){var G__8026 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8026) : p1.call(null,G__8026));
})();
if(cljs.core.truth_(and__3760__auto____$3)){
var and__3760__auto____$4 = (function (){var G__8028 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8028) : p2.call(null,G__8028));
})();
if(cljs.core.truth_(and__3760__auto____$4)){
var G__8029 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8029) : p3.call(null,G__8029));
} else {
return and__3760__auto____$4;
}
} else {
return and__3760__auto____$3;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__8031 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8031) : p1.call(null,G__8031));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__8033 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8033) : p2.call(null,G__8033));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__8035 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8035) : p3.call(null,G__8035));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var and__3760__auto____$3 = (function (){var G__8037 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8037) : p1.call(null,G__8037));
})();
if(cljs.core.truth_(and__3760__auto____$3)){
var and__3760__auto____$4 = (function (){var G__8039 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8039) : p2.call(null,G__8039));
})();
if(cljs.core.truth_(and__3760__auto____$4)){
var and__3760__auto____$5 = (function (){var G__8041 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8041) : p3.call(null,G__8041));
})();
if(cljs.core.truth_(and__3760__auto____$5)){
var and__3760__auto____$6 = (function (){var G__8043 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8043) : p1.call(null,G__8043));
})();
if(cljs.core.truth_(and__3760__auto____$6)){
var and__3760__auto____$7 = (function (){var G__8045 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8045) : p2.call(null,G__8045));
})();
if(cljs.core.truth_(and__3760__auto____$7)){
var G__8046 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8046) : p3.call(null,G__8046));
} else {
return and__3760__auto____$7;
}
} else {
return and__3760__auto____$6;
}
} else {
return and__3760__auto____$5;
}
} else {
return and__3760__auto____$4;
}
} else {
return and__3760__auto____$3;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__8091__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7692_SHARP_){
var and__3760__auto__ = (function (){var G__8053 = p1__7692_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8053) : p1.call(null,G__8053));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__8055 = p1__7692_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8055) : p2.call(null,G__8055));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__8056 = p1__7692_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8056) : p3.call(null,G__8056));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
}),args)));
};
var G__8091 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8092__i = 0, G__8092__a = new Array(arguments.length -  3);
while (G__8092__i < G__8092__a.length) {G__8092__a[G__8092__i] = arguments[G__8092__i + 3]; ++G__8092__i;}
  args = new cljs.core.IndexedSeq(G__8092__a,0);
} 
return G__8091__delegate.call(this,x,y,z,args);};
G__8091.cljs$lang$maxFixedArity = 3;
G__8091.cljs$lang$applyTo = (function (arglist__8093){
var x = cljs.core.first(arglist__8093);
arglist__8093 = cljs.core.next(arglist__8093);
var y = cljs.core.first(arglist__8093);
arglist__8093 = cljs.core.next(arglist__8093);
var z = cljs.core.first(arglist__8093);
var args = cljs.core.rest(arglist__8093);
return G__8091__delegate(x,y,z,args);
});
G__8091.cljs$core$IFn$_invoke$arity$variadic = G__8091__delegate;
return G__8091;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__8094 = null;
if (arguments.length > 3) {
var G__8095__i = 0, G__8095__a = new Array(arguments.length -  3);
while (G__8095__i < G__8095__a.length) {G__8095__a[G__8095__i] = arguments[G__8095__i + 3]; ++G__8095__i;}
G__8094 = new cljs.core.IndexedSeq(G__8095__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__8096__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7693_SHARP_){
var G__8072 = x;
return (p1__7693_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7693_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8072) : p1__7693_SHARP_.call(null,G__8072));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7694_SHARP_){
var and__3760__auto__ = (function (){var G__8074 = x;
return (p1__7694_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7694_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8074) : p1__7694_SHARP_.call(null,G__8074));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__8075 = y;
return (p1__7694_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7694_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8075) : p1__7694_SHARP_.call(null,G__8075));
} else {
return and__3760__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7695_SHARP_){
var and__3760__auto__ = (function (){var G__8077 = x;
return (p1__7695_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7695_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8077) : p1__7695_SHARP_.call(null,G__8077));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__8079 = y;
return (p1__7695_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7695_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8079) : p1__7695_SHARP_.call(null,G__8079));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__8080 = z;
return (p1__7695_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7695_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8080) : p1__7695_SHARP_.call(null,G__8080));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__8097__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7696_SHARP_){
return cljs.core.every_QMARK_(p1__7696_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__8097 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8098__i = 0, G__8098__a = new Array(arguments.length -  3);
while (G__8098__i < G__8098__a.length) {G__8098__a[G__8098__i] = arguments[G__8098__i + 3]; ++G__8098__i;}
  args = new cljs.core.IndexedSeq(G__8098__a,0);
} 
return G__8097__delegate.call(this,x,y,z,args);};
G__8097.cljs$lang$maxFixedArity = 3;
G__8097.cljs$lang$applyTo = (function (arglist__8099){
var x = cljs.core.first(arglist__8099);
arglist__8099 = cljs.core.next(arglist__8099);
var y = cljs.core.first(arglist__8099);
arglist__8099 = cljs.core.next(arglist__8099);
var z = cljs.core.first(arglist__8099);
var args = cljs.core.rest(arglist__8099);
return G__8097__delegate(x,y,z,args);
});
G__8097.cljs$core$IFn$_invoke$arity$variadic = G__8097__delegate;
return G__8097;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__8100 = null;
if (arguments.length > 3) {
var G__8101__i = 0, G__8101__a = new Array(arguments.length -  3);
while (G__8101__i < G__8101__a.length) {G__8101__a[G__8101__i] = arguments[G__8101__i + 3]; ++G__8101__i;}
G__8100 = new cljs.core.IndexedSeq(G__8101__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__8096 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8102__i = 0, G__8102__a = new Array(arguments.length -  3);
while (G__8102__i < G__8102__a.length) {G__8102__a[G__8102__i] = arguments[G__8102__i + 3]; ++G__8102__i;}
  ps = new cljs.core.IndexedSeq(G__8102__a,0);
} 
return G__8096__delegate.call(this,p1,p2,p3,ps);};
G__8096.cljs$lang$maxFixedArity = 3;
G__8096.cljs$lang$applyTo = (function (arglist__8103){
var p1 = cljs.core.first(arglist__8103);
arglist__8103 = cljs.core.next(arglist__8103);
var p2 = cljs.core.first(arglist__8103);
arglist__8103 = cljs.core.next(arglist__8103);
var p3 = cljs.core.first(arglist__8103);
var ps = cljs.core.rest(arglist__8103);
return G__8096__delegate(p1,p2,p3,ps);
});
G__8096.cljs$core$IFn$_invoke$arity$variadic = G__8096__delegate;
return G__8096;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__8104 = null;
if (arguments.length > 3) {
var G__8105__i = 0, G__8105__a = new Array(arguments.length -  3);
while (G__8105__i < G__8105__a.length) {G__8105__a[G__8105__i] = arguments[G__8105__i + 3]; ++G__8105__i;}
G__8104 = new cljs.core.IndexedSeq(G__8105__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__8311 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8311) : p.call(null,G__8311));
});
var sp1__2 = (function (x,y){
var or__3772__auto__ = (function (){var G__8313 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8313) : p.call(null,G__8313));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__8314 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8314) : p.call(null,G__8314));
}
});
var sp1__3 = (function (x,y,z){
var or__3772__auto__ = (function (){var G__8316 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8316) : p.call(null,G__8316));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__8318 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8318) : p.call(null,G__8318));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__8319 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8319) : p.call(null,G__8319));
}
}
});
var sp1__4 = (function() { 
var G__8480__delegate = function (x,y,z,args){
var or__3772__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__8480 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8481__i = 0, G__8481__a = new Array(arguments.length -  3);
while (G__8481__i < G__8481__a.length) {G__8481__a[G__8481__i] = arguments[G__8481__i + 3]; ++G__8481__i;}
  args = new cljs.core.IndexedSeq(G__8481__a,0);
} 
return G__8480__delegate.call(this,x,y,z,args);};
G__8480.cljs$lang$maxFixedArity = 3;
G__8480.cljs$lang$applyTo = (function (arglist__8482){
var x = cljs.core.first(arglist__8482);
arglist__8482 = cljs.core.next(arglist__8482);
var y = cljs.core.first(arglist__8482);
arglist__8482 = cljs.core.next(arglist__8482);
var z = cljs.core.first(arglist__8482);
var args = cljs.core.rest(arglist__8482);
return G__8480__delegate(x,y,z,args);
});
G__8480.cljs$core$IFn$_invoke$arity$variadic = G__8480__delegate;
return G__8480;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__8483 = null;
if (arguments.length > 3) {
var G__8484__i = 0, G__8484__a = new Array(arguments.length -  3);
while (G__8484__i < G__8484__a.length) {G__8484__a[G__8484__i] = arguments[G__8484__i + 3]; ++G__8484__i;}
G__8483 = new cljs.core.IndexedSeq(G__8484__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8483);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3772__auto__ = (function (){var G__8351 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8351) : p1.call(null,G__8351));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__8352 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8352) : p2.call(null,G__8352));
}
});
var sp2__2 = (function (x,y){
var or__3772__auto__ = (function (){var G__8354 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8354) : p1.call(null,G__8354));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__8356 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8356) : p1.call(null,G__8356));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__8358 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8358) : p2.call(null,G__8358));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var G__8359 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8359) : p2.call(null,G__8359));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3772__auto__ = (function (){var G__8361 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8361) : p1.call(null,G__8361));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__8363 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8363) : p1.call(null,G__8363));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__8365 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8365) : p1.call(null,G__8365));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var or__3772__auto____$3 = (function (){var G__8367 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8367) : p2.call(null,G__8367));
})();
if(cljs.core.truth_(or__3772__auto____$3)){
return or__3772__auto____$3;
} else {
var or__3772__auto____$4 = (function (){var G__8369 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8369) : p2.call(null,G__8369));
})();
if(cljs.core.truth_(or__3772__auto____$4)){
return or__3772__auto____$4;
} else {
var G__8370 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8370) : p2.call(null,G__8370));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__8485__delegate = function (x,y,z,args){
var or__3772__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(((function (or__3772__auto__){
return (function (p1__8106_SHARP_){
var or__3772__auto____$1 = (function (){var G__8372 = p1__8106_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8372) : p1.call(null,G__8372));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__8373 = p1__8106_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8373) : p2.call(null,G__8373));
}
});})(or__3772__auto__))
,args);
}
};
var G__8485 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8486__i = 0, G__8486__a = new Array(arguments.length -  3);
while (G__8486__i < G__8486__a.length) {G__8486__a[G__8486__i] = arguments[G__8486__i + 3]; ++G__8486__i;}
  args = new cljs.core.IndexedSeq(G__8486__a,0);
} 
return G__8485__delegate.call(this,x,y,z,args);};
G__8485.cljs$lang$maxFixedArity = 3;
G__8485.cljs$lang$applyTo = (function (arglist__8487){
var x = cljs.core.first(arglist__8487);
arglist__8487 = cljs.core.next(arglist__8487);
var y = cljs.core.first(arglist__8487);
arglist__8487 = cljs.core.next(arglist__8487);
var z = cljs.core.first(arglist__8487);
var args = cljs.core.rest(arglist__8487);
return G__8485__delegate(x,y,z,args);
});
G__8485.cljs$core$IFn$_invoke$arity$variadic = G__8485__delegate;
return G__8485;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__8488 = null;
if (arguments.length > 3) {
var G__8489__i = 0, G__8489__a = new Array(arguments.length -  3);
while (G__8489__i < G__8489__a.length) {G__8489__a[G__8489__i] = arguments[G__8489__i + 3]; ++G__8489__i;}
G__8488 = new cljs.core.IndexedSeq(G__8489__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3772__auto__ = (function (){var G__8419 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8419) : p1.call(null,G__8419));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__8421 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8421) : p2.call(null,G__8421));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__8422 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8422) : p3.call(null,G__8422));
}
}
});
var sp3__2 = (function (x,y){
var or__3772__auto__ = (function (){var G__8424 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8424) : p1.call(null,G__8424));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__8426 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8426) : p2.call(null,G__8426));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__8428 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8428) : p3.call(null,G__8428));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var or__3772__auto____$3 = (function (){var G__8430 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8430) : p1.call(null,G__8430));
})();
if(cljs.core.truth_(or__3772__auto____$3)){
return or__3772__auto____$3;
} else {
var or__3772__auto____$4 = (function (){var G__8432 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8432) : p2.call(null,G__8432));
})();
if(cljs.core.truth_(or__3772__auto____$4)){
return or__3772__auto____$4;
} else {
var G__8433 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8433) : p3.call(null,G__8433));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3772__auto__ = (function (){var G__8435 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8435) : p1.call(null,G__8435));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__8437 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8437) : p2.call(null,G__8437));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__8439 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8439) : p3.call(null,G__8439));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var or__3772__auto____$3 = (function (){var G__8441 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8441) : p1.call(null,G__8441));
})();
if(cljs.core.truth_(or__3772__auto____$3)){
return or__3772__auto____$3;
} else {
var or__3772__auto____$4 = (function (){var G__8443 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8443) : p2.call(null,G__8443));
})();
if(cljs.core.truth_(or__3772__auto____$4)){
return or__3772__auto____$4;
} else {
var or__3772__auto____$5 = (function (){var G__8445 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8445) : p3.call(null,G__8445));
})();
if(cljs.core.truth_(or__3772__auto____$5)){
return or__3772__auto____$5;
} else {
var or__3772__auto____$6 = (function (){var G__8447 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8447) : p1.call(null,G__8447));
})();
if(cljs.core.truth_(or__3772__auto____$6)){
return or__3772__auto____$6;
} else {
var or__3772__auto____$7 = (function (){var G__8449 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8449) : p2.call(null,G__8449));
})();
if(cljs.core.truth_(or__3772__auto____$7)){
return or__3772__auto____$7;
} else {
var G__8450 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8450) : p3.call(null,G__8450));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__8490__delegate = function (x,y,z,args){
var or__3772__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(((function (or__3772__auto__){
return (function (p1__8107_SHARP_){
var or__3772__auto____$1 = (function (){var G__8452 = p1__8107_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8452) : p1.call(null,G__8452));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__8454 = p1__8107_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8454) : p2.call(null,G__8454));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var G__8455 = p1__8107_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8455) : p3.call(null,G__8455));
}
}
});})(or__3772__auto__))
,args);
}
};
var G__8490 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8491__i = 0, G__8491__a = new Array(arguments.length -  3);
while (G__8491__i < G__8491__a.length) {G__8491__a[G__8491__i] = arguments[G__8491__i + 3]; ++G__8491__i;}
  args = new cljs.core.IndexedSeq(G__8491__a,0);
} 
return G__8490__delegate.call(this,x,y,z,args);};
G__8490.cljs$lang$maxFixedArity = 3;
G__8490.cljs$lang$applyTo = (function (arglist__8492){
var x = cljs.core.first(arglist__8492);
arglist__8492 = cljs.core.next(arglist__8492);
var y = cljs.core.first(arglist__8492);
arglist__8492 = cljs.core.next(arglist__8492);
var z = cljs.core.first(arglist__8492);
var args = cljs.core.rest(arglist__8492);
return G__8490__delegate(x,y,z,args);
});
G__8490.cljs$core$IFn$_invoke$arity$variadic = G__8490__delegate;
return G__8490;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__8493 = null;
if (arguments.length > 3) {
var G__8494__i = 0, G__8494__a = new Array(arguments.length -  3);
while (G__8494__i < G__8494__a.length) {G__8494__a[G__8494__i] = arguments[G__8494__i + 3]; ++G__8494__i;}
G__8493 = new cljs.core.IndexedSeq(G__8494__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__8495__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__8108_SHARP_){
var G__8471 = x;
return (p1__8108_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8108_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8471) : p1__8108_SHARP_.call(null,G__8471));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__8109_SHARP_){
var or__3772__auto__ = (function (){var G__8473 = x;
return (p1__8109_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8109_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8473) : p1__8109_SHARP_.call(null,G__8473));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__8474 = y;
return (p1__8109_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8109_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8474) : p1__8109_SHARP_.call(null,G__8474));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__8110_SHARP_){
var or__3772__auto__ = (function (){var G__8476 = x;
return (p1__8110_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8110_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8476) : p1__8110_SHARP_.call(null,G__8476));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__8478 = y;
return (p1__8110_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8110_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8478) : p1__8110_SHARP_.call(null,G__8478));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__8479 = z;
return (p1__8110_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8110_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8479) : p1__8110_SHARP_.call(null,G__8479));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__8496__delegate = function (x,y,z,args){
var or__3772__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(((function (or__3772__auto__,ps__$1){
return (function (p1__8111_SHARP_){
return cljs.core.some(p1__8111_SHARP_,args);
});})(or__3772__auto__,ps__$1))
,ps__$1);
}
};
var G__8496 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8497__i = 0, G__8497__a = new Array(arguments.length -  3);
while (G__8497__i < G__8497__a.length) {G__8497__a[G__8497__i] = arguments[G__8497__i + 3]; ++G__8497__i;}
  args = new cljs.core.IndexedSeq(G__8497__a,0);
} 
return G__8496__delegate.call(this,x,y,z,args);};
G__8496.cljs$lang$maxFixedArity = 3;
G__8496.cljs$lang$applyTo = (function (arglist__8498){
var x = cljs.core.first(arglist__8498);
arglist__8498 = cljs.core.next(arglist__8498);
var y = cljs.core.first(arglist__8498);
arglist__8498 = cljs.core.next(arglist__8498);
var z = cljs.core.first(arglist__8498);
var args = cljs.core.rest(arglist__8498);
return G__8496__delegate(x,y,z,args);
});
G__8496.cljs$core$IFn$_invoke$arity$variadic = G__8496__delegate;
return G__8496;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__8499 = null;
if (arguments.length > 3) {
var G__8500__i = 0, G__8500__a = new Array(arguments.length -  3);
while (G__8500__i < G__8500__a.length) {G__8500__a[G__8500__i] = arguments[G__8500__i + 3]; ++G__8500__i;}
G__8499 = new cljs.core.IndexedSeq(G__8500__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__8495 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8501__i = 0, G__8501__a = new Array(arguments.length -  3);
while (G__8501__i < G__8501__a.length) {G__8501__a[G__8501__i] = arguments[G__8501__i + 3]; ++G__8501__i;}
  ps = new cljs.core.IndexedSeq(G__8501__a,0);
} 
return G__8495__delegate.call(this,p1,p2,p3,ps);};
G__8495.cljs$lang$maxFixedArity = 3;
G__8495.cljs$lang$applyTo = (function (arglist__8502){
var p1 = cljs.core.first(arglist__8502);
arglist__8502 = cljs.core.next(arglist__8502);
var p2 = cljs.core.first(arglist__8502);
arglist__8502 = cljs.core.next(arglist__8502);
var p3 = cljs.core.first(arglist__8502);
var ps = cljs.core.rest(arglist__8502);
return G__8495__delegate(p1,p2,p3,ps);
});
G__8495.cljs$core$IFn$_invoke$arity$variadic = G__8495__delegate;
return G__8495;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__8503 = null;
if (arguments.length > 3) {
var G__8504__i = 0, G__8504__a = new Array(arguments.length -  3);
while (G__8504__i < G__8504__a.length) {G__8504__a[G__8504__i] = arguments[G__8504__i + 3]; ++G__8504__i;}
G__8503 = new cljs.core.IndexedSeq(G__8504__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__8559 = null;
var G__8559__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8559__1 = (function (result){
var G__8545 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8545) : rf.call(null,G__8545));
});
var G__8559__2 = (function (result,input){
var G__8546 = result;
var G__8547 = (function (){var G__8548 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8548) : f.call(null,G__8548));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8546,G__8547) : rf.call(null,G__8546,G__8547));
});
var G__8559__3 = (function() { 
var G__8560__delegate = function (result,input,inputs){
var G__8549 = result;
var G__8550 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8549,G__8550) : rf.call(null,G__8549,G__8550));
};
var G__8560 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__8561__i = 0, G__8561__a = new Array(arguments.length -  2);
while (G__8561__i < G__8561__a.length) {G__8561__a[G__8561__i] = arguments[G__8561__i + 2]; ++G__8561__i;}
  inputs = new cljs.core.IndexedSeq(G__8561__a,0);
} 
return G__8560__delegate.call(this,result,input,inputs);};
G__8560.cljs$lang$maxFixedArity = 2;
G__8560.cljs$lang$applyTo = (function (arglist__8562){
var result = cljs.core.first(arglist__8562);
arglist__8562 = cljs.core.next(arglist__8562);
var input = cljs.core.first(arglist__8562);
var inputs = cljs.core.rest(arglist__8562);
return G__8560__delegate(result,input,inputs);
});
G__8560.cljs$core$IFn$_invoke$arity$variadic = G__8560__delegate;
return G__8560;
})()
;
G__8559 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__8559__0.call(this);
case 1:
return G__8559__1.call(this,result);
case 2:
return G__8559__2.call(this,result,input);
default:
var G__8563 = null;
if (arguments.length > 2) {
var G__8564__i = 0, G__8564__a = new Array(arguments.length -  2);
while (G__8564__i < G__8564__a.length) {G__8564__a[G__8564__i] = arguments[G__8564__i + 2]; ++G__8564__i;}
G__8563 = new cljs.core.IndexedSeq(G__8564__a,0);
}
return G__8559__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__8563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8559.cljs$lang$maxFixedArity = 2;
G__8559.cljs$lang$applyTo = G__8559__3.cljs$lang$applyTo;
G__8559.cljs$core$IFn$_invoke$arity$0 = G__8559__0;
G__8559.cljs$core$IFn$_invoke$arity$1 = G__8559__1;
G__8559.cljs$core$IFn$_invoke$arity$2 = G__8559__2;
G__8559.cljs$core$IFn$_invoke$arity$variadic = G__8559__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8559;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___8565 = size;
var i_8566 = (0);
while(true){
if((i_8566 < n__4659__auto___8565)){
cljs.core.chunk_append(b,(function (){var G__8551 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8566);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8551) : f.call(null,G__8551));
})());

var G__8567 = (i_8566 + (1));
i_8566 = G__8567;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8552 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8552) : f.call(null,G__8552));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__8553 = cljs.core.first(s1);
var G__8554 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8553,G__8554) : f.call(null,G__8553,G__8554));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__8555 = cljs.core.first(s1);
var G__8556 = cljs.core.first(s2);
var G__8557 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8555,G__8556,G__8557) : f.call(null,G__8555,G__8556,G__8557));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__8568__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__8505_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__8505_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__8568 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8569__i = 0, G__8569__a = new Array(arguments.length -  4);
while (G__8569__i < G__8569__a.length) {G__8569__a[G__8569__i] = arguments[G__8569__i + 4]; ++G__8569__i;}
  colls = new cljs.core.IndexedSeq(G__8569__a,0);
} 
return G__8568__delegate.call(this,f,c1,c2,c3,colls);};
G__8568.cljs$lang$maxFixedArity = 4;
G__8568.cljs$lang$applyTo = (function (arglist__8570){
var f = cljs.core.first(arglist__8570);
arglist__8570 = cljs.core.next(arglist__8570);
var c1 = cljs.core.first(arglist__8570);
arglist__8570 = cljs.core.next(arglist__8570);
var c2 = cljs.core.first(arglist__8570);
arglist__8570 = cljs.core.next(arglist__8570);
var c3 = cljs.core.first(arglist__8570);
var colls = cljs.core.rest(arglist__8570);
return G__8568__delegate(f,c1,c2,c3,colls);
});
G__8568.cljs$core$IFn$_invoke$arity$variadic = G__8568__delegate;
return G__8568;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__8571 = null;
if (arguments.length > 4) {
var G__8572__i = 0, G__8572__a = new Array(arguments.length -  4);
while (G__8572__i < G__8572__a.length) {G__8572__a[G__8572__i] = arguments[G__8572__i + 4]; ++G__8572__i;}
G__8571 = new cljs.core.IndexedSeq(G__8572__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8581 = null;
var G__8581__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8581__1 = (function (result){
var G__8578 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8578) : rf.call(null,G__8578));
});
var G__8581__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__8579 = result;
var G__8580 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8579,G__8580) : rf.call(null,G__8579,G__8580));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__8581 = function(result,input){
switch(arguments.length){
case 0:
return G__8581__0.call(this);
case 1:
return G__8581__1.call(this,result);
case 2:
return G__8581__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8581.cljs$core$IFn$_invoke$arity$0 = G__8581__0;
G__8581.cljs$core$IFn$_invoke$arity$1 = G__8581__1;
G__8581.cljs$core$IFn$_invoke$arity$2 = G__8581__2;
return G__8581;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8588 = null;
var G__8588__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8588__1 = (function (result){
var G__8585 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8585) : rf.call(null,G__8585));
});
var G__8588__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__8586 = result;
var G__8587 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8586,G__8587) : rf.call(null,G__8586,G__8587));
}
});
G__8588 = function(result,input){
switch(arguments.length){
case 0:
return G__8588__0.call(this);
case 1:
return G__8588__1.call(this,result);
case 2:
return G__8588__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8588.cljs$core$IFn$_invoke$arity$0 = G__8588__0;
G__8588.cljs$core$IFn$_invoke$arity$1 = G__8588__1;
G__8588.cljs$core$IFn$_invoke$arity$2 = G__8588__2;
return G__8588;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__8589 = (n__$1 - (1));
var G__8590 = cljs.core.rest(s);
n__$1 = G__8589;
coll__$1 = G__8590;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__8593 = cljs.core.next(s);
var G__8594 = cljs.core.next(lead);
s = G__8593;
lead = G__8594;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__8607 = null;
var G__8607__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8607__1 = (function (result){
var G__8601 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8601) : rf.call(null,G__8601));
});
var G__8607__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3760__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3760__auto__)){
var G__8602 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8602) : pred.call(null,G__8602));
} else {
return and__3760__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__8603 = result;
var G__8604 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8603,G__8604) : rf.call(null,G__8603,G__8604));
}
});
G__8607 = function(result,input){
switch(arguments.length){
case 0:
return G__8607__0.call(this);
case 1:
return G__8607__1.call(this,result);
case 2:
return G__8607__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8607.cljs$core$IFn$_invoke$arity$0 = G__8607__0;
G__8607.cljs$core$IFn$_invoke$arity$1 = G__8607__1;
G__8607.cljs$core$IFn$_invoke$arity$2 = G__8607__2;
return G__8607;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3760__auto__ = s;
if(and__3760__auto__){
var G__8606 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8606) : pred__$1.call(null,G__8606));
} else {
return and__3760__auto__;
}
})())){
var G__8608 = pred__$1;
var G__8609 = cljs.core.rest(s);
pred__$1 = G__8608;
coll__$1 = G__8609;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__8618 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8618) : f.call(null,G__8618));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__8621__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__8621 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8622__i = 0, G__8622__a = new Array(arguments.length -  2);
while (G__8622__i < G__8622__a.length) {G__8622__a[G__8622__i] = arguments[G__8622__i + 2]; ++G__8622__i;}
  colls = new cljs.core.IndexedSeq(G__8622__a,0);
} 
return G__8621__delegate.call(this,c1,c2,colls);};
G__8621.cljs$lang$maxFixedArity = 2;
G__8621.cljs$lang$applyTo = (function (arglist__8623){
var c1 = cljs.core.first(arglist__8623);
arglist__8623 = cljs.core.next(arglist__8623);
var c2 = cljs.core.first(arglist__8623);
var colls = cljs.core.rest(arglist__8623);
return G__8621__delegate(c1,c2,colls);
});
G__8621.cljs$core$IFn$_invoke$arity$variadic = G__8621__delegate;
return G__8621;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__8624 = null;
if (arguments.length > 2) {
var G__8625__i = 0, G__8625__a = new Array(arguments.length -  2);
while (G__8625__i < G__8625__a.length) {G__8625__a[G__8625__i] = arguments[G__8625__i + 2]; ++G__8625__i;}
G__8624 = new cljs.core.IndexedSeq(G__8625__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__8624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__8640 = null;
var G__8640__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8640__1 = (function (result){
var G__8633 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8633) : rf.call(null,G__8633));
});
var G__8640__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__8634 = result;
var G__8635 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8634,G__8635) : rf.call(null,G__8634,G__8635));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__8636 = sepr;
var G__8637 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8636,G__8637) : rf.call(null,G__8636,G__8637));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__8638 = result;
var G__8639 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8638,G__8639) : rf.call(null,G__8638,G__8639));
}
});
G__8640 = function(result,input){
switch(arguments.length){
case 0:
return G__8640__0.call(this);
case 1:
return G__8640__1.call(this,result);
case 2:
return G__8640__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8640.cljs$core$IFn$_invoke$arity$0 = G__8640__0;
G__8640.cljs$core$IFn$_invoke$arity$1 = G__8640__1;
G__8640.cljs$core$IFn$_invoke$arity$2 = G__8640__2;
return G__8640;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__8649__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__8649 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__8650__i = 0, G__8650__a = new Array(arguments.length -  1);
while (G__8650__i < G__8650__a.length) {G__8650__a[G__8650__i] = arguments[G__8650__i + 1]; ++G__8650__i;}
  colls = new cljs.core.IndexedSeq(G__8650__a,0);
} 
return G__8649__delegate.call(this,f,colls);};
G__8649.cljs$lang$maxFixedArity = 1;
G__8649.cljs$lang$applyTo = (function (arglist__8651){
var f = cljs.core.first(arglist__8651);
var colls = cljs.core.rest(arglist__8651);
return G__8649__delegate(f,colls);
});
G__8649.cljs$core$IFn$_invoke$arity$variadic = G__8649__delegate;
return G__8649;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__8652 = null;
if (arguments.length > 1) {
var G__8653__i = 0, G__8653__a = new Array(arguments.length -  1);
while (G__8653__i < G__8653__a.length) {G__8653__a[G__8653__i] = arguments[G__8653__i + 1]; ++G__8653__i;}
G__8652 = new cljs.core.IndexedSeq(G__8653__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__8652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__8672 = null;
var G__8672__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8672__1 = (function (result){
var G__8666 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8666) : rf.call(null,G__8666));
});
var G__8672__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__8667 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8667) : pred.call(null,G__8667));
})())){
var G__8668 = result;
var G__8669 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8668,G__8669) : rf.call(null,G__8668,G__8669));
} else {
return result;
}
});
G__8672 = function(result,input){
switch(arguments.length){
case 0:
return G__8672__0.call(this);
case 1:
return G__8672__1.call(this,result);
case 2:
return G__8672__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8672.cljs$core$IFn$_invoke$arity$0 = G__8672__0;
G__8672.cljs$core$IFn$_invoke$arity$1 = G__8672__1;
G__8672.cljs$core$IFn$_invoke$arity$2 = G__8672__2;
return G__8672;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___8673 = size;
var i_8674 = (0);
while(true){
if((i_8674 < n__4659__auto___8673)){
if(cljs.core.truth_((function (){var G__8670 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8674);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8670) : pred.call(null,G__8670));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8674));
} else {
}

var G__8675 = (i_8674 + (1));
i_8674 = G__8675;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__8671 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8671) : pred.call(null,G__8671));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__8682 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8682) : branch_QMARK_.call(null,G__8682));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__8683 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__8683) : children.call(null,G__8683));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__8684_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__8684_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__8687 = to;
if(G__8687){
var bit__4446__auto__ = (G__8687.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4446__auto__) || (G__8687.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__8688 = to;
if(G__8688){
var bit__4446__auto__ = (G__8688.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4446__auto__) || (G__8688.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__8690 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8690) : f.call(null,G__8690));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__8691__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__8691 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8692__i = 0, G__8692__a = new Array(arguments.length -  4);
while (G__8692__i < G__8692__a.length) {G__8692__a[G__8692__i] = arguments[G__8692__i + 4]; ++G__8692__i;}
  colls = new cljs.core.IndexedSeq(G__8692__a,0);
} 
return G__8691__delegate.call(this,f,c1,c2,c3,colls);};
G__8691.cljs$lang$maxFixedArity = 4;
G__8691.cljs$lang$applyTo = (function (arglist__8693){
var f = cljs.core.first(arglist__8693);
arglist__8693 = cljs.core.next(arglist__8693);
var c1 = cljs.core.first(arglist__8693);
arglist__8693 = cljs.core.next(arglist__8693);
var c2 = cljs.core.first(arglist__8693);
arglist__8693 = cljs.core.next(arglist__8693);
var c3 = cljs.core.first(arglist__8693);
var colls = cljs.core.rest(arglist__8693);
return G__8691__delegate(f,c1,c2,c3,colls);
});
G__8691.cljs$core$IFn$_invoke$arity$variadic = G__8691__delegate;
return G__8691;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__8694 = null;
if (arguments.length > 4) {
var G__8695__i = 0, G__8695__a = new Array(arguments.length -  4);
while (G__8695__i < G__8695__a.length) {G__8695__a[G__8695__i] = arguments[G__8695__i + 4]; ++G__8695__i;}
G__8694 = new cljs.core.IndexedSeq(G__8695__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__8697 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8697) : pred.call(null,G__8697));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__8712 = m__$1;
if(G__8712){
var bit__4453__auto__ = (G__8712.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4453__auto__) || (G__8712.cljs$core$ILookup$)){
return true;
} else {
if((!G__8712.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__8712);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__8712);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__8713 = sentinel;
var G__8714 = m__$2;
var G__8715 = cljs.core.next(ks__$1);
sentinel = G__8713;
m__$1 = G__8714;
ks__$1 = G__8715;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__8716,v){
var vec__8721 = p__8716;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8721,(0),null);
var ks = cljs.core.nthnext(vec__8721,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__8722,f){
var vec__8760 = p__8722;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8760,(0),null);
var ks = cljs.core.nthnext(vec__8760,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8761 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8761) : f.call(null,G__8761));
})());
}
});
var update_in__4 = (function (m,p__8723,f,a){
var vec__8762 = p__8723;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8762,(0),null);
var ks = cljs.core.nthnext(vec__8762,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8763 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8764 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8763,G__8764) : f.call(null,G__8763,G__8764));
})());
}
});
var update_in__5 = (function (m,p__8724,f,a,b){
var vec__8765 = p__8724;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8765,(0),null);
var ks = cljs.core.nthnext(vec__8765,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8766 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8767 = a;
var G__8768 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8766,G__8767,G__8768) : f.call(null,G__8766,G__8767,G__8768));
})());
}
});
var update_in__6 = (function (m,p__8725,f,a,b,c){
var vec__8769 = p__8725;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8769,(0),null);
var ks = cljs.core.nthnext(vec__8769,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8770 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8771 = a;
var G__8772 = b;
var G__8773 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8770,G__8771,G__8772,G__8773) : f.call(null,G__8770,G__8771,G__8772,G__8773));
})());
}
});
var update_in__7 = (function() { 
var G__8775__delegate = function (m,p__8726,f,a,b,c,args){
var vec__8774 = p__8726;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8774,(0),null);
var ks = cljs.core.nthnext(vec__8774,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__8775 = function (m,p__8726,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__8776__i = 0, G__8776__a = new Array(arguments.length -  6);
while (G__8776__i < G__8776__a.length) {G__8776__a[G__8776__i] = arguments[G__8776__i + 6]; ++G__8776__i;}
  args = new cljs.core.IndexedSeq(G__8776__a,0);
} 
return G__8775__delegate.call(this,m,p__8726,f,a,b,c,args);};
G__8775.cljs$lang$maxFixedArity = 6;
G__8775.cljs$lang$applyTo = (function (arglist__8777){
var m = cljs.core.first(arglist__8777);
arglist__8777 = cljs.core.next(arglist__8777);
var p__8726 = cljs.core.first(arglist__8777);
arglist__8777 = cljs.core.next(arglist__8777);
var f = cljs.core.first(arglist__8777);
arglist__8777 = cljs.core.next(arglist__8777);
var a = cljs.core.first(arglist__8777);
arglist__8777 = cljs.core.next(arglist__8777);
var b = cljs.core.first(arglist__8777);
arglist__8777 = cljs.core.next(arglist__8777);
var c = cljs.core.first(arglist__8777);
var args = cljs.core.rest(arglist__8777);
return G__8775__delegate(m,p__8726,f,a,b,c,args);
});
G__8775.cljs$core$IFn$_invoke$arity$variadic = G__8775__delegate;
return G__8775;
})()
;
update_in = function(m,p__8726,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__8726,f);
case 4:
return update_in__4.call(this,m,p__8726,f,a);
case 5:
return update_in__5.call(this,m,p__8726,f,a,b);
case 6:
return update_in__6.call(this,m,p__8726,f,a,b,c);
default:
var G__8778 = null;
if (arguments.length > 6) {
var G__8779__i = 0, G__8779__a = new Array(arguments.length -  6);
while (G__8779__i < G__8779__a.length) {G__8779__a[G__8779__i] = arguments[G__8779__i + 6]; ++G__8779__i;}
G__8778 = new cljs.core.IndexedSeq(G__8779__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__8726,f,a,b,c, G__8778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8790 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8790) : f.call(null,G__8790));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8791 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8792 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8791,G__8792) : f.call(null,G__8791,G__8792));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8793 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8794 = x;
var G__8795 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8793,G__8794,G__8795) : f.call(null,G__8793,G__8794,G__8795));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8796 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8797 = x;
var G__8798 = y;
var G__8799 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8796,G__8797,G__8798,G__8799) : f.call(null,G__8796,G__8797,G__8798,G__8799));
})());
});
var update__7 = (function() { 
var G__8800__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__8800 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__8801__i = 0, G__8801__a = new Array(arguments.length -  6);
while (G__8801__i < G__8801__a.length) {G__8801__a[G__8801__i] = arguments[G__8801__i + 6]; ++G__8801__i;}
  more = new cljs.core.IndexedSeq(G__8801__a,0);
} 
return G__8800__delegate.call(this,m,k,f,x,y,z,more);};
G__8800.cljs$lang$maxFixedArity = 6;
G__8800.cljs$lang$applyTo = (function (arglist__8802){
var m = cljs.core.first(arglist__8802);
arglist__8802 = cljs.core.next(arglist__8802);
var k = cljs.core.first(arglist__8802);
arglist__8802 = cljs.core.next(arglist__8802);
var f = cljs.core.first(arglist__8802);
arglist__8802 = cljs.core.next(arglist__8802);
var x = cljs.core.first(arglist__8802);
arglist__8802 = cljs.core.next(arglist__8802);
var y = cljs.core.first(arglist__8802);
arglist__8802 = cljs.core.next(arglist__8802);
var z = cljs.core.first(arglist__8802);
var more = cljs.core.rest(arglist__8802);
return G__8800__delegate(m,k,f,x,y,z,more);
});
G__8800.cljs$core$IFn$_invoke$arity$variadic = G__8800__delegate;
return G__8800;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__8803 = null;
if (arguments.length > 6) {
var G__8804__i = 0, G__8804__a = new Array(arguments.length -  6);
while (G__8804__i < G__8804__a.length) {G__8804__a[G__8804__i] = arguments[G__8804__i + 6]; ++G__8804__i;}
G__8803 = new cljs.core.IndexedSeq(G__8804__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__8803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__8805 = (ll - (5));
var G__8806 = r;
ll = G__8805;
ret = G__8806;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__8811 = cljs.core.pv_aget(node,(0));
var G__8812 = (level - (5));
node = G__8811;
level = G__8812;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__8813 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__8814 = (level - (5));
node = G__8813;
level = G__8814;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__8824 = init__$2;
var G__8825 = (j + i);
var G__8826 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8824,G__8825,G__8826) : f.call(null,G__8824,G__8825,G__8826));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__8837 = (j + (1));
var G__8838 = init__$3;
j = G__8837;
init__$2 = G__8838;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8827 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8827) : cljs.core.deref.call(null,G__8827));
} else {
var G__8839 = (i + len);
var G__8840 = init__$2;
i = G__8839;
init__$1 = G__8840;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__8828 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__8828) : cljs.core.tv_editable_root.call(null,G__8828));
})(),(function (){var G__8829 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__8829) : cljs.core.tv_editable_tail.call(null,G__8829));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__8830 = init__$2;
var G__8831 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8830,G__8831) : f.call(null,G__8830,G__8831));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__8841 = (j + (1));
var G__8842 = init__$3;
j = G__8841;
init__$2 = G__8842;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8832 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8832) : cljs.core.deref.call(null,G__8832));
} else {
var G__8843 = (i + len);
var G__8844 = init__$2;
i = G__8843;
init__$1 = G__8844;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__8833 = coll__$1;
var G__8834 = cljs.core.first_array_for_longvec(coll__$1);
var G__8835 = (0);
var G__8836 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8833,G__8834,G__8835,G__8836) : cljs.core.chunked_seq.call(null,G__8833,G__8834,G__8835,G__8836));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4659__auto___8845 = len;
var i_8846 = (0);
while(true){
if((i_8846 < n__4659__auto___8845)){
(new_tail[i_8846] = (self__.tail[i_8846]));

var G__8847 = (i_8846 + (1));
i_8846 = G__8847;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__8848 = null;
var G__8848__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__8848__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__8848 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8848__2.call(this,self__,k);
case 3:
return G__8848__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8848.cljs$core$IFn$_invoke$arity$2 = G__8848__2;
G__8848.cljs$core$IFn$_invoke$arity$3 = G__8848__3;
return G__8848;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args8823){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8823)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__8849 = (i + (1));
var G__8850 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__8849;
out = G__8850;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8851__i = 0, G__8851__a = new Array(arguments.length -  0);
while (G__8851__i < G__8851__a.length) {G__8851__a[G__8851__i] = arguments[G__8851__i + 0]; ++G__8851__i;}
  args = new cljs.core.IndexedSeq(G__8851__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__8852){
var args = cljs.core.seq(arglist__8852);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__8853 = self__.vec;
var G__8854 = self__.node;
var G__8855 = self__.i;
var G__8856 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8853,G__8854,G__8855,G__8856) : cljs.core.chunked_seq.call(null,G__8853,G__8854,G__8855,G__8856));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__8857 = self__.vec;
var G__8858 = (self__.i + self__.off);
var G__8859 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8857,G__8858,G__8859) : cljs.core.subvec.call(null,G__8857,G__8858,G__8859));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__8860 = self__.vec;
var G__8861 = (self__.i + self__.off);
var G__8862 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8860,G__8861,G__8862) : cljs.core.subvec.call(null,G__8860,G__8861,G__8862));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__8863 = self__.vec;
var G__8864 = self__.node;
var G__8865 = self__.i;
var G__8866 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8863,G__8864,G__8865,G__8866) : cljs.core.chunked_seq.call(null,G__8863,G__8864,G__8865,G__8866));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__8867 = self__.vec;
var G__8868 = cljs.core.unchecked_array_for(self__.vec,end);
var G__8869 = end;
var G__8870 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8867,G__8868,G__8869,G__8870) : cljs.core.chunked_seq.call(null,G__8867,G__8868,G__8869,G__8870));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__8871 = self__.vec;
var G__8872 = self__.node;
var G__8873 = self__.i;
var G__8874 = self__.off;
var G__8875 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__8871,G__8872,G__8873,G__8874,G__8875) : cljs.core.chunked_seq.call(null,G__8871,G__8872,G__8873,G__8874,G__8875));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__8876 = self__.vec;
var G__8877 = cljs.core.unchecked_array_for(self__.vec,end);
var G__8878 = end;
var G__8879 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8876,G__8877,G__8878,G__8879) : cljs.core.chunked_seq.call(null,G__8876,G__8877,G__8878,G__8879));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__8881 = self__.meta;
var G__8882 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__8883 = self__.start;
var G__8884 = (function (){var x__4089__auto__ = self__.end;
var y__4090__auto__ = (v_pos + (1));
return ((x__4089__auto__ > y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
})();
var G__8885 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8881,G__8882,G__8883,G__8884,G__8885) : cljs.core.build_subvec.call(null,G__8881,G__8882,G__8883,G__8884,G__8885));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__8886 = self__.meta;
var G__8887 = self__.v;
var G__8888 = self__.start;
var G__8889 = (self__.end - (1));
var G__8890 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8886,G__8887,G__8888,G__8889,G__8890) : cljs.core.build_subvec.call(null,G__8886,G__8887,G__8888,G__8889,G__8890));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__8892 = meta__$1;
var G__8893 = self__.v;
var G__8894 = self__.start;
var G__8895 = self__.end;
var G__8896 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8892,G__8893,G__8894,G__8895,G__8896) : cljs.core.build_subvec.call(null,G__8892,G__8893,G__8894,G__8895,G__8896));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__8897 = self__.meta;
var G__8898 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__8899 = self__.start;
var G__8900 = (self__.end + (1));
var G__8901 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8897,G__8898,G__8899,G__8900,G__8901) : cljs.core.build_subvec.call(null,G__8897,G__8898,G__8899,G__8900,G__8901));
});

cljs.core.Subvec.prototype.call = (function() {
var G__8902 = null;
var G__8902__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__8902__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__8902 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8902__2.call(this,self__,k);
case 3:
return G__8902__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8902.cljs$core$IFn$_invoke$arity$2 = G__8902__2;
G__8902.cljs$core$IFn$_invoke$arity$3 = G__8902__3;
return G__8902;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args8880){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8880)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__8903 = meta;
var G__8904 = v.v;
var G__8905 = (v.start + start);
var G__8906 = (v.start + end);
var G__8907 = __hash;
meta = G__8903;
v = G__8904;
start = G__8905;
end = G__8906;
__hash = G__8907;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj8914 = {};
return obj8914;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__8922 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__8923 = (level - (5));
node = G__8922;
level = G__8923;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__8927 = null;
var G__8927__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8927__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8927 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8927__2.call(this,self__,k);
case 3:
return G__8927__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8927.cljs$core$IFn$_invoke$arity$2 = G__8927__2;
G__8927.cljs$core$IFn$_invoke$arity$3 = G__8927__3;
return G__8927;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args8924){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8924)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3772__auto__ = self__.front;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3772__auto__ = self__.rear;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__8928 = (i + incr);
i = G__8928;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__8929 = (i + (1));
var G__8930 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__8929;
out = G__8930;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj8934 = {};
return obj8934;
})();
var l = ks.length;
var i_8935 = (0);
while(true){
if((i_8935 < l)){
var k_8936 = (ks[i_8935]);
(new_obj[k_8936] = (obj[k_8936]));

var G__8937 = (i_8935 + (1));
i_8935 = G__8937;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3760__auto__ = (function (){var G__8941 = k;
return goog.isString(G__8941);
})();
if(cljs.core.truth_(and__3760__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3760__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__8942 = init__$1;
var G__8943 = k;
var G__8944 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8942,G__8943,G__8944) : f.call(null,G__8942,G__8943,G__8944));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8945 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8945) : cljs.core.deref.call(null,G__8945));
} else {
var G__8951 = cljs.core.rest(keys__$1);
var G__8952 = init__$2;
keys__$1 = G__8951;
init__$1 = G__8952;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3760__auto__ = (function (){var G__8947 = k;
return goog.isString(G__8947);
})();
if(cljs.core.truth_(and__3760__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3760__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__8948 = k;
return goog.isString(G__8948);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3760__auto__ = (function (){var G__8950 = k;
return goog.isString(G__8950);
})();
if(cljs.core.truth_(and__3760__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3760__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__8938_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__8938_SHARP_,(self__.strobj[p1__8938_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__8953 = null;
var G__8953__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8953__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8953 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8953__2.call(this,self__,k);
case 3:
return G__8953__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8953.cljs$core$IFn$_invoke$arity$2 = G__8953__2;
G__8953.cljs$core$IFn$_invoke$arity$3 = G__8953__3;
return G__8953;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args8939){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8939)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj8955 = {};
return obj8955;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__8956 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8956,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8956,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__8957 = (i + (2));
i = G__8957;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__8958 = (i + (2));
i = G__8958;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__8959 = (i + (2));
i = G__8959;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__8960 = (i + (2));
i = G__8960;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__8961 = (i + (2));
i = G__8961;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3772__auto__ = (function (){var G__8965 = k;
return goog.isString(G__8965);
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_8966 = (0);
while(true){
if((i_8966 < l)){
(narr[i_8966] = (arr[i_8966]));

var G__8967 = (i_8966 + (1));
i_8966 = G__8967;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8969 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__8969) : cljs.core.keys.call(null,G__8969));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8970 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__8970) : cljs.core.vals.call(null,G__8970));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__8971 = cljs.core.seq(coll);
var chunk__8972 = null;
var count__8973 = (0);
var i__8974 = (0);
while(true){
if((i__8974 < count__8973)){
var vec__8975 = chunk__8972.cljs$core$IIndexed$_nth$arity$2(null,i__8974);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8975,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8975,(1),null);
var G__8976_8989 = v;
var G__8977_8990 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8976_8989,G__8977_8990) : f.call(null,G__8976_8989,G__8977_8990));

var G__8991 = seq__8971;
var G__8992 = chunk__8972;
var G__8993 = count__8973;
var G__8994 = (i__8974 + (1));
seq__8971 = G__8991;
chunk__8972 = G__8992;
count__8973 = G__8993;
i__8974 = G__8994;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8971);
if(temp__4126__auto__){
var seq__8971__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8971__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__8971__$1);
var G__8995 = cljs.core.chunk_rest(seq__8971__$1);
var G__8996 = c__4559__auto__;
var G__8997 = cljs.core.count(c__4559__auto__);
var G__8998 = (0);
seq__8971 = G__8995;
chunk__8972 = G__8996;
count__8973 = G__8997;
i__8974 = G__8998;
continue;
} else {
var vec__8978 = cljs.core.first(seq__8971__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8978,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8978,(1),null);
var G__8979_8999 = v;
var G__8980_9000 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8979_8999,G__8980_9000) : f.call(null,G__8979_8999,G__8980_9000));

var G__9001 = cljs.core.next(seq__8971__$1);
var G__9002 = null;
var G__9003 = (0);
var G__9004 = (0);
seq__8971 = G__9001;
chunk__8972 = G__9002;
count__8973 = G__9003;
i__8974 = G__9004;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__8981 = init__$1;
var G__8982 = (self__.arr[i]);
var G__8983 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8981,G__8982,G__8983) : f.call(null,G__8981,G__8982,G__8983));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8984 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8984) : cljs.core.deref.call(null,G__8984));
} else {
var G__9005 = (i + (2));
var G__9006 = init__$2;
i = G__9005;
init__$1 = G__9006;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__8985 = other;
if(G__8985){
var bit__4446__auto__ = (G__8985.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4446__auto__) || (G__8985.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__9007 = (i + (2));
i = G__9007;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj8987 = {};
return obj8987;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__9008 = (s + (2));
var G__9009 = d;
s = G__9008;
d = G__9009;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__9010 = (s + (2));
var G__9011 = (d + (2));
s = G__9010;
d = G__9011;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__8988 = cljs.core.aclone(self__.arr);
(G__8988[(idx + (1))] = v);

return G__8988;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9012 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9013 = cljs.core.next(es);
ret = G__9012;
es = G__9013;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__9014 = null;
var G__9014__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9014__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9014 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9014__2.call(this,self__,k);
case 3:
return G__9014__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9014.cljs$core$IFn$_invoke$arity$2 = G__9014__2;
G__9014.cljs$core$IFn$_invoke$arity$3 = G__9014__3;
return G__9014;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args8968){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8968)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9015 = (i + (2));
var G__9016 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9015;
ret = G__9016;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__9017_9025 = self__.arr;
G__9017_9025.pop();

G__9017_9025.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__9018 = self__.len;
var G__9019 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9018,G__9019) : cljs.core.array__GT_transient_hash_map.call(null,G__9018,G__9019));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__9020 = o;
if(G__9020){
var bit__4453__auto__ = (G__9020.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4453__auto__) || (G__9020.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9020.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9020);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9020);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__9021 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9021) : cljs.core.key.call(null,G__9021));
})(),(function (){var G__9022 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9022) : cljs.core.val.call(null,G__9022));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9026 = cljs.core.next(es);
var G__9027 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__9023 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9023) : cljs.core.key.call(null,G__9023));
})(),(function (){var G__9024 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9024) : cljs.core.val.call(null,G__9024));
})());
es = G__9026;
tcoll__$2 = G__9027;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__9028 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__9029 = (i + (2));
out = G__9028;
i = G__9029;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__9032 = cljs.core.aclone(arr);
(G__9032[i] = a);

return G__9032;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__9033 = cljs.core.aclone(arr);
(G__9033[i] = a);

(G__9033[j] = b);

return G__9033;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__9038 = init__$1;
var G__9039 = k;
var G__9040 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9038,G__9039,G__9040) : f.call(null,G__9038,G__9039,G__9040));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9041 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9041) : cljs.core.deref.call(null,G__9041));
} else {
var G__9042 = (i + (2));
var G__9043 = init__$2;
i = G__9042;
init__$1 = G__9043;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9044 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9044) : cljs.core.create_inode_seq.call(null,G__9044));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9058 = (0);
var j_9059 = (0);
while(true){
if((i_9058 < (32))){
if((((self__.bitmap >>> i_9058) & (1)) === (0))){
var G__9060 = (i_9058 + (1));
var G__9061 = j_9059;
i_9058 = G__9060;
j_9059 = G__9061;
continue;
} else {
(nodes[i_9058] = ((!(((self__.arr[j_9059]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_9059])),(self__.arr[j_9059]),(self__.arr[(j_9059 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9059 + (1))])));

var G__9062 = (i_9058 + (1));
var G__9063 = (j_9059 + (2));
i_9058 = G__9062;
j_9059 = G__9063;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9045 = edit__$1;
var G__9046 = (shift + (5));
var G__9047 = key_or_nil;
var G__9048 = val_or_node;
var G__9049 = hash;
var G__9050 = key;
var G__9051 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9045,G__9046,G__9047,G__9048,G__9049,G__9050,G__9051) : cljs.core.create_node.call(null,G__9045,G__9046,G__9047,G__9048,G__9049,G__9050,G__9051));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9064 = (0);
var j_9065 = (0);
while(true){
if((i_9064 < (32))){
if((((self__.bitmap >>> i_9064) & (1)) === (0))){
var G__9066 = (i_9064 + (1));
var G__9067 = j_9065;
i_9064 = G__9066;
j_9065 = G__9067;
continue;
} else {
(nodes[i_9064] = ((!(((self__.arr[j_9065]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_9065])),(self__.arr[j_9065]),(self__.arr[(j_9065 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9065 + (1))])));

var G__9068 = (i_9064 + (1));
var G__9069 = (j_9065 + (2));
i_9064 = G__9068;
j_9065 = G__9069;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9052 = (shift + (5));
var G__9053 = key_or_nil;
var G__9054 = val_or_node;
var G__9055 = hash;
var G__9056 = key;
var G__9057 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9052,G__9053,G__9054,G__9055,G__9056,G__9057) : cljs.core.create_node.call(null,G__9052,G__9053,G__9054,G__9055,G__9056,G__9057));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__9070 = (i + (1));
var G__9071 = (j + (2));
var G__9072 = (bitmap | ((1) << i));
i = G__9070;
j = G__9071;
bitmap = G__9072;
continue;
} else {
var G__9073 = (i + (1));
var G__9074 = j;
var G__9075 = bitmap;
i = G__9073;
j = G__9074;
bitmap = G__9075;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9076 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9076) : cljs.core.create_array_node_seq.call(null,G__9076));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9077 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9077) : cljs.core.deref.call(null,G__9077));
} else {
var G__9078 = (i + (1));
var G__9079 = init__$2;
i = G__9078;
init__$1 = G__9079;
continue;
}
} else {
var G__9080 = (i + (1));
var G__9081 = init__$1;
i = G__9080;
init__$1 = G__9081;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__9082 = (i + (2));
i = G__9082;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9083 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9083) : cljs.core.create_inode_seq.call(null,G__9083));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__9084 = self__.nodes;
var G__9085 = (self__.i + (2));
var G__9086 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9084,G__9085,G__9086) : cljs.core.create_inode_seq.call(null,G__9084,G__9085,G__9086));
} else {
var G__9087 = self__.nodes;
var G__9088 = self__.i;
var G__9089 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9087,G__9088,G__9089) : cljs.core.create_inode_seq.call(null,G__9087,G__9088,G__9089));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__9093 = (j + (2));
j = G__9093;
continue;
}
} else {
var G__9094 = (j + (2));
j = G__9094;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__9095 = null;
var G__9096 = self__.nodes;
var G__9097 = self__.i;
var G__9098 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9095,G__9096,G__9097,G__9098) : cljs.core.create_array_node_seq.call(null,G__9095,G__9096,G__9097,G__9098));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__9103 = (j + (1));
j = G__9103;
continue;
}
} else {
var G__9104 = (j + (1));
j = G__9104;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9106 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9106) : cljs.core.keys.call(null,G__9106));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9107 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9107) : cljs.core.vals.call(null,G__9107));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9108 = cljs.core.seq(coll);
var chunk__9109 = null;
var count__9110 = (0);
var i__9111 = (0);
while(true){
if((i__9111 < count__9110)){
var vec__9112 = chunk__9109.cljs$core$IIndexed$_nth$arity$2(null,i__9111);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9112,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9112,(1),null);
var G__9113_9124 = v;
var G__9114_9125 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9113_9124,G__9114_9125) : f.call(null,G__9113_9124,G__9114_9125));

var G__9126 = seq__9108;
var G__9127 = chunk__9109;
var G__9128 = count__9110;
var G__9129 = (i__9111 + (1));
seq__9108 = G__9126;
chunk__9109 = G__9127;
count__9110 = G__9128;
i__9111 = G__9129;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9108);
if(temp__4126__auto__){
var seq__9108__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9108__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__9108__$1);
var G__9130 = cljs.core.chunk_rest(seq__9108__$1);
var G__9131 = c__4559__auto__;
var G__9132 = cljs.core.count(c__4559__auto__);
var G__9133 = (0);
seq__9108 = G__9130;
chunk__9109 = G__9131;
count__9110 = G__9132;
i__9111 = G__9133;
continue;
} else {
var vec__9115 = cljs.core.first(seq__9108__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9115,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9115,(1),null);
var G__9116_9134 = v;
var G__9117_9135 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9116_9134,G__9117_9135) : f.call(null,G__9116_9134,G__9117_9135));

var G__9136 = cljs.core.next(seq__9108__$1);
var G__9137 = null;
var G__9138 = (0);
var G__9139 = (0);
seq__9108 = G__9136;
chunk__9109 = G__9137;
count__9110 = G__9138;
i__9111 = G__9139;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__9118 = init;
var G__9119 = null;
var G__9120 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9118,G__9119,G__9120) : f.call(null,G__9118,G__9119,G__9120));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9121 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9121) : cljs.core.deref.call(null,G__9121));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj9123 = {};
return obj9123;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9140 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9141 = cljs.core.next(es);
ret = G__9140;
es = G__9141;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__9142 = null;
var G__9142__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9142__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9142 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9142__2.call(this,self__,k);
case 3:
return G__9142__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9142.cljs$core$IFn$_invoke$arity$2 = G__9142__2;
G__9142.cljs$core$IFn$_invoke$arity$3 = G__9142__3;
return G__9142;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args9105){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9105)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9143 = (i + (2));
var G__9144 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9143;
ret = G__9144;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9145 = (i + (1));
var G__9146 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__9145;
out = G__9146;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__9147 = o;
if(G__9147){
var bit__4453__auto__ = (G__9147.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4453__auto__) || (G__9147.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9147.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9147);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9147);
}
})()){
return tcoll.assoc_BANG_((function (){var G__9148 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9148) : cljs.core.key.call(null,G__9148));
})(),(function (){var G__9149 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9149) : cljs.core.val.call(null,G__9149));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9152 = cljs.core.next(es);
var G__9153 = tcoll__$1.assoc_BANG_((function (){var G__9150 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9150) : cljs.core.key.call(null,G__9150));
})(),(function (){var G__9151 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9151) : cljs.core.val.call(null,G__9151));
})());
es = G__9152;
tcoll__$1 = G__9153;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__9154 = ((ascending_QMARK_)?t.left:t.right);
var G__9155 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__9154;
stack__$1 = G__9155;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9168 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9168) : cljs.core.deref.call(null,G__9168));
} else {
var init__$2 = (function (){var G__9169 = init__$1;
var G__9170 = node.key;
var G__9171 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9169,G__9170,G__9171) : f.call(null,G__9169,G__9170,G__9171));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9172 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9172) : cljs.core.deref.call(null,G__9172));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__9173 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9173) : cljs.core.deref.call(null,G__9173));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__9175 = null;
var G__9175__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9175__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9175 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9175__2.call(this,self__,k);
case 3:
return G__9175__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9175.cljs$core$IFn$_invoke$arity$2 = G__9175__2;
G__9175.cljs$core$IFn$_invoke$arity$3 = G__9175__3;
return G__9175;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args9174){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9174)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__9177 = null;
var G__9177__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9177__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9177 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9177__2.call(this,self__,k);
case 3:
return G__9177__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9177.cljs$core$IFn$_invoke$arity$2 = G__9177__2;
G__9177.cljs$core$IFn$_invoke$arity$3 = G__9177__3;
return G__9177;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args9176){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9176)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__9190 = k;
var G__9191 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9190,G__9191) : comp.call(null,G__9190,G__9191));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__9210 = k;
var G__9211 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9210,G__9211) : comp.call(null,G__9210,G__9211));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__9222 = k;
var G__9223 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9222,G__9223) : comp.call(null,G__9222,G__9223));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9225 = cljs.core.seq(coll);
var chunk__9226 = null;
var count__9227 = (0);
var i__9228 = (0);
while(true){
if((i__9228 < count__9227)){
var vec__9229 = chunk__9226.cljs$core$IIndexed$_nth$arity$2(null,i__9228);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9229,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9229,(1),null);
var G__9230_9242 = v;
var G__9231_9243 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9230_9242,G__9231_9243) : f.call(null,G__9230_9242,G__9231_9243));

var G__9244 = seq__9225;
var G__9245 = chunk__9226;
var G__9246 = count__9227;
var G__9247 = (i__9228 + (1));
seq__9225 = G__9244;
chunk__9226 = G__9245;
count__9227 = G__9246;
i__9228 = G__9247;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9225);
if(temp__4126__auto__){
var seq__9225__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9225__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__9225__$1);
var G__9248 = cljs.core.chunk_rest(seq__9225__$1);
var G__9249 = c__4559__auto__;
var G__9250 = cljs.core.count(c__4559__auto__);
var G__9251 = (0);
seq__9225 = G__9248;
chunk__9226 = G__9249;
count__9227 = G__9250;
i__9228 = G__9251;
continue;
} else {
var vec__9232 = cljs.core.first(seq__9225__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9232,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9232,(1),null);
var G__9233_9252 = v;
var G__9234_9253 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9233_9252,G__9234_9253) : f.call(null,G__9233_9252,G__9234_9253));

var G__9254 = cljs.core.next(seq__9225__$1);
var G__9255 = null;
var G__9256 = (0);
var G__9257 = (0);
seq__9225 = G__9254;
chunk__9226 = G__9255;
count__9227 = G__9256;
i__9228 = G__9257;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9235 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9235) : cljs.core.keys.call(null,G__9235));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9236 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9236) : cljs.core.vals.call(null,G__9236));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9237 = k;
var G__9238 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9237,G__9238) : self__.comp.call(null,G__9237,G__9238));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__9258 = t.left;
t = G__9258;
continue;
} else {
var G__9259 = t.right;
t = G__9259;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9260 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9261 = cljs.core.next(es);
ret = G__9260;
es = G__9261;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__9262 = null;
var G__9262__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9262__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9262 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9262__2.call(this,self__,k);
case 3:
return G__9262__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9262.cljs$core$IFn$_invoke$arity$2 = G__9262__2;
G__9262.cljs$core$IFn$_invoke$arity$3 = G__9262__3;
return G__9262;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args9224){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9224)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9239 = k;
var G__9240 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9239,G__9240) : self__.comp.call(null,G__9239,G__9240));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__9263 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9264 = t.left;
stack = G__9263;
t = G__9264;
continue;
} else {
var G__9265 = stack;
var G__9266 = t.right;
stack = G__9265;
t = G__9266;
continue;
}
} else {
if((c > (0))){
var G__9267 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9268 = t.right;
stack = G__9267;
t = G__9268;
continue;
} else {
var G__9269 = stack;
var G__9270 = t.left;
stack = G__9269;
t = G__9270;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__9241 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9241) : cljs.core.key.call(null,G__9241));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__9271 = cljs.core.nnext(in$);
var G__9272 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9271;
out = G__9272;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9273__i = 0, G__9273__a = new Array(arguments.length -  0);
while (G__9273__i < G__9273__a.length) {G__9273__a[G__9273__i] = arguments[G__9273__i + 0]; ++G__9273__i;}
  keyvals = new cljs.core.IndexedSeq(G__9273__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__9274){
var keyvals = cljs.core.seq(arglist__9274);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9275__i = 0, G__9275__a = new Array(arguments.length -  0);
while (G__9275__i < G__9275__a.length) {G__9275__a[G__9275__i] = arguments[G__9275__i + 0]; ++G__9275__i;}
  keyvals = new cljs.core.IndexedSeq(G__9275__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__9276){
var keyvals = cljs.core.seq(arglist__9276);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj9280 = {};
return obj9280;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__9281 = cljs.core.nnext(kvs);
kvs = G__9281;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9282__i = 0, G__9282__a = new Array(arguments.length -  0);
while (G__9282__i < G__9282__a.length) {G__9282__a[G__9282__i] = arguments[G__9282__i + 0]; ++G__9282__i;}
  keyvals = new cljs.core.IndexedSeq(G__9282__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__9283){
var keyvals = cljs.core.seq(arglist__9283);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__9284 = cljs.core.nnext(in$);
var G__9285 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9284;
out = G__9285;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9286__i = 0, G__9286__a = new Array(arguments.length -  0);
while (G__9286__i < G__9286__a.length) {G__9286__a[G__9286__i] = arguments[G__9286__i + 0]; ++G__9286__i;}
  keyvals = new cljs.core.IndexedSeq(G__9286__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__9287){
var keyvals = cljs.core.seq(arglist__9287);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__9288 = cljs.core.nnext(in$);
var G__9289 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9288;
out = G__9289;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__9290__i = 0, G__9290__a = new Array(arguments.length -  1);
while (G__9290__i < G__9290__a.length) {G__9290__a[G__9290__i] = arguments[G__9290__i + 1]; ++G__9290__i;}
  keyvals = new cljs.core.IndexedSeq(G__9290__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__9291){
var comparator = cljs.core.first(arglist__9291);
var keyvals = cljs.core.rest(arglist__9291);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9292 = self__.mseq;
if(G__9292){
var bit__4453__auto__ = (G__9292.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__9292.cljs$core$INext$)){
return true;
} else {
if((!G__9292.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9292);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9292);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9293 = self__.mseq;
if(G__9293){
var bit__4453__auto__ = (G__9293.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__9293.cljs$core$INext$)){
return true;
} else {
if((!G__9293.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9293);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9293);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9294 = self__.mseq;
if(G__9294){
var bit__4453__auto__ = (G__9294.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__9294.cljs$core$INext$)){
return true;
} else {
if((!G__9294.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9294);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9294);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9295 = self__.mseq;
if(G__9295){
var bit__4453__auto__ = (G__9295.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__9295.cljs$core$INext$)){
return true;
} else {
if((!G__9295.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9295);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9295);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__9296_SHARP_,p2__9297_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3772__auto__ = p1__9296_SHARP_;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__9297_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__9298__i = 0, G__9298__a = new Array(arguments.length -  0);
while (G__9298__i < G__9298__a.length) {G__9298__a[G__9298__i] = arguments[G__9298__i + 0]; ++G__9298__i;}
  maps = new cljs.core.IndexedSeq(G__9298__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__9299){
var maps = cljs.core.seq(arglist__9299);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9302 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9303 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9302,G__9303) : f.call(null,G__9302,G__9303));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3772__auto__ = m1;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__9304__i = 0, G__9304__a = new Array(arguments.length -  1);
while (G__9304__i < G__9304__a.length) {G__9304__a[G__9304__i] = arguments[G__9304__i + 1]; ++G__9304__i;}
  maps = new cljs.core.IndexedSeq(G__9304__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__9305){
var f = cljs.core.first(arglist__9305);
var maps = cljs.core.rest(arglist__9305);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__9306 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__9307 = cljs.core.next(keys);
ret = G__9306;
keys = G__9307;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9310 = cljs.core.seq(coll);
var chunk__9311 = null;
var count__9312 = (0);
var i__9313 = (0);
while(true){
if((i__9313 < count__9312)){
var vec__9314 = chunk__9311.cljs$core$IIndexed$_nth$arity$2(null,i__9313);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9314,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9314,(1),null);
var G__9315_9320 = v;
var G__9316_9321 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9315_9320,G__9316_9321) : f.call(null,G__9315_9320,G__9316_9321));

var G__9322 = seq__9310;
var G__9323 = chunk__9311;
var G__9324 = count__9312;
var G__9325 = (i__9313 + (1));
seq__9310 = G__9322;
chunk__9311 = G__9323;
count__9312 = G__9324;
i__9313 = G__9325;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9310);
if(temp__4126__auto__){
var seq__9310__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9310__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__9310__$1);
var G__9326 = cljs.core.chunk_rest(seq__9310__$1);
var G__9327 = c__4559__auto__;
var G__9328 = cljs.core.count(c__4559__auto__);
var G__9329 = (0);
seq__9310 = G__9326;
chunk__9311 = G__9327;
count__9312 = G__9328;
i__9313 = G__9329;
continue;
} else {
var vec__9317 = cljs.core.first(seq__9310__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9317,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9317,(1),null);
var G__9318_9330 = v;
var G__9319_9331 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9318_9330,G__9319_9331) : f.call(null,G__9318_9330,G__9319_9331));

var G__9332 = cljs.core.next(seq__9310__$1);
var G__9333 = null;
var G__9334 = (0);
var G__9335 = (0);
seq__9310 = G__9332;
chunk__9311 = G__9333;
count__9312 = G__9334;
i__9313 = G__9335;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9308_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9308_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__9336 = null;
var G__9336__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9336__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9336 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9336__2.call(this,self__,k);
case 3:
return G__9336__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9336.cljs$core$IFn$_invoke$arity$2 = G__9336__2;
G__9336.cljs$core$IFn$_invoke$arity$3 = G__9336__3;
return G__9336;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args9309){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9309)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9337 = (i + (1));
var G__9338 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__9337;
out = G__9338;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__9339 = (i + (1));
var G__9340 = cljs.core._conj_BANG_(out,(items[i]));
i = G__9339;
out = G__9340;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__9342 = null;
var G__9342__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__9342__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__9342 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9342__2.call(this,self__,k);
case 3:
return G__9342__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9342.cljs$core$IFn$_invoke$arity$2 = G__9342__2;
G__9342.cljs$core$IFn$_invoke$arity$3 = G__9342__3;
return G__9342;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args9341){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9341)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9345 = cljs.core.seq(coll);
var chunk__9346 = null;
var count__9347 = (0);
var i__9348 = (0);
while(true){
if((i__9348 < count__9347)){
var vec__9349 = chunk__9346.cljs$core$IIndexed$_nth$arity$2(null,i__9348);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9349,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9349,(1),null);
var G__9350_9355 = v;
var G__9351_9356 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9350_9355,G__9351_9356) : f.call(null,G__9350_9355,G__9351_9356));

var G__9357 = seq__9345;
var G__9358 = chunk__9346;
var G__9359 = count__9347;
var G__9360 = (i__9348 + (1));
seq__9345 = G__9357;
chunk__9346 = G__9358;
count__9347 = G__9359;
i__9348 = G__9360;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9345);
if(temp__4126__auto__){
var seq__9345__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9345__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__9345__$1);
var G__9361 = cljs.core.chunk_rest(seq__9345__$1);
var G__9362 = c__4559__auto__;
var G__9363 = cljs.core.count(c__4559__auto__);
var G__9364 = (0);
seq__9345 = G__9361;
chunk__9346 = G__9362;
count__9347 = G__9363;
i__9348 = G__9364;
continue;
} else {
var vec__9352 = cljs.core.first(seq__9345__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9352,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9352,(1),null);
var G__9353_9365 = v;
var G__9354_9366 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9353_9365,G__9354_9366) : f.call(null,G__9353_9365,G__9354_9366));

var G__9367 = cljs.core.next(seq__9345__$1);
var G__9368 = null;
var G__9369 = (0);
var G__9370 = (0);
seq__9345 = G__9367;
chunk__9346 = G__9368;
count__9347 = G__9369;
i__9348 = G__9370;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9343_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9343_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__9371 = null;
var G__9371__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9371__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9371 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9371__2.call(this,self__,k);
case 3:
return G__9371__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9371.cljs$core$IFn$_invoke$arity$2 = G__9371__2;
G__9371.cljs$core$IFn$_invoke$arity$3 = G__9371__3;
return G__9371;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args9344){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9344)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4653__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4653__auto__.length)){
var G__9372 = (i + (1));
var G__9373 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__9372;
res = G__9373;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__9374 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__9375 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__9374;
out = G__9375;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__9376__delegate = function (keys){
return cljs.core.set(keys);
};
var G__9376 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9377__i = 0, G__9377__a = new Array(arguments.length -  0);
while (G__9377__i < G__9377__a.length) {G__9377__a[G__9377__i] = arguments[G__9377__i + 0]; ++G__9377__i;}
  keys = new cljs.core.IndexedSeq(G__9377__a,0);
} 
return G__9376__delegate.call(this,keys);};
G__9376.cljs$lang$maxFixedArity = 0;
G__9376.cljs$lang$applyTo = (function (arglist__9378){
var keys = cljs.core.seq(arglist__9378);
return G__9376__delegate(keys);
});
G__9376.cljs$core$IFn$_invoke$arity$variadic = G__9376__delegate;
return G__9376;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__9379 = null;
if (arguments.length > 0) {
var G__9380__i = 0, G__9380__a = new Array(arguments.length -  0);
while (G__9380__i < G__9380__a.length) {G__9380__a[G__9380__i] = arguments[G__9380__i + 0]; ++G__9380__i;}
G__9379 = new cljs.core.IndexedSeq(G__9380__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9379);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9381__i = 0, G__9381__a = new Array(arguments.length -  0);
while (G__9381__i < G__9381__a.length) {G__9381__a[G__9381__i] = arguments[G__9381__i + 0]; ++G__9381__i;}
  keys = new cljs.core.IndexedSeq(G__9381__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__9382){
var keys = cljs.core.seq(arglist__9382);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__9383__i = 0, G__9383__a = new Array(arguments.length -  1);
while (G__9383__i < G__9383__a.length) {G__9383__a[G__9383__i] = arguments[G__9383__i + 1]; ++G__9383__i;}
  keys = new cljs.core.IndexedSeq(G__9383__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__9384){
var comparator = cljs.core.first(arglist__9384);
var keys = cljs.core.rest(arglist__9384);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__9385_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9385_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__9385_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__9386_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9386_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__9386_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__9407 = null;
var G__9407__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9407__1 = (function (result){
var G__9397 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9397) : rf.call(null,G__9397));
});
var G__9407__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__9398 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9398) : cljs.core.deref.call(null,G__9398));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__9399 = result;
var G__9400 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9399,G__9400) : rf.call(null,G__9399,G__9400));
}
});
G__9407 = function(result,input){
switch(arguments.length){
case 0:
return G__9407__0.call(this);
case 1:
return G__9407__1.call(this,result);
case 2:
return G__9407__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9407.cljs$core$IFn$_invoke$arity$0 = G__9407__0;
G__9407.cljs$core$IFn$_invoke$arity$1 = G__9407__1;
G__9407.cljs$core$IFn$_invoke$arity$2 = G__9407__2;
return G__9407;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__9405,seen__$1){
while(true){
var vec__9406 = p__9405;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9406,(0),null);
var xs__$1 = vec__9406;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__9408 = cljs.core.rest(s);
var G__9409 = seen__$1;
p__9405 = G__9408;
seen__$1 = G__9409;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__9410 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__9411 = cljs.core.next(s__$1);
ret = G__9410;
s__$1 = G__9411;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__9413 = x;
if(G__9413){
var bit__4446__auto__ = (G__9413.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4446__auto__) || (G__9413.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__9414 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__9415 = cljs.core.next(ks);
var G__9416 = cljs.core.next(vs);
map = G__9414;
ks = G__9415;
vs = G__9416;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__9427 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9427) : k.call(null,G__9427));
})() > (function (){var G__9428 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9428) : k.call(null,G__9428));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__9429__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9417_SHARP_,p2__9418_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__9417_SHARP_,p2__9418_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9429 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9430__i = 0, G__9430__a = new Array(arguments.length -  3);
while (G__9430__i < G__9430__a.length) {G__9430__a[G__9430__i] = arguments[G__9430__i + 3]; ++G__9430__i;}
  more = new cljs.core.IndexedSeq(G__9430__a,0);
} 
return G__9429__delegate.call(this,k,x,y,more);};
G__9429.cljs$lang$maxFixedArity = 3;
G__9429.cljs$lang$applyTo = (function (arglist__9431){
var k = cljs.core.first(arglist__9431);
arglist__9431 = cljs.core.next(arglist__9431);
var x = cljs.core.first(arglist__9431);
arglist__9431 = cljs.core.next(arglist__9431);
var y = cljs.core.first(arglist__9431);
var more = cljs.core.rest(arglist__9431);
return G__9429__delegate(k,x,y,more);
});
G__9429.cljs$core$IFn$_invoke$arity$variadic = G__9429__delegate;
return G__9429;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__9432 = null;
if (arguments.length > 3) {
var G__9433__i = 0, G__9433__a = new Array(arguments.length -  3);
while (G__9433__i < G__9433__a.length) {G__9433__a[G__9433__i] = arguments[G__9433__i + 3]; ++G__9433__i;}
G__9432 = new cljs.core.IndexedSeq(G__9433__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__9444 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9444) : k.call(null,G__9444));
})() < (function (){var G__9445 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9445) : k.call(null,G__9445));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__9446__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9434_SHARP_,p2__9435_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__9434_SHARP_,p2__9435_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9446 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9447__i = 0, G__9447__a = new Array(arguments.length -  3);
while (G__9447__i < G__9447__a.length) {G__9447__a[G__9447__i] = arguments[G__9447__i + 3]; ++G__9447__i;}
  more = new cljs.core.IndexedSeq(G__9447__a,0);
} 
return G__9446__delegate.call(this,k,x,y,more);};
G__9446.cljs$lang$maxFixedArity = 3;
G__9446.cljs$lang$applyTo = (function (arglist__9448){
var k = cljs.core.first(arglist__9448);
arglist__9448 = cljs.core.next(arglist__9448);
var x = cljs.core.first(arglist__9448);
arglist__9448 = cljs.core.next(arglist__9448);
var y = cljs.core.first(arglist__9448);
var more = cljs.core.rest(arglist__9448);
return G__9446__delegate(k,x,y,more);
});
G__9446.cljs$core$IFn$_invoke$arity$variadic = G__9446__delegate;
return G__9446;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__9449 = null;
if (arguments.length > 3) {
var G__9450__i = 0, G__9450__a = new Array(arguments.length -  3);
while (G__9450__i < G__9450__a.length) {G__9450__a[G__9450__i] = arguments[G__9450__i + 3]; ++G__9450__i;}
G__9449 = new cljs.core.IndexedSeq(G__9450__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9449);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__9467 = null;
var G__9467__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9467__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9462 = result;
var G__9463 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9462,G__9463) : rf.call(null,G__9462,G__9463));
})());
})());
var G__9464 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9464) : rf.call(null,G__9464));
});
var G__9467__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__9465 = result;
var G__9466 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9465,G__9466) : rf.call(null,G__9465,G__9466));
} else {
return result;
}
});
G__9467 = function(result,input){
switch(arguments.length){
case 0:
return G__9467__0.call(this);
case 1:
return G__9467__1.call(this,result);
case 2:
return G__9467__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9467.cljs$core$IFn$_invoke$arity$0 = G__9467__0;
G__9467.cljs$core$IFn$_invoke$arity$1 = G__9467__1;
G__9467.cljs$core$IFn$_invoke$arity$2 = G__9467__2;
return G__9467;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__9480 = null;
var G__9480__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9480__1 = (function (result){
var G__9475 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9475) : rf.call(null,G__9475));
});
var G__9480__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9476 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9476) : pred.call(null,G__9476));
})())){
var G__9477 = result;
var G__9478 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9477,G__9478) : rf.call(null,G__9477,G__9478));
} else {
return cljs.core.reduced(result);
}
});
G__9480 = function(result,input){
switch(arguments.length){
case 0:
return G__9480__0.call(this);
case 1:
return G__9480__1.call(this,result);
case 2:
return G__9480__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9480.cljs$core$IFn$_invoke$arity$0 = G__9480__0;
G__9480.cljs$core$IFn$_invoke$arity$1 = G__9480__1;
G__9480.cljs$core$IFn$_invoke$arity$2 = G__9480__2;
return G__9480;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__9479 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9479) : pred.call(null,G__9479));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__9485 = (function (){var G__9487 = cljs.core._entry_key(sc,e);
var G__9488 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9487,G__9488) : comp.call(null,G__9487,G__9488));
})();
var G__9486 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9485,G__9486) : test.call(null,G__9485,G__9486));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9492 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9492,(0),null);
var s = vec__9492;
if(cljs.core.truth_((function (){var G__9493 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9493) : include.call(null,G__9493));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9494 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9494,(0),null);
var s = vec__9494;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9498 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9498,(0),null);
var s = vec__9498;
if(cljs.core.truth_((function (){var G__9499 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9499) : include.call(null,G__9499));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9500 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9500,(0),null);
var s = vec__9500;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__9501 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9501) : Math.ceil.call(null,G__9501));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__9502 = ret;
var G__9503 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9502,G__9503) : f.call(null,G__9502,G__9503));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__9504 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9504) : cljs.core.deref.call(null,G__9504));
} else {
var G__9505 = (i + self__.step);
var G__9506 = ret__$1;
i = G__9505;
ret = G__9506;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9524 = null;
var G__9524__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9524__1 = (function (result){
var G__9521 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9521) : rf.call(null,G__9521));
});
var G__9524__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__9522 = result;
var G__9523 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9522,G__9523) : rf.call(null,G__9522,G__9523));
} else {
return result;
}
});
G__9524 = function(result,input){
switch(arguments.length){
case 0:
return G__9524__0.call(this);
case 1:
return G__9524__1.call(this,result);
case 2:
return G__9524__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9524.cljs$core$IFn$_invoke$arity$0 = G__9524__0;
G__9524.cljs$core$IFn$_invoke$arity$1 = G__9524__1;
G__9524.cljs$core$IFn$_invoke$arity$2 = G__9524__2;
return G__9524;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__9546 = null;
var G__9546__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9546__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9537 = result;
var G__9538 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9537,G__9538) : rf.call(null,G__9537,G__9538));
})());
})());
var G__9539 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9539) : rf.call(null,G__9539));
});
var G__9546__2 = (function (result,input){
var pval = (function (){var G__9540 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9540) : cljs.core.deref.call(null,G__9540));
})();
var val = (function (){var G__9541 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9541) : f.call(null,G__9541));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__9542 = result;
var G__9543 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9542,G__9543) : rf.call(null,G__9542,G__9543));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__9546 = function(result,input){
switch(arguments.length){
case 0:
return G__9546__0.call(this);
case 1:
return G__9546__1.call(this,result);
case 2:
return G__9546__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9546.cljs$core$IFn$_invoke$arity$0 = G__9546__0;
G__9546.cljs$core$IFn$_invoke$arity$1 = G__9546__1;
G__9546.cljs$core$IFn$_invoke$arity$2 = G__9546__2;
return G__9546;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__9544 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9544) : f.call(null,G__9544));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__9525_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__9545 = p1__9525_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9545) : f.call(null,G__9545));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__9555 = init;
var G__9556 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9555,G__9556) : f.call(null,G__9555,G__9556));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__9651 = null;
var G__9651__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__9651__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9609 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9609) : f.call(null,G__9609));
})()],null));
});
var G__9651__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9610 = x;
var G__9611 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9610,G__9611) : f.call(null,G__9610,G__9611));
})()],null));
});
var G__9651__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9612 = x;
var G__9613 = y;
var G__9614 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9612,G__9613,G__9614) : f.call(null,G__9612,G__9613,G__9614));
})()],null));
});
var G__9651__4 = (function() { 
var G__9652__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__9652 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9653__i = 0, G__9653__a = new Array(arguments.length -  3);
while (G__9653__i < G__9653__a.length) {G__9653__a[G__9653__i] = arguments[G__9653__i + 3]; ++G__9653__i;}
  args = new cljs.core.IndexedSeq(G__9653__a,0);
} 
return G__9652__delegate.call(this,x,y,z,args);};
G__9652.cljs$lang$maxFixedArity = 3;
G__9652.cljs$lang$applyTo = (function (arglist__9654){
var x = cljs.core.first(arglist__9654);
arglist__9654 = cljs.core.next(arglist__9654);
var y = cljs.core.first(arglist__9654);
arglist__9654 = cljs.core.next(arglist__9654);
var z = cljs.core.first(arglist__9654);
var args = cljs.core.rest(arglist__9654);
return G__9652__delegate(x,y,z,args);
});
G__9652.cljs$core$IFn$_invoke$arity$variadic = G__9652__delegate;
return G__9652;
})()
;
G__9651 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9651__0.call(this);
case 1:
return G__9651__1.call(this,x);
case 2:
return G__9651__2.call(this,x,y);
case 3:
return G__9651__3.call(this,x,y,z);
default:
var G__9655 = null;
if (arguments.length > 3) {
var G__9656__i = 0, G__9656__a = new Array(arguments.length -  3);
while (G__9656__i < G__9656__a.length) {G__9656__a[G__9656__i] = arguments[G__9656__i + 3]; ++G__9656__i;}
G__9655 = new cljs.core.IndexedSeq(G__9656__a,0);
}
return G__9651__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9651.cljs$lang$maxFixedArity = 3;
G__9651.cljs$lang$applyTo = G__9651__4.cljs$lang$applyTo;
G__9651.cljs$core$IFn$_invoke$arity$0 = G__9651__0;
G__9651.cljs$core$IFn$_invoke$arity$1 = G__9651__1;
G__9651.cljs$core$IFn$_invoke$arity$2 = G__9651__2;
G__9651.cljs$core$IFn$_invoke$arity$3 = G__9651__3;
G__9651.cljs$core$IFn$_invoke$arity$variadic = G__9651__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9651;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__9657 = null;
var G__9657__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__9657__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9615 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9615) : f.call(null,G__9615));
})(),(function (){var G__9616 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9616) : g.call(null,G__9616));
})()],null));
});
var G__9657__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9617 = x;
var G__9618 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9617,G__9618) : f.call(null,G__9617,G__9618));
})(),(function (){var G__9619 = x;
var G__9620 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9619,G__9620) : g.call(null,G__9619,G__9620));
})()],null));
});
var G__9657__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9621 = x;
var G__9622 = y;
var G__9623 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9621,G__9622,G__9623) : f.call(null,G__9621,G__9622,G__9623));
})(),(function (){var G__9624 = x;
var G__9625 = y;
var G__9626 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9624,G__9625,G__9626) : g.call(null,G__9624,G__9625,G__9626));
})()],null));
});
var G__9657__4 = (function() { 
var G__9658__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__9658 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9659__i = 0, G__9659__a = new Array(arguments.length -  3);
while (G__9659__i < G__9659__a.length) {G__9659__a[G__9659__i] = arguments[G__9659__i + 3]; ++G__9659__i;}
  args = new cljs.core.IndexedSeq(G__9659__a,0);
} 
return G__9658__delegate.call(this,x,y,z,args);};
G__9658.cljs$lang$maxFixedArity = 3;
G__9658.cljs$lang$applyTo = (function (arglist__9660){
var x = cljs.core.first(arglist__9660);
arglist__9660 = cljs.core.next(arglist__9660);
var y = cljs.core.first(arglist__9660);
arglist__9660 = cljs.core.next(arglist__9660);
var z = cljs.core.first(arglist__9660);
var args = cljs.core.rest(arglist__9660);
return G__9658__delegate(x,y,z,args);
});
G__9658.cljs$core$IFn$_invoke$arity$variadic = G__9658__delegate;
return G__9658;
})()
;
G__9657 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9657__0.call(this);
case 1:
return G__9657__1.call(this,x);
case 2:
return G__9657__2.call(this,x,y);
case 3:
return G__9657__3.call(this,x,y,z);
default:
var G__9661 = null;
if (arguments.length > 3) {
var G__9662__i = 0, G__9662__a = new Array(arguments.length -  3);
while (G__9662__i < G__9662__a.length) {G__9662__a[G__9662__i] = arguments[G__9662__i + 3]; ++G__9662__i;}
G__9661 = new cljs.core.IndexedSeq(G__9662__a,0);
}
return G__9657__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9661);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9657.cljs$lang$maxFixedArity = 3;
G__9657.cljs$lang$applyTo = G__9657__4.cljs$lang$applyTo;
G__9657.cljs$core$IFn$_invoke$arity$0 = G__9657__0;
G__9657.cljs$core$IFn$_invoke$arity$1 = G__9657__1;
G__9657.cljs$core$IFn$_invoke$arity$2 = G__9657__2;
G__9657.cljs$core$IFn$_invoke$arity$3 = G__9657__3;
G__9657.cljs$core$IFn$_invoke$arity$variadic = G__9657__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9657;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__9663 = null;
var G__9663__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__9663__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9627 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9627) : f.call(null,G__9627));
})(),(function (){var G__9628 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9628) : g.call(null,G__9628));
})(),(function (){var G__9629 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9629) : h.call(null,G__9629));
})()],null));
});
var G__9663__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9630 = x;
var G__9631 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9630,G__9631) : f.call(null,G__9630,G__9631));
})(),(function (){var G__9632 = x;
var G__9633 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9632,G__9633) : g.call(null,G__9632,G__9633));
})(),(function (){var G__9634 = x;
var G__9635 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9634,G__9635) : h.call(null,G__9634,G__9635));
})()],null));
});
var G__9663__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9636 = x;
var G__9637 = y;
var G__9638 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9636,G__9637,G__9638) : f.call(null,G__9636,G__9637,G__9638));
})(),(function (){var G__9639 = x;
var G__9640 = y;
var G__9641 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9639,G__9640,G__9641) : g.call(null,G__9639,G__9640,G__9641));
})(),(function (){var G__9642 = x;
var G__9643 = y;
var G__9644 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9642,G__9643,G__9644) : h.call(null,G__9642,G__9643,G__9644));
})()],null));
});
var G__9663__4 = (function() { 
var G__9664__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__9664 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9665__i = 0, G__9665__a = new Array(arguments.length -  3);
while (G__9665__i < G__9665__a.length) {G__9665__a[G__9665__i] = arguments[G__9665__i + 3]; ++G__9665__i;}
  args = new cljs.core.IndexedSeq(G__9665__a,0);
} 
return G__9664__delegate.call(this,x,y,z,args);};
G__9664.cljs$lang$maxFixedArity = 3;
G__9664.cljs$lang$applyTo = (function (arglist__9666){
var x = cljs.core.first(arglist__9666);
arglist__9666 = cljs.core.next(arglist__9666);
var y = cljs.core.first(arglist__9666);
arglist__9666 = cljs.core.next(arglist__9666);
var z = cljs.core.first(arglist__9666);
var args = cljs.core.rest(arglist__9666);
return G__9664__delegate(x,y,z,args);
});
G__9664.cljs$core$IFn$_invoke$arity$variadic = G__9664__delegate;
return G__9664;
})()
;
G__9663 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9663__0.call(this);
case 1:
return G__9663__1.call(this,x);
case 2:
return G__9663__2.call(this,x,y);
case 3:
return G__9663__3.call(this,x,y,z);
default:
var G__9667 = null;
if (arguments.length > 3) {
var G__9668__i = 0, G__9668__a = new Array(arguments.length -  3);
while (G__9668__i < G__9668__a.length) {G__9668__a[G__9668__i] = arguments[G__9668__i + 3]; ++G__9668__i;}
G__9667 = new cljs.core.IndexedSeq(G__9668__a,0);
}
return G__9663__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9667);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9663.cljs$lang$maxFixedArity = 3;
G__9663.cljs$lang$applyTo = G__9663__4.cljs$lang$applyTo;
G__9663.cljs$core$IFn$_invoke$arity$0 = G__9663__0;
G__9663.cljs$core$IFn$_invoke$arity$1 = G__9663__1;
G__9663.cljs$core$IFn$_invoke$arity$2 = G__9663__2;
G__9663.cljs$core$IFn$_invoke$arity$3 = G__9663__3;
G__9663.cljs$core$IFn$_invoke$arity$variadic = G__9663__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9663;
})()
});
var juxt__4 = (function() { 
var G__9669__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__9670 = null;
var G__9670__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9557_SHARP_,p2__9558_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9557_SHARP_,(function (){return (p2__9558_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9558_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9558_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9670__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9559_SHARP_,p2__9560_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9559_SHARP_,(function (){var G__9645 = x;
return (p2__9560_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9560_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9645) : p2__9560_SHARP_.call(null,G__9645));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9670__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9561_SHARP_,p2__9562_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9561_SHARP_,(function (){var G__9646 = x;
var G__9647 = y;
return (p2__9562_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9562_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9646,G__9647) : p2__9562_SHARP_.call(null,G__9646,G__9647));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9670__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9563_SHARP_,p2__9564_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9563_SHARP_,(function (){var G__9648 = x;
var G__9649 = y;
var G__9650 = z;
return (p2__9564_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9564_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9648,G__9649,G__9650) : p2__9564_SHARP_.call(null,G__9648,G__9649,G__9650));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9670__4 = (function() { 
var G__9671__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9565_SHARP_,p2__9566_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9565_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9566_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__9671 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9672__i = 0, G__9672__a = new Array(arguments.length -  3);
while (G__9672__i < G__9672__a.length) {G__9672__a[G__9672__i] = arguments[G__9672__i + 3]; ++G__9672__i;}
  args = new cljs.core.IndexedSeq(G__9672__a,0);
} 
return G__9671__delegate.call(this,x,y,z,args);};
G__9671.cljs$lang$maxFixedArity = 3;
G__9671.cljs$lang$applyTo = (function (arglist__9673){
var x = cljs.core.first(arglist__9673);
arglist__9673 = cljs.core.next(arglist__9673);
var y = cljs.core.first(arglist__9673);
arglist__9673 = cljs.core.next(arglist__9673);
var z = cljs.core.first(arglist__9673);
var args = cljs.core.rest(arglist__9673);
return G__9671__delegate(x,y,z,args);
});
G__9671.cljs$core$IFn$_invoke$arity$variadic = G__9671__delegate;
return G__9671;
})()
;
G__9670 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9670__0.call(this);
case 1:
return G__9670__1.call(this,x);
case 2:
return G__9670__2.call(this,x,y);
case 3:
return G__9670__3.call(this,x,y,z);
default:
var G__9674 = null;
if (arguments.length > 3) {
var G__9675__i = 0, G__9675__a = new Array(arguments.length -  3);
while (G__9675__i < G__9675__a.length) {G__9675__a[G__9675__i] = arguments[G__9675__i + 3]; ++G__9675__i;}
G__9674 = new cljs.core.IndexedSeq(G__9675__a,0);
}
return G__9670__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9674);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9670.cljs$lang$maxFixedArity = 3;
G__9670.cljs$lang$applyTo = G__9670__4.cljs$lang$applyTo;
G__9670.cljs$core$IFn$_invoke$arity$0 = G__9670__0;
G__9670.cljs$core$IFn$_invoke$arity$1 = G__9670__1;
G__9670.cljs$core$IFn$_invoke$arity$2 = G__9670__2;
G__9670.cljs$core$IFn$_invoke$arity$3 = G__9670__3;
G__9670.cljs$core$IFn$_invoke$arity$variadic = G__9670__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9670;
})()
;})(fs__$1))
};
var G__9669 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9676__i = 0, G__9676__a = new Array(arguments.length -  3);
while (G__9676__i < G__9676__a.length) {G__9676__a[G__9676__i] = arguments[G__9676__i + 3]; ++G__9676__i;}
  fs = new cljs.core.IndexedSeq(G__9676__a,0);
} 
return G__9669__delegate.call(this,f,g,h,fs);};
G__9669.cljs$lang$maxFixedArity = 3;
G__9669.cljs$lang$applyTo = (function (arglist__9677){
var f = cljs.core.first(arglist__9677);
arglist__9677 = cljs.core.next(arglist__9677);
var g = cljs.core.first(arglist__9677);
arglist__9677 = cljs.core.next(arglist__9677);
var h = cljs.core.first(arglist__9677);
var fs = cljs.core.rest(arglist__9677);
return G__9669__delegate(f,g,h,fs);
});
G__9669.cljs$core$IFn$_invoke$arity$variadic = G__9669__delegate;
return G__9669;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__9678 = null;
if (arguments.length > 3) {
var G__9679__i = 0, G__9679__a = new Array(arguments.length -  3);
while (G__9679__i < G__9679__a.length) {G__9679__a[G__9679__i] = arguments[G__9679__i + 3]; ++G__9679__i;}
G__9678 = new cljs.core.IndexedSeq(G__9679__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__9678);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__9680 = cljs.core.next(coll);
coll = G__9680;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__9681 = (n - (1));
var G__9682 = cljs.core.next(coll);
n = G__9681;
coll = G__9682;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__9686 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9686,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9686,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9686,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_9694 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__9695_9701 = cljs.core.first(coll);
var G__9696_9702 = writer;
var G__9697_9703 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9695_9701,G__9696_9702,G__9697_9703) : print_one.call(null,G__9695_9701,G__9696_9702,G__9697_9703));
} else {
}

var coll_9704__$1 = cljs.core.next(coll);
var n_9705 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_9704__$1) && (((n_9705 == null)) || (!((n_9705 === (0)))))){
cljs.core._write(writer,sep);

var G__9698_9706 = cljs.core.first(coll_9704__$1);
var G__9699_9707 = writer;
var G__9700_9708 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9698_9706,G__9699_9707,G__9700_9708) : print_one.call(null,G__9698_9706,G__9699_9707,G__9700_9708));

var G__9709 = cljs.core.next(coll_9704__$1);
var G__9710 = (n_9705 - (1));
coll_9704__$1 = G__9709;
n_9705 = G__9710;
continue;
} else {
if((cljs.core.seq(coll_9704__$1)) && ((n_9705 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_9694;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__9715 = cljs.core.seq(ss);
var chunk__9716 = null;
var count__9717 = (0);
var i__9718 = (0);
while(true){
if((i__9718 < count__9717)){
var s = chunk__9716.cljs$core$IIndexed$_nth$arity$2(null,i__9718);
cljs.core._write(writer,s);

var G__9719 = seq__9715;
var G__9720 = chunk__9716;
var G__9721 = count__9717;
var G__9722 = (i__9718 + (1));
seq__9715 = G__9719;
chunk__9716 = G__9720;
count__9717 = G__9721;
i__9718 = G__9722;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9715);
if(temp__4126__auto__){
var seq__9715__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9715__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__9715__$1);
var G__9723 = cljs.core.chunk_rest(seq__9715__$1);
var G__9724 = c__4559__auto__;
var G__9725 = cljs.core.count(c__4559__auto__);
var G__9726 = (0);
seq__9715 = G__9723;
chunk__9716 = G__9724;
count__9717 = G__9725;
i__9718 = G__9726;
continue;
} else {
var s = cljs.core.first(seq__9715__$1);
cljs.core._write(writer,s);

var G__9727 = cljs.core.next(seq__9715__$1);
var G__9728 = null;
var G__9729 = (0);
var G__9730 = (0);
seq__9715 = G__9727;
chunk__9716 = G__9728;
count__9717 = G__9729;
i__9718 = G__9730;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__9731__i = 0, G__9731__a = new Array(arguments.length -  1);
while (G__9731__i < G__9731__a.length) {G__9731__a[G__9731__i] = arguments[G__9731__i + 1]; ++G__9731__i;}
  ss = new cljs.core.IndexedSeq(G__9731__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__9732){
var writer = cljs.core.first(arglist__9732);
var ss = cljs.core.rest(arglist__9732);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj9734 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj9734;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__9737 = "[\\\\\"\b\f\n\r\t]";
var G__9738 = "g";
return RegExp(G__9737,G__9738);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3760__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__9752 = obj;
if(G__9752){
var bit__4453__auto__ = (G__9752.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4453__auto__) || (G__9752.cljs$core$IMeta$)){
return true;
} else {
if((!G__9752.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__9752);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__9752);
}
})();
if(and__3760__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__9753 = obj;
if(G__9753){
var bit__4446__auto__ = (G__9753.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4446__auto__) || (G__9753.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__9754 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__9755 = pr_writer;
var G__9756 = writer;
var G__9757 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__9754,G__9755,G__9756,G__9757) : cljs.core.print_map.call(null,G__9754,G__9755,G__9756,G__9757));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__9758 = obj;
return goog.isString(G__9758);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__9760 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__9760;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__9759 = obj;
if(G__9759){
var bit__4453__auto__ = (G__9759.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4453__auto__) || (G__9759.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__9759.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__9759);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__9759);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__9765 = cljs.core.seq(cljs.core.next(objs));
var chunk__9766 = null;
var count__9767 = (0);
var i__9768 = (0);
while(true){
if((i__9768 < count__9767)){
var obj = chunk__9766.cljs$core$IIndexed$_nth$arity$2(null,i__9768);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__9769 = seq__9765;
var G__9770 = chunk__9766;
var G__9771 = count__9767;
var G__9772 = (i__9768 + (1));
seq__9765 = G__9769;
chunk__9766 = G__9770;
count__9767 = G__9771;
i__9768 = G__9772;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9765);
if(temp__4126__auto__){
var seq__9765__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9765__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__9765__$1);
var G__9773 = cljs.core.chunk_rest(seq__9765__$1);
var G__9774 = c__4559__auto__;
var G__9775 = cljs.core.count(c__4559__auto__);
var G__9776 = (0);
seq__9765 = G__9773;
chunk__9766 = G__9774;
count__9767 = G__9775;
i__9768 = G__9776;
continue;
} else {
var obj = cljs.core.first(seq__9765__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__9777 = cljs.core.next(seq__9765__$1);
var G__9778 = null;
var G__9779 = (0);
var G__9780 = (0);
seq__9765 = G__9777;
chunk__9766 = G__9778;
count__9767 = G__9779;
i__9768 = G__9780;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9781__i = 0, G__9781__a = new Array(arguments.length -  0);
while (G__9781__i < G__9781__a.length) {G__9781__a[G__9781__i] = arguments[G__9781__i + 0]; ++G__9781__i;}
  objs = new cljs.core.IndexedSeq(G__9781__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__9782){
var objs = cljs.core.seq(arglist__9782);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9783__i = 0, G__9783__a = new Array(arguments.length -  0);
while (G__9783__i < G__9783__a.length) {G__9783__a[G__9783__i] = arguments[G__9783__i + 0]; ++G__9783__i;}
  objs = new cljs.core.IndexedSeq(G__9783__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__9784){
var objs = cljs.core.seq(arglist__9784);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9785__i = 0, G__9785__a = new Array(arguments.length -  0);
while (G__9785__i < G__9785__a.length) {G__9785__a[G__9785__i] = arguments[G__9785__i + 0]; ++G__9785__i;}
  objs = new cljs.core.IndexedSeq(G__9785__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__9786){
var objs = cljs.core.seq(arglist__9786);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9787__i = 0, G__9787__a = new Array(arguments.length -  0);
while (G__9787__i < G__9787__a.length) {G__9787__a[G__9787__i] = arguments[G__9787__i + 0]; ++G__9787__i;}
  objs = new cljs.core.IndexedSeq(G__9787__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__9788){
var objs = cljs.core.seq(arglist__9788);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9789__i = 0, G__9789__a = new Array(arguments.length -  0);
while (G__9789__i < G__9789__a.length) {G__9789__a[G__9789__i] = arguments[G__9789__i + 0]; ++G__9789__i;}
  objs = new cljs.core.IndexedSeq(G__9789__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__9790){
var objs = cljs.core.seq(arglist__9790);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9791__i = 0, G__9791__a = new Array(arguments.length -  0);
while (G__9791__i < G__9791__a.length) {G__9791__a[G__9791__i] = arguments[G__9791__i + 0]; ++G__9791__i;}
  objs = new cljs.core.IndexedSeq(G__9791__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__9792){
var objs = cljs.core.seq(arglist__9792);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9793__i = 0, G__9793__a = new Array(arguments.length -  0);
while (G__9793__i < G__9793__a.length) {G__9793__a[G__9793__i] = arguments[G__9793__i + 0]; ++G__9793__i;}
  objs = new cljs.core.IndexedSeq(G__9793__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__9794){
var objs = cljs.core.seq(arglist__9794);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9795__i = 0, G__9795__a = new Array(arguments.length -  0);
while (G__9795__i < G__9795__a.length) {G__9795__a[G__9795__i] = arguments[G__9795__i + 0]; ++G__9795__i;}
  objs = new cljs.core.IndexedSeq(G__9795__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__9796){
var objs = cljs.core.seq(arglist__9796);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__9803_9809 = cljs.core.key(e);
var G__9804_9810 = w;
var G__9805_9811 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9803_9809,G__9804_9810,G__9805_9811) : print_one.call(null,G__9803_9809,G__9804_9810,G__9805_9811));

cljs.core._write(w," ");

var G__9806 = cljs.core.val(e);
var G__9807 = w;
var G__9808 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9806,G__9807,G__9808) : print_one.call(null,G__9806,G__9807,G__9808));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__9812__i = 0, G__9812__a = new Array(arguments.length -  2);
while (G__9812__i < G__9812__a.length) {G__9812__a[G__9812__i] = arguments[G__9812__i + 2]; ++G__9812__i;}
  args = new cljs.core.IndexedSeq(G__9812__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__9813){
var iref = cljs.core.first(arglist__9813);
arglist__9813 = cljs.core.next(arglist__9813);
var f = cljs.core.first(arglist__9813);
var args = cljs.core.rest(arglist__9813);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__9816 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9816) : cljs.core.atom.call(null,G__9816));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__9818 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9818) : cljs.core.deref.call(null,G__9818));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__9819_SHARP_,p2__9820_SHARP_){
var ret = (function (){var G__9823 = p1__9819_SHARP_;
var G__9824 = p2__9820_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9823,G__9824) : rf.call(null,G__9823,G__9824));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__9827 = null;
var G__9827__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9827__1 = (function (result){
var G__9826 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9826) : rf.call(null,G__9826));
});
var G__9827__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__9827 = function(result,input){
switch(arguments.length){
case 0:
return G__9827__0.call(this);
case 1:
return G__9827__1.call(this,result);
case 2:
return G__9827__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9827.cljs$core$IFn$_invoke$arity$0 = G__9827__0;
G__9827.cljs$core$IFn$_invoke$arity$1 = G__9827__1;
G__9827.cljs$core$IFn$_invoke$arity$2 = G__9827__2;
return G__9827;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__9836 = null;
var G__9836__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9836__1 = (function (result){
var G__9832 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9832) : rf.call(null,G__9832));
});
var G__9836__2 = (function (result,input){
var prior = (function (){var G__9833 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9833) : cljs.core.deref.call(null,G__9833));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__9834 = result;
var G__9835 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9834,G__9835) : rf.call(null,G__9834,G__9835));
}
});
G__9836 = function(result,input){
switch(arguments.length){
case 0:
return G__9836__0.call(this);
case 1:
return G__9836__1.call(this,result);
case 2:
return G__9836__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9836.cljs$core$IFn$_invoke$arity$0 = G__9836__0;
G__9836.cljs$core$IFn$_invoke$arity$1 = G__9836__1;
G__9836.cljs$core$IFn$_invoke$arity$2 = G__9836__2;
return G__9836;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9838_SHARP_,p2__9837_SHARP_){
var G__9840 = p2__9837_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__9840) : proc.call(null,G__9840));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj9842 = {};
return obj9842;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._clj__GT_js[(function (){var G__9846 = x__4416__auto__;
return goog.typeOf(G__9846);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._key__GT_js[(function (){var G__9850 = x__4416__auto__;
return goog.typeOf(G__9850);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__9853 = k;
if(G__9853){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__9853.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__9853.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9853);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9853);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__9854 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__9854) : cljs.core.clj__GT_js.call(null,G__9854));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__9870 = x;
if(G__9870){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__9870.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__9870.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9870);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9870);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj9872 = {};
return obj9872;
})();
var seq__9873_9883 = cljs.core.seq(x);
var chunk__9874_9884 = null;
var count__9875_9885 = (0);
var i__9876_9886 = (0);
while(true){
if((i__9876_9886 < count__9875_9885)){
var vec__9877_9887 = chunk__9874_9884.cljs$core$IIndexed$_nth$arity$2(null,i__9876_9886);
var k_9888 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9877_9887,(0),null);
var v_9889 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9877_9887,(1),null);
(m[cljs.core.key__GT_js(k_9888)] = clj__GT_js(v_9889));

var G__9890 = seq__9873_9883;
var G__9891 = chunk__9874_9884;
var G__9892 = count__9875_9885;
var G__9893 = (i__9876_9886 + (1));
seq__9873_9883 = G__9890;
chunk__9874_9884 = G__9891;
count__9875_9885 = G__9892;
i__9876_9886 = G__9893;
continue;
} else {
var temp__4126__auto___9894 = cljs.core.seq(seq__9873_9883);
if(temp__4126__auto___9894){
var seq__9873_9895__$1 = temp__4126__auto___9894;
if(cljs.core.chunked_seq_QMARK_(seq__9873_9895__$1)){
var c__4559__auto___9896 = cljs.core.chunk_first(seq__9873_9895__$1);
var G__9897 = cljs.core.chunk_rest(seq__9873_9895__$1);
var G__9898 = c__4559__auto___9896;
var G__9899 = cljs.core.count(c__4559__auto___9896);
var G__9900 = (0);
seq__9873_9883 = G__9897;
chunk__9874_9884 = G__9898;
count__9875_9885 = G__9899;
i__9876_9886 = G__9900;
continue;
} else {
var vec__9878_9901 = cljs.core.first(seq__9873_9895__$1);
var k_9902 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9878_9901,(0),null);
var v_9903 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9878_9901,(1),null);
(m[cljs.core.key__GT_js(k_9902)] = clj__GT_js(v_9903));

var G__9904 = cljs.core.next(seq__9873_9895__$1);
var G__9905 = null;
var G__9906 = (0);
var G__9907 = (0);
seq__9873_9883 = G__9904;
chunk__9874_9884 = G__9905;
count__9875_9885 = G__9906;
i__9876_9886 = G__9907;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__9879_9908 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__9880_9909 = null;
var count__9881_9910 = (0);
var i__9882_9911 = (0);
while(true){
if((i__9882_9911 < count__9881_9910)){
var x_9912__$1 = chunk__9880_9909.cljs$core$IIndexed$_nth$arity$2(null,i__9882_9911);
arr.push(x_9912__$1);

var G__9913 = seq__9879_9908;
var G__9914 = chunk__9880_9909;
var G__9915 = count__9881_9910;
var G__9916 = (i__9882_9911 + (1));
seq__9879_9908 = G__9913;
chunk__9880_9909 = G__9914;
count__9881_9910 = G__9915;
i__9882_9911 = G__9916;
continue;
} else {
var temp__4126__auto___9917 = cljs.core.seq(seq__9879_9908);
if(temp__4126__auto___9917){
var seq__9879_9918__$1 = temp__4126__auto___9917;
if(cljs.core.chunked_seq_QMARK_(seq__9879_9918__$1)){
var c__4559__auto___9919 = cljs.core.chunk_first(seq__9879_9918__$1);
var G__9920 = cljs.core.chunk_rest(seq__9879_9918__$1);
var G__9921 = c__4559__auto___9919;
var G__9922 = cljs.core.count(c__4559__auto___9919);
var G__9923 = (0);
seq__9879_9908 = G__9920;
chunk__9880_9909 = G__9921;
count__9881_9910 = G__9922;
i__9882_9911 = G__9923;
continue;
} else {
var x_9924__$1 = cljs.core.first(seq__9879_9918__$1);
arr.push(x_9924__$1);

var G__9925 = cljs.core.next(seq__9879_9918__$1);
var G__9926 = null;
var G__9927 = (0);
var G__9928 = (0);
seq__9879_9908 = G__9925;
chunk__9880_9909 = G__9926;
count__9881_9910 = G__9927;
i__9882_9911 = G__9928;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj9930 = {};
return obj9930;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._js__GT_clj[(function (){var G__9934 = x__4416__auto__;
return goog.typeOf(G__9934);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__9991__delegate = function (x,opts){
var map__9964 = opts;
var map__9964__$1 = ((cljs.core.seq_QMARK_(map__9964))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9964):map__9964);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9964__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__9964,map__9964__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__9980 = x__$1;
if(G__9980){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__9980.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__9980.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__9980);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__9980);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4528__auto__ = ((function (map__9964,map__9964__$1,keywordize_keys,keyfn){
return (function iter__9981(s__9982){
return (new cljs.core.LazySeq(null,((function (map__9964,map__9964__$1,keywordize_keys,keyfn){
return (function (){
var s__9982__$1 = s__9982;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__9982__$1);
if(temp__4126__auto__){
var s__9982__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__9982__$2)){
var c__4526__auto__ = cljs.core.chunk_first(s__9982__$2);
var size__4527__auto__ = cljs.core.count(c__4526__auto__);
var b__9984 = cljs.core.chunk_buffer(size__4527__auto__);
if((function (){var i__9983 = (0);
while(true){
if((i__9983 < size__4527__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4526__auto__,i__9983);
cljs.core.chunk_append(b__9984,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__9989 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9989) : keyfn.call(null,G__9989));
})(),thisfn((x__$1[k]))], null));

var G__9992 = (i__9983 + (1));
i__9983 = G__9992;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__9984),iter__9981(cljs.core.chunk_rest(s__9982__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__9984),null);
}
} else {
var k = cljs.core.first(s__9982__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__9990 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9990) : keyfn.call(null,G__9990));
})(),thisfn((x__$1[k]))], null),iter__9981(cljs.core.rest(s__9982__$2)));
}
} else {
return null;
}
break;
}
});})(map__9964,map__9964__$1,keywordize_keys,keyfn))
,null,null));
});})(map__9964,map__9964__$1,keywordize_keys,keyfn))
;
return iter__4528__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__9964,map__9964__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__9991 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__9993__i = 0, G__9993__a = new Array(arguments.length -  1);
while (G__9993__i < G__9993__a.length) {G__9993__a[G__9993__i] = arguments[G__9993__i + 1]; ++G__9993__i;}
  opts = new cljs.core.IndexedSeq(G__9993__a,0);
} 
return G__9991__delegate.call(this,x,opts);};
G__9991.cljs$lang$maxFixedArity = 1;
G__9991.cljs$lang$applyTo = (function (arglist__9994){
var x = cljs.core.first(arglist__9994);
var opts = cljs.core.rest(arglist__9994);
return G__9991__delegate(x,opts);
});
G__9991.cljs$core$IFn$_invoke$arity$variadic = G__9991__delegate;
return G__9991;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__9995 = null;
if (arguments.length > 1) {
var G__9996__i = 0, G__9996__a = new Array(arguments.length -  1);
while (G__9996__i < G__9996__a.length) {G__9996__a[G__9996__i] = arguments[G__9996__i + 1]; ++G__9996__i;}
G__9995 = new cljs.core.IndexedSeq(G__9996__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__9999 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9999) : cljs.core.atom.call(null,G__9999));
})();
return ((function (mem){
return (function() { 
var G__10001__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__10000 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10000) : cljs.core.deref.call(null,G__10000));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__10001 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10002__i = 0, G__10002__a = new Array(arguments.length -  0);
while (G__10002__i < G__10002__a.length) {G__10002__a[G__10002__i] = arguments[G__10002__i + 0]; ++G__10002__i;}
  args = new cljs.core.IndexedSeq(G__10002__a,0);
} 
return G__10001__delegate.call(this,args);};
G__10001.cljs$lang$maxFixedArity = 0;
G__10001.cljs$lang$applyTo = (function (arglist__10003){
var args = cljs.core.seq(arglist__10003);
return G__10001__delegate(args);
});
G__10001.cljs$core$IFn$_invoke$arity$variadic = G__10001__delegate;
return G__10001;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__10005 = ret;
f = G__10005;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__10006__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__10006 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10007__i = 0, G__10007__a = new Array(arguments.length -  1);
while (G__10007__i < G__10007__a.length) {G__10007__a[G__10007__i] = arguments[G__10007__i + 1]; ++G__10007__i;}
  args = new cljs.core.IndexedSeq(G__10007__a,0);
} 
return G__10006__delegate.call(this,f,args);};
G__10006.cljs$lang$maxFixedArity = 1;
G__10006.cljs$lang$applyTo = (function (arglist__10008){
var f = cljs.core.first(arglist__10008);
var args = cljs.core.rest(arglist__10008);
return G__10006__delegate(f,args);
});
G__10006.cljs$core$IFn$_invoke$arity$variadic = G__10006__delegate;
return G__10006;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__10009 = null;
if (arguments.length > 1) {
var G__10010__i = 0, G__10010__a = new Array(arguments.length -  1);
while (G__10010__i < G__10010__a.length) {G__10010__a[G__10010__i] = arguments[G__10010__i + 1]; ++G__10010__i;}
G__10009 = new cljs.core.IndexedSeq(G__10010__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10009);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__10013 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10013) : Math.floor.call(null,G__10013));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__10015 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10015) : f.call(null,G__10015));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__10017 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10017) : cljs.core.atom.call(null,G__10017));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10018__i = 0, G__10018__a = new Array(arguments.length -  1);
while (G__10018__i < G__10018__a.length) {G__10018__a[G__10018__i] = arguments[G__10018__i + 1]; ++G__10018__i;}
  args = new cljs.core.IndexedSeq(G__10018__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__10019){
var f = cljs.core.first(arglist__10019);
var args = cljs.core.rest(arglist__10019);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10084 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10084) : cljs.core.deref.call(null,G__10084));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3772__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
var and__3760__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3760__auto__){
var and__3760__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3760__auto____$1){
var and__3760__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3760__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__10109 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__10107 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10107) : child.call(null,G__10107));
})(),(function (){var G__10108 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10108) : parent.call(null,G__10108));
})());
var G__10110 = (i + (1));
ret = G__10109;
i = G__10110;
continue;
}
break;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__10114 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10114) : cljs.core.deref.call(null,G__10114));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__10118 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10118) : cljs.core.deref.call(null,G__10118));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__10122 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10122) : cljs.core.deref.call(null,G__10122));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__10131 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10131) : targets.call(null,G__10131));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__10132 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10132) : sources.call(null,G__10132));
})()));
});})(tp,td,ta))
;
var or__3772__auto__ = ((cljs.core.contains_QMARK_((function (){var G__10136 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10136) : tp.call(null,G__10136));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__10137 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10137) : ta.call(null,G__10137));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__10138 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10138) : ta.call(null,G__10138));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__10145 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10145) : parentMap.call(null,G__10145));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__10146 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10146) : parentMap.call(null,G__10146));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__10139_SHARP_){
return cljs.core.cons(cljs.core.first(p1__10139_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10139_SHARP_),cljs.core.second(p1__10139_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__10147 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10147) : parentMap.call(null,G__10147));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__10140_SHARP_,p2__10141_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__10140_SHARP_,p2__10141_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__10150 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10150) : cljs.core.deref.call(null,G__10150));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__10151 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10151) : cljs.core.deref.call(null,G__10151));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__10167 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10167) : cljs.core.deref.call(null,G__10167));
})().call(null,x);
var or__3772__auto__ = (cljs.core.truth_((function (){var and__3760__auto__ = xprefs;
if(cljs.core.truth_(and__3760__auto__)){
var G__10169 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10169) : xprefs.call(null,G__10169));
} else {
return and__3760__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__10170 = cljs.core.rest(ps);
ps = G__10170;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__10171 = cljs.core.rest(ps);
ps = G__10171;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3772__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__10185){
var vec__10186 = p__10185;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10186,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10186,(1),null);
var e = vec__10186;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10187 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10187) : cljs.core.deref.call(null,G__10187));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3772__auto__ = (be == null);
if(or__3772__auto__){
return or__3772__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__10188 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10188) : cljs.core.deref.call(null,G__10188));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10189 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10189) : cljs.core.deref.call(null,G__10189));
})(),(function (){var G__10190 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10190) : cljs.core.deref.call(null,G__10190));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj10192 = {};
return obj10192;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._reset[(function (){var G__10196 = x__4416__auto__;
return goog.typeOf(G__10196);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reset["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._add_method[(function (){var G__10200 = x__4416__auto__;
return goog.typeOf(G__10200);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._add_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._remove_method[(function (){var G__10204 = x__4416__auto__;
return goog.typeOf(G__10204);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._prefer_method[(function (){var G__10208 = x__4416__auto__;
return goog.typeOf(G__10208);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._get_method[(function (){var G__10212 = x__4416__auto__;
return goog.typeOf(G__10212);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._get_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._methods[(function (){var G__10216 = x__4416__auto__;
return goog.typeOf(G__10216);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._methods["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._prefers[(function (){var G__10220 = x__4416__auto__;
return goog.typeOf(G__10220);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._prefers["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10222 = this$__$1;
return goog.getUid(G__10222);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10223 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10223) : cljs.core.deref.call(null,G__10223));
})(),(function (){var G__10224 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10224) : cljs.core.deref.call(null,G__10224));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__10225 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10225) : cljs.core.deref.call(null,G__10225));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__10226 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10226) : cljs.core.deref.call(null,G__10226));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10227 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10227) : cljs.core.deref.call(null,G__10227));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10228 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10228) : cljs.core.deref.call(null,G__10228));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__11069 = null;
var G__11069__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__11069__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10229 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10229) : self__.dispatch_fn.call(null,G__10229));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10230 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10230) : target_fn.call(null,G__10230));
});
var G__11069__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10231 = a;
var G__10232 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10231,G__10232) : self__.dispatch_fn.call(null,G__10231,G__10232));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10233 = a;
var G__10234 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10233,G__10234) : target_fn.call(null,G__10233,G__10234));
});
var G__11069__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10235 = a;
var G__10236 = b;
var G__10237 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10235,G__10236,G__10237) : self__.dispatch_fn.call(null,G__10235,G__10236,G__10237));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10238 = a;
var G__10239 = b;
var G__10240 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10238,G__10239,G__10240) : target_fn.call(null,G__10238,G__10239,G__10240));
});
var G__11069__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10241 = a;
var G__10242 = b;
var G__10243 = c;
var G__10244 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10241,G__10242,G__10243,G__10244) : self__.dispatch_fn.call(null,G__10241,G__10242,G__10243,G__10244));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10245 = a;
var G__10246 = b;
var G__10247 = c;
var G__10248 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10245,G__10246,G__10247,G__10248) : target_fn.call(null,G__10245,G__10246,G__10247,G__10248));
});
var G__11069__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10249 = a;
var G__10250 = b;
var G__10251 = c;
var G__10252 = d;
var G__10253 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10249,G__10250,G__10251,G__10252,G__10253) : self__.dispatch_fn.call(null,G__10249,G__10250,G__10251,G__10252,G__10253));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10254 = a;
var G__10255 = b;
var G__10256 = c;
var G__10257 = d;
var G__10258 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10254,G__10255,G__10256,G__10257,G__10258) : target_fn.call(null,G__10254,G__10255,G__10256,G__10257,G__10258));
});
var G__11069__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10259 = a;
var G__10260 = b;
var G__10261 = c;
var G__10262 = d;
var G__10263 = e;
var G__10264 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10259,G__10260,G__10261,G__10262,G__10263,G__10264) : self__.dispatch_fn.call(null,G__10259,G__10260,G__10261,G__10262,G__10263,G__10264));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10265 = a;
var G__10266 = b;
var G__10267 = c;
var G__10268 = d;
var G__10269 = e;
var G__10270 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10265,G__10266,G__10267,G__10268,G__10269,G__10270) : target_fn.call(null,G__10265,G__10266,G__10267,G__10268,G__10269,G__10270));
});
var G__11069__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10271 = a;
var G__10272 = b;
var G__10273 = c;
var G__10274 = d;
var G__10275 = e;
var G__10276 = f;
var G__10277 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10271,G__10272,G__10273,G__10274,G__10275,G__10276,G__10277) : self__.dispatch_fn.call(null,G__10271,G__10272,G__10273,G__10274,G__10275,G__10276,G__10277));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10278 = a;
var G__10279 = b;
var G__10280 = c;
var G__10281 = d;
var G__10282 = e;
var G__10283 = f;
var G__10284 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10278,G__10279,G__10280,G__10281,G__10282,G__10283,G__10284) : target_fn.call(null,G__10278,G__10279,G__10280,G__10281,G__10282,G__10283,G__10284));
});
var G__11069__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10285 = a;
var G__10286 = b;
var G__10287 = c;
var G__10288 = d;
var G__10289 = e;
var G__10290 = f;
var G__10291 = g;
var G__10292 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10285,G__10286,G__10287,G__10288,G__10289,G__10290,G__10291,G__10292) : self__.dispatch_fn.call(null,G__10285,G__10286,G__10287,G__10288,G__10289,G__10290,G__10291,G__10292));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10293 = a;
var G__10294 = b;
var G__10295 = c;
var G__10296 = d;
var G__10297 = e;
var G__10298 = f;
var G__10299 = g;
var G__10300 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10293,G__10294,G__10295,G__10296,G__10297,G__10298,G__10299,G__10300) : target_fn.call(null,G__10293,G__10294,G__10295,G__10296,G__10297,G__10298,G__10299,G__10300));
});
var G__11069__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10301 = a;
var G__10302 = b;
var G__10303 = c;
var G__10304 = d;
var G__10305 = e;
var G__10306 = f;
var G__10307 = g;
var G__10308 = h;
var G__10309 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10301,G__10302,G__10303,G__10304,G__10305,G__10306,G__10307,G__10308,G__10309) : self__.dispatch_fn.call(null,G__10301,G__10302,G__10303,G__10304,G__10305,G__10306,G__10307,G__10308,G__10309));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10310 = a;
var G__10311 = b;
var G__10312 = c;
var G__10313 = d;
var G__10314 = e;
var G__10315 = f;
var G__10316 = g;
var G__10317 = h;
var G__10318 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10310,G__10311,G__10312,G__10313,G__10314,G__10315,G__10316,G__10317,G__10318) : target_fn.call(null,G__10310,G__10311,G__10312,G__10313,G__10314,G__10315,G__10316,G__10317,G__10318));
});
var G__11069__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10319 = a;
var G__10320 = b;
var G__10321 = c;
var G__10322 = d;
var G__10323 = e;
var G__10324 = f;
var G__10325 = g;
var G__10326 = h;
var G__10327 = i;
var G__10328 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10319,G__10320,G__10321,G__10322,G__10323,G__10324,G__10325,G__10326,G__10327,G__10328) : self__.dispatch_fn.call(null,G__10319,G__10320,G__10321,G__10322,G__10323,G__10324,G__10325,G__10326,G__10327,G__10328));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10329 = a;
var G__10330 = b;
var G__10331 = c;
var G__10332 = d;
var G__10333 = e;
var G__10334 = f;
var G__10335 = g;
var G__10336 = h;
var G__10337 = i;
var G__10338 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10329,G__10330,G__10331,G__10332,G__10333,G__10334,G__10335,G__10336,G__10337,G__10338) : target_fn.call(null,G__10329,G__10330,G__10331,G__10332,G__10333,G__10334,G__10335,G__10336,G__10337,G__10338));
});
var G__11069__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10339 = a;
var G__10340 = b;
var G__10341 = c;
var G__10342 = d;
var G__10343 = e;
var G__10344 = f;
var G__10345 = g;
var G__10346 = h;
var G__10347 = i;
var G__10348 = j;
var G__10349 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10339,G__10340,G__10341,G__10342,G__10343,G__10344,G__10345,G__10346,G__10347,G__10348,G__10349) : self__.dispatch_fn.call(null,G__10339,G__10340,G__10341,G__10342,G__10343,G__10344,G__10345,G__10346,G__10347,G__10348,G__10349));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10350 = a;
var G__10351 = b;
var G__10352 = c;
var G__10353 = d;
var G__10354 = e;
var G__10355 = f;
var G__10356 = g;
var G__10357 = h;
var G__10358 = i;
var G__10359 = j;
var G__10360 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10350,G__10351,G__10352,G__10353,G__10354,G__10355,G__10356,G__10357,G__10358,G__10359,G__10360) : target_fn.call(null,G__10350,G__10351,G__10352,G__10353,G__10354,G__10355,G__10356,G__10357,G__10358,G__10359,G__10360));
});
var G__11069__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10361 = a;
var G__10362 = b;
var G__10363 = c;
var G__10364 = d;
var G__10365 = e;
var G__10366 = f;
var G__10367 = g;
var G__10368 = h;
var G__10369 = i;
var G__10370 = j;
var G__10371 = k;
var G__10372 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10361,G__10362,G__10363,G__10364,G__10365,G__10366,G__10367,G__10368,G__10369,G__10370,G__10371,G__10372) : self__.dispatch_fn.call(null,G__10361,G__10362,G__10363,G__10364,G__10365,G__10366,G__10367,G__10368,G__10369,G__10370,G__10371,G__10372));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10373 = a;
var G__10374 = b;
var G__10375 = c;
var G__10376 = d;
var G__10377 = e;
var G__10378 = f;
var G__10379 = g;
var G__10380 = h;
var G__10381 = i;
var G__10382 = j;
var G__10383 = k;
var G__10384 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10373,G__10374,G__10375,G__10376,G__10377,G__10378,G__10379,G__10380,G__10381,G__10382,G__10383,G__10384) : target_fn.call(null,G__10373,G__10374,G__10375,G__10376,G__10377,G__10378,G__10379,G__10380,G__10381,G__10382,G__10383,G__10384));
});
var G__11069__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10385 = a;
var G__10386 = b;
var G__10387 = c;
var G__10388 = d;
var G__10389 = e;
var G__10390 = f;
var G__10391 = g;
var G__10392 = h;
var G__10393 = i;
var G__10394 = j;
var G__10395 = k;
var G__10396 = l;
var G__10397 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10385,G__10386,G__10387,G__10388,G__10389,G__10390,G__10391,G__10392,G__10393,G__10394,G__10395,G__10396,G__10397) : self__.dispatch_fn.call(null,G__10385,G__10386,G__10387,G__10388,G__10389,G__10390,G__10391,G__10392,G__10393,G__10394,G__10395,G__10396,G__10397));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10398 = a;
var G__10399 = b;
var G__10400 = c;
var G__10401 = d;
var G__10402 = e;
var G__10403 = f;
var G__10404 = g;
var G__10405 = h;
var G__10406 = i;
var G__10407 = j;
var G__10408 = k;
var G__10409 = l;
var G__10410 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10398,G__10399,G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406,G__10407,G__10408,G__10409,G__10410) : target_fn.call(null,G__10398,G__10399,G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406,G__10407,G__10408,G__10409,G__10410));
});
var G__11069__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10411 = a;
var G__10412 = b;
var G__10413 = c;
var G__10414 = d;
var G__10415 = e;
var G__10416 = f;
var G__10417 = g;
var G__10418 = h;
var G__10419 = i;
var G__10420 = j;
var G__10421 = k;
var G__10422 = l;
var G__10423 = m;
var G__10424 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10411,G__10412,G__10413,G__10414,G__10415,G__10416,G__10417,G__10418,G__10419,G__10420,G__10421,G__10422,G__10423,G__10424) : self__.dispatch_fn.call(null,G__10411,G__10412,G__10413,G__10414,G__10415,G__10416,G__10417,G__10418,G__10419,G__10420,G__10421,G__10422,G__10423,G__10424));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10425 = a;
var G__10426 = b;
var G__10427 = c;
var G__10428 = d;
var G__10429 = e;
var G__10430 = f;
var G__10431 = g;
var G__10432 = h;
var G__10433 = i;
var G__10434 = j;
var G__10435 = k;
var G__10436 = l;
var G__10437 = m;
var G__10438 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10425,G__10426,G__10427,G__10428,G__10429,G__10430,G__10431,G__10432,G__10433,G__10434,G__10435,G__10436,G__10437,G__10438) : target_fn.call(null,G__10425,G__10426,G__10427,G__10428,G__10429,G__10430,G__10431,G__10432,G__10433,G__10434,G__10435,G__10436,G__10437,G__10438));
});
var G__11069__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10439 = a;
var G__10440 = b;
var G__10441 = c;
var G__10442 = d;
var G__10443 = e;
var G__10444 = f;
var G__10445 = g;
var G__10446 = h;
var G__10447 = i;
var G__10448 = j;
var G__10449 = k;
var G__10450 = l;
var G__10451 = m;
var G__10452 = n;
var G__10453 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10439,G__10440,G__10441,G__10442,G__10443,G__10444,G__10445,G__10446,G__10447,G__10448,G__10449,G__10450,G__10451,G__10452,G__10453) : self__.dispatch_fn.call(null,G__10439,G__10440,G__10441,G__10442,G__10443,G__10444,G__10445,G__10446,G__10447,G__10448,G__10449,G__10450,G__10451,G__10452,G__10453));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10454 = a;
var G__10455 = b;
var G__10456 = c;
var G__10457 = d;
var G__10458 = e;
var G__10459 = f;
var G__10460 = g;
var G__10461 = h;
var G__10462 = i;
var G__10463 = j;
var G__10464 = k;
var G__10465 = l;
var G__10466 = m;
var G__10467 = n;
var G__10468 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10454,G__10455,G__10456,G__10457,G__10458,G__10459,G__10460,G__10461,G__10462,G__10463,G__10464,G__10465,G__10466,G__10467,G__10468) : target_fn.call(null,G__10454,G__10455,G__10456,G__10457,G__10458,G__10459,G__10460,G__10461,G__10462,G__10463,G__10464,G__10465,G__10466,G__10467,G__10468));
});
var G__11069__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10469 = a;
var G__10470 = b;
var G__10471 = c;
var G__10472 = d;
var G__10473 = e;
var G__10474 = f;
var G__10475 = g;
var G__10476 = h;
var G__10477 = i;
var G__10478 = j;
var G__10479 = k;
var G__10480 = l;
var G__10481 = m;
var G__10482 = n;
var G__10483 = o;
var G__10484 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10469,G__10470,G__10471,G__10472,G__10473,G__10474,G__10475,G__10476,G__10477,G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484) : self__.dispatch_fn.call(null,G__10469,G__10470,G__10471,G__10472,G__10473,G__10474,G__10475,G__10476,G__10477,G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10485 = a;
var G__10486 = b;
var G__10487 = c;
var G__10488 = d;
var G__10489 = e;
var G__10490 = f;
var G__10491 = g;
var G__10492 = h;
var G__10493 = i;
var G__10494 = j;
var G__10495 = k;
var G__10496 = l;
var G__10497 = m;
var G__10498 = n;
var G__10499 = o;
var G__10500 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10485,G__10486,G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498,G__10499,G__10500) : target_fn.call(null,G__10485,G__10486,G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498,G__10499,G__10500));
});
var G__11069__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10501 = a;
var G__10502 = b;
var G__10503 = c;
var G__10504 = d;
var G__10505 = e;
var G__10506 = f;
var G__10507 = g;
var G__10508 = h;
var G__10509 = i;
var G__10510 = j;
var G__10511 = k;
var G__10512 = l;
var G__10513 = m;
var G__10514 = n;
var G__10515 = o;
var G__10516 = p;
var G__10517 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507,G__10508,G__10509,G__10510,G__10511,G__10512,G__10513,G__10514,G__10515,G__10516,G__10517) : self__.dispatch_fn.call(null,G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507,G__10508,G__10509,G__10510,G__10511,G__10512,G__10513,G__10514,G__10515,G__10516,G__10517));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10518 = a;
var G__10519 = b;
var G__10520 = c;
var G__10521 = d;
var G__10522 = e;
var G__10523 = f;
var G__10524 = g;
var G__10525 = h;
var G__10526 = i;
var G__10527 = j;
var G__10528 = k;
var G__10529 = l;
var G__10530 = m;
var G__10531 = n;
var G__10532 = o;
var G__10533 = p;
var G__10534 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10518,G__10519,G__10520,G__10521,G__10522,G__10523,G__10524,G__10525,G__10526,G__10527,G__10528,G__10529,G__10530,G__10531,G__10532,G__10533,G__10534) : target_fn.call(null,G__10518,G__10519,G__10520,G__10521,G__10522,G__10523,G__10524,G__10525,G__10526,G__10527,G__10528,G__10529,G__10530,G__10531,G__10532,G__10533,G__10534));
});
var G__11069__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10535 = a;
var G__10536 = b;
var G__10537 = c;
var G__10538 = d;
var G__10539 = e;
var G__10540 = f;
var G__10541 = g;
var G__10542 = h;
var G__10543 = i;
var G__10544 = j;
var G__10545 = k;
var G__10546 = l;
var G__10547 = m;
var G__10548 = n;
var G__10549 = o;
var G__10550 = p;
var G__10551 = q;
var G__10552 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10535,G__10536,G__10537,G__10538,G__10539,G__10540,G__10541,G__10542,G__10543,G__10544,G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552) : self__.dispatch_fn.call(null,G__10535,G__10536,G__10537,G__10538,G__10539,G__10540,G__10541,G__10542,G__10543,G__10544,G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10553 = a;
var G__10554 = b;
var G__10555 = c;
var G__10556 = d;
var G__10557 = e;
var G__10558 = f;
var G__10559 = g;
var G__10560 = h;
var G__10561 = i;
var G__10562 = j;
var G__10563 = k;
var G__10564 = l;
var G__10565 = m;
var G__10566 = n;
var G__10567 = o;
var G__10568 = p;
var G__10569 = q;
var G__10570 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10553,G__10554,G__10555,G__10556,G__10557,G__10558,G__10559,G__10560,G__10561,G__10562,G__10563,G__10564,G__10565,G__10566,G__10567,G__10568,G__10569,G__10570) : target_fn.call(null,G__10553,G__10554,G__10555,G__10556,G__10557,G__10558,G__10559,G__10560,G__10561,G__10562,G__10563,G__10564,G__10565,G__10566,G__10567,G__10568,G__10569,G__10570));
});
var G__11069__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10571 = a;
var G__10572 = b;
var G__10573 = c;
var G__10574 = d;
var G__10575 = e;
var G__10576 = f;
var G__10577 = g;
var G__10578 = h;
var G__10579 = i;
var G__10580 = j;
var G__10581 = k;
var G__10582 = l;
var G__10583 = m;
var G__10584 = n;
var G__10585 = o;
var G__10586 = p;
var G__10587 = q;
var G__10588 = r;
var G__10589 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10571,G__10572,G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581,G__10582,G__10583,G__10584,G__10585,G__10586,G__10587,G__10588,G__10589) : self__.dispatch_fn.call(null,G__10571,G__10572,G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581,G__10582,G__10583,G__10584,G__10585,G__10586,G__10587,G__10588,G__10589));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10590 = a;
var G__10591 = b;
var G__10592 = c;
var G__10593 = d;
var G__10594 = e;
var G__10595 = f;
var G__10596 = g;
var G__10597 = h;
var G__10598 = i;
var G__10599 = j;
var G__10600 = k;
var G__10601 = l;
var G__10602 = m;
var G__10603 = n;
var G__10604 = o;
var G__10605 = p;
var G__10606 = q;
var G__10607 = r;
var G__10608 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10590,G__10591,G__10592,G__10593,G__10594,G__10595,G__10596,G__10597,G__10598,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605,G__10606,G__10607,G__10608) : target_fn.call(null,G__10590,G__10591,G__10592,G__10593,G__10594,G__10595,G__10596,G__10597,G__10598,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605,G__10606,G__10607,G__10608));
});
var G__11069__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10609 = a;
var G__10610 = b;
var G__10611 = c;
var G__10612 = d;
var G__10613 = e;
var G__10614 = f;
var G__10615 = g;
var G__10616 = h;
var G__10617 = i;
var G__10618 = j;
var G__10619 = k;
var G__10620 = l;
var G__10621 = m;
var G__10622 = n;
var G__10623 = o;
var G__10624 = p;
var G__10625 = q;
var G__10626 = r;
var G__10627 = s;
var G__10628 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10609,G__10610,G__10611,G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619,G__10620,G__10621,G__10622,G__10623,G__10624,G__10625,G__10626,G__10627,G__10628) : self__.dispatch_fn.call(null,G__10609,G__10610,G__10611,G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619,G__10620,G__10621,G__10622,G__10623,G__10624,G__10625,G__10626,G__10627,G__10628));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10629 = a;
var G__10630 = b;
var G__10631 = c;
var G__10632 = d;
var G__10633 = e;
var G__10634 = f;
var G__10635 = g;
var G__10636 = h;
var G__10637 = i;
var G__10638 = j;
var G__10639 = k;
var G__10640 = l;
var G__10641 = m;
var G__10642 = n;
var G__10643 = o;
var G__10644 = p;
var G__10645 = q;
var G__10646 = r;
var G__10647 = s;
var G__10648 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10629,G__10630,G__10631,G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638,G__10639,G__10640,G__10641,G__10642,G__10643,G__10644,G__10645,G__10646,G__10647,G__10648) : target_fn.call(null,G__10629,G__10630,G__10631,G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638,G__10639,G__10640,G__10641,G__10642,G__10643,G__10644,G__10645,G__10646,G__10647,G__10648));
});
var G__11069__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__11069 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11069__1.call(this,self__);
case 2:
return G__11069__2.call(this,self__,a);
case 3:
return G__11069__3.call(this,self__,a,b);
case 4:
return G__11069__4.call(this,self__,a,b,c);
case 5:
return G__11069__5.call(this,self__,a,b,c,d);
case 6:
return G__11069__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11069__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11069__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11069__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11069__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11069__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11069__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11069__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11069__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11069__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11069__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11069__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11069__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11069__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11069__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11069__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11069__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11069.cljs$core$IFn$_invoke$arity$1 = G__11069__1;
G__11069.cljs$core$IFn$_invoke$arity$2 = G__11069__2;
G__11069.cljs$core$IFn$_invoke$arity$3 = G__11069__3;
G__11069.cljs$core$IFn$_invoke$arity$4 = G__11069__4;
G__11069.cljs$core$IFn$_invoke$arity$5 = G__11069__5;
G__11069.cljs$core$IFn$_invoke$arity$6 = G__11069__6;
G__11069.cljs$core$IFn$_invoke$arity$7 = G__11069__7;
G__11069.cljs$core$IFn$_invoke$arity$8 = G__11069__8;
G__11069.cljs$core$IFn$_invoke$arity$9 = G__11069__9;
G__11069.cljs$core$IFn$_invoke$arity$10 = G__11069__10;
G__11069.cljs$core$IFn$_invoke$arity$11 = G__11069__11;
G__11069.cljs$core$IFn$_invoke$arity$12 = G__11069__12;
G__11069.cljs$core$IFn$_invoke$arity$13 = G__11069__13;
G__11069.cljs$core$IFn$_invoke$arity$14 = G__11069__14;
G__11069.cljs$core$IFn$_invoke$arity$15 = G__11069__15;
G__11069.cljs$core$IFn$_invoke$arity$16 = G__11069__16;
G__11069.cljs$core$IFn$_invoke$arity$17 = G__11069__17;
G__11069.cljs$core$IFn$_invoke$arity$18 = G__11069__18;
G__11069.cljs$core$IFn$_invoke$arity$19 = G__11069__19;
G__11069.cljs$core$IFn$_invoke$arity$20 = G__11069__20;
G__11069.cljs$core$IFn$_invoke$arity$21 = G__11069__21;
G__11069.cljs$core$IFn$_invoke$arity$22 = G__11069__22;
return G__11069;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args10221){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10221)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10649 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10649) : self__.dispatch_fn.call(null,G__10649));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10650 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10650) : target_fn.call(null,G__10650));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10651 = a;
var G__10652 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10651,G__10652) : self__.dispatch_fn.call(null,G__10651,G__10652));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10653 = a;
var G__10654 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10653,G__10654) : target_fn.call(null,G__10653,G__10654));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10655 = a;
var G__10656 = b;
var G__10657 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10655,G__10656,G__10657) : self__.dispatch_fn.call(null,G__10655,G__10656,G__10657));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10658 = a;
var G__10659 = b;
var G__10660 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10658,G__10659,G__10660) : target_fn.call(null,G__10658,G__10659,G__10660));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10661 = a;
var G__10662 = b;
var G__10663 = c;
var G__10664 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10661,G__10662,G__10663,G__10664) : self__.dispatch_fn.call(null,G__10661,G__10662,G__10663,G__10664));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10665 = a;
var G__10666 = b;
var G__10667 = c;
var G__10668 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10665,G__10666,G__10667,G__10668) : target_fn.call(null,G__10665,G__10666,G__10667,G__10668));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10669 = a;
var G__10670 = b;
var G__10671 = c;
var G__10672 = d;
var G__10673 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10669,G__10670,G__10671,G__10672,G__10673) : self__.dispatch_fn.call(null,G__10669,G__10670,G__10671,G__10672,G__10673));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10674 = a;
var G__10675 = b;
var G__10676 = c;
var G__10677 = d;
var G__10678 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10674,G__10675,G__10676,G__10677,G__10678) : target_fn.call(null,G__10674,G__10675,G__10676,G__10677,G__10678));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10679 = a;
var G__10680 = b;
var G__10681 = c;
var G__10682 = d;
var G__10683 = e;
var G__10684 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10679,G__10680,G__10681,G__10682,G__10683,G__10684) : self__.dispatch_fn.call(null,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10685 = a;
var G__10686 = b;
var G__10687 = c;
var G__10688 = d;
var G__10689 = e;
var G__10690 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10685,G__10686,G__10687,G__10688,G__10689,G__10690) : target_fn.call(null,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10691 = a;
var G__10692 = b;
var G__10693 = c;
var G__10694 = d;
var G__10695 = e;
var G__10696 = f;
var G__10697 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10691,G__10692,G__10693,G__10694,G__10695,G__10696,G__10697) : self__.dispatch_fn.call(null,G__10691,G__10692,G__10693,G__10694,G__10695,G__10696,G__10697));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10698 = a;
var G__10699 = b;
var G__10700 = c;
var G__10701 = d;
var G__10702 = e;
var G__10703 = f;
var G__10704 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704) : target_fn.call(null,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10705 = a;
var G__10706 = b;
var G__10707 = c;
var G__10708 = d;
var G__10709 = e;
var G__10710 = f;
var G__10711 = g;
var G__10712 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711,G__10712) : self__.dispatch_fn.call(null,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711,G__10712));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10713 = a;
var G__10714 = b;
var G__10715 = c;
var G__10716 = d;
var G__10717 = e;
var G__10718 = f;
var G__10719 = g;
var G__10720 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720) : target_fn.call(null,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10721 = a;
var G__10722 = b;
var G__10723 = c;
var G__10724 = d;
var G__10725 = e;
var G__10726 = f;
var G__10727 = g;
var G__10728 = h;
var G__10729 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729) : self__.dispatch_fn.call(null,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10730 = a;
var G__10731 = b;
var G__10732 = c;
var G__10733 = d;
var G__10734 = e;
var G__10735 = f;
var G__10736 = g;
var G__10737 = h;
var G__10738 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738) : target_fn.call(null,G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10739 = a;
var G__10740 = b;
var G__10741 = c;
var G__10742 = d;
var G__10743 = e;
var G__10744 = f;
var G__10745 = g;
var G__10746 = h;
var G__10747 = i;
var G__10748 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10739,G__10740,G__10741,G__10742,G__10743,G__10744,G__10745,G__10746,G__10747,G__10748) : self__.dispatch_fn.call(null,G__10739,G__10740,G__10741,G__10742,G__10743,G__10744,G__10745,G__10746,G__10747,G__10748));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10749 = a;
var G__10750 = b;
var G__10751 = c;
var G__10752 = d;
var G__10753 = e;
var G__10754 = f;
var G__10755 = g;
var G__10756 = h;
var G__10757 = i;
var G__10758 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758) : target_fn.call(null,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10759 = a;
var G__10760 = b;
var G__10761 = c;
var G__10762 = d;
var G__10763 = e;
var G__10764 = f;
var G__10765 = g;
var G__10766 = h;
var G__10767 = i;
var G__10768 = j;
var G__10769 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10759,G__10760,G__10761,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769) : self__.dispatch_fn.call(null,G__10759,G__10760,G__10761,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10770 = a;
var G__10771 = b;
var G__10772 = c;
var G__10773 = d;
var G__10774 = e;
var G__10775 = f;
var G__10776 = g;
var G__10777 = h;
var G__10778 = i;
var G__10779 = j;
var G__10780 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779,G__10780) : target_fn.call(null,G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779,G__10780));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10781 = a;
var G__10782 = b;
var G__10783 = c;
var G__10784 = d;
var G__10785 = e;
var G__10786 = f;
var G__10787 = g;
var G__10788 = h;
var G__10789 = i;
var G__10790 = j;
var G__10791 = k;
var G__10792 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792) : self__.dispatch_fn.call(null,G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10793 = a;
var G__10794 = b;
var G__10795 = c;
var G__10796 = d;
var G__10797 = e;
var G__10798 = f;
var G__10799 = g;
var G__10800 = h;
var G__10801 = i;
var G__10802 = j;
var G__10803 = k;
var G__10804 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800,G__10801,G__10802,G__10803,G__10804) : target_fn.call(null,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800,G__10801,G__10802,G__10803,G__10804));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10805 = a;
var G__10806 = b;
var G__10807 = c;
var G__10808 = d;
var G__10809 = e;
var G__10810 = f;
var G__10811 = g;
var G__10812 = h;
var G__10813 = i;
var G__10814 = j;
var G__10815 = k;
var G__10816 = l;
var G__10817 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817) : self__.dispatch_fn.call(null,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10818 = a;
var G__10819 = b;
var G__10820 = c;
var G__10821 = d;
var G__10822 = e;
var G__10823 = f;
var G__10824 = g;
var G__10825 = h;
var G__10826 = i;
var G__10827 = j;
var G__10828 = k;
var G__10829 = l;
var G__10830 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10818,G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830) : target_fn.call(null,G__10818,G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10831 = a;
var G__10832 = b;
var G__10833 = c;
var G__10834 = d;
var G__10835 = e;
var G__10836 = f;
var G__10837 = g;
var G__10838 = h;
var G__10839 = i;
var G__10840 = j;
var G__10841 = k;
var G__10842 = l;
var G__10843 = m;
var G__10844 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844) : self__.dispatch_fn.call(null,G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10845 = a;
var G__10846 = b;
var G__10847 = c;
var G__10848 = d;
var G__10849 = e;
var G__10850 = f;
var G__10851 = g;
var G__10852 = h;
var G__10853 = i;
var G__10854 = j;
var G__10855 = k;
var G__10856 = l;
var G__10857 = m;
var G__10858 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858) : target_fn.call(null,G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10859 = a;
var G__10860 = b;
var G__10861 = c;
var G__10862 = d;
var G__10863 = e;
var G__10864 = f;
var G__10865 = g;
var G__10866 = h;
var G__10867 = i;
var G__10868 = j;
var G__10869 = k;
var G__10870 = l;
var G__10871 = m;
var G__10872 = n;
var G__10873 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10859,G__10860,G__10861,G__10862,G__10863,G__10864,G__10865,G__10866,G__10867,G__10868,G__10869,G__10870,G__10871,G__10872,G__10873) : self__.dispatch_fn.call(null,G__10859,G__10860,G__10861,G__10862,G__10863,G__10864,G__10865,G__10866,G__10867,G__10868,G__10869,G__10870,G__10871,G__10872,G__10873));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10874 = a;
var G__10875 = b;
var G__10876 = c;
var G__10877 = d;
var G__10878 = e;
var G__10879 = f;
var G__10880 = g;
var G__10881 = h;
var G__10882 = i;
var G__10883 = j;
var G__10884 = k;
var G__10885 = l;
var G__10886 = m;
var G__10887 = n;
var G__10888 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10874,G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882,G__10883,G__10884,G__10885,G__10886,G__10887,G__10888) : target_fn.call(null,G__10874,G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882,G__10883,G__10884,G__10885,G__10886,G__10887,G__10888));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10889 = a;
var G__10890 = b;
var G__10891 = c;
var G__10892 = d;
var G__10893 = e;
var G__10894 = f;
var G__10895 = g;
var G__10896 = h;
var G__10897 = i;
var G__10898 = j;
var G__10899 = k;
var G__10900 = l;
var G__10901 = m;
var G__10902 = n;
var G__10903 = o;
var G__10904 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10889,G__10890,G__10891,G__10892,G__10893,G__10894,G__10895,G__10896,G__10897,G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904) : self__.dispatch_fn.call(null,G__10889,G__10890,G__10891,G__10892,G__10893,G__10894,G__10895,G__10896,G__10897,G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10905 = a;
var G__10906 = b;
var G__10907 = c;
var G__10908 = d;
var G__10909 = e;
var G__10910 = f;
var G__10911 = g;
var G__10912 = h;
var G__10913 = i;
var G__10914 = j;
var G__10915 = k;
var G__10916 = l;
var G__10917 = m;
var G__10918 = n;
var G__10919 = o;
var G__10920 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10905,G__10906,G__10907,G__10908,G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916,G__10917,G__10918,G__10919,G__10920) : target_fn.call(null,G__10905,G__10906,G__10907,G__10908,G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916,G__10917,G__10918,G__10919,G__10920));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10921 = a;
var G__10922 = b;
var G__10923 = c;
var G__10924 = d;
var G__10925 = e;
var G__10926 = f;
var G__10927 = g;
var G__10928 = h;
var G__10929 = i;
var G__10930 = j;
var G__10931 = k;
var G__10932 = l;
var G__10933 = m;
var G__10934 = n;
var G__10935 = o;
var G__10936 = p;
var G__10937 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931,G__10932,G__10933,G__10934,G__10935,G__10936,G__10937) : self__.dispatch_fn.call(null,G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931,G__10932,G__10933,G__10934,G__10935,G__10936,G__10937));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10938 = a;
var G__10939 = b;
var G__10940 = c;
var G__10941 = d;
var G__10942 = e;
var G__10943 = f;
var G__10944 = g;
var G__10945 = h;
var G__10946 = i;
var G__10947 = j;
var G__10948 = k;
var G__10949 = l;
var G__10950 = m;
var G__10951 = n;
var G__10952 = o;
var G__10953 = p;
var G__10954 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10938,G__10939,G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950,G__10951,G__10952,G__10953,G__10954) : target_fn.call(null,G__10938,G__10939,G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950,G__10951,G__10952,G__10953,G__10954));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10955 = a;
var G__10956 = b;
var G__10957 = c;
var G__10958 = d;
var G__10959 = e;
var G__10960 = f;
var G__10961 = g;
var G__10962 = h;
var G__10963 = i;
var G__10964 = j;
var G__10965 = k;
var G__10966 = l;
var G__10967 = m;
var G__10968 = n;
var G__10969 = o;
var G__10970 = p;
var G__10971 = q;
var G__10972 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962,G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972) : self__.dispatch_fn.call(null,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962,G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10973 = a;
var G__10974 = b;
var G__10975 = c;
var G__10976 = d;
var G__10977 = e;
var G__10978 = f;
var G__10979 = g;
var G__10980 = h;
var G__10981 = i;
var G__10982 = j;
var G__10983 = k;
var G__10984 = l;
var G__10985 = m;
var G__10986 = n;
var G__10987 = o;
var G__10988 = p;
var G__10989 = q;
var G__10990 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989,G__10990) : target_fn.call(null,G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989,G__10990));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10991 = a;
var G__10992 = b;
var G__10993 = c;
var G__10994 = d;
var G__10995 = e;
var G__10996 = f;
var G__10997 = g;
var G__10998 = h;
var G__10999 = i;
var G__11000 = j;
var G__11001 = k;
var G__11002 = l;
var G__11003 = m;
var G__11004 = n;
var G__11005 = o;
var G__11006 = p;
var G__11007 = q;
var G__11008 = r;
var G__11009 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10991,G__10992,G__10993,G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008,G__11009) : self__.dispatch_fn.call(null,G__10991,G__10992,G__10993,G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008,G__11009));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11010 = a;
var G__11011 = b;
var G__11012 = c;
var G__11013 = d;
var G__11014 = e;
var G__11015 = f;
var G__11016 = g;
var G__11017 = h;
var G__11018 = i;
var G__11019 = j;
var G__11020 = k;
var G__11021 = l;
var G__11022 = m;
var G__11023 = n;
var G__11024 = o;
var G__11025 = p;
var G__11026 = q;
var G__11027 = r;
var G__11028 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11010,G__11011,G__11012,G__11013,G__11014,G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023,G__11024,G__11025,G__11026,G__11027,G__11028) : target_fn.call(null,G__11010,G__11011,G__11012,G__11013,G__11014,G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023,G__11024,G__11025,G__11026,G__11027,G__11028));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11029 = a;
var G__11030 = b;
var G__11031 = c;
var G__11032 = d;
var G__11033 = e;
var G__11034 = f;
var G__11035 = g;
var G__11036 = h;
var G__11037 = i;
var G__11038 = j;
var G__11039 = k;
var G__11040 = l;
var G__11041 = m;
var G__11042 = n;
var G__11043 = o;
var G__11044 = p;
var G__11045 = q;
var G__11046 = r;
var G__11047 = s;
var G__11048 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11029,G__11030,G__11031,G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040,G__11041,G__11042,G__11043,G__11044,G__11045,G__11046,G__11047,G__11048) : self__.dispatch_fn.call(null,G__11029,G__11030,G__11031,G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040,G__11041,G__11042,G__11043,G__11044,G__11045,G__11046,G__11047,G__11048));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11049 = a;
var G__11050 = b;
var G__11051 = c;
var G__11052 = d;
var G__11053 = e;
var G__11054 = f;
var G__11055 = g;
var G__11056 = h;
var G__11057 = i;
var G__11058 = j;
var G__11059 = k;
var G__11060 = l;
var G__11061 = m;
var G__11062 = n;
var G__11063 = o;
var G__11064 = p;
var G__11065 = q;
var G__11066 = r;
var G__11067 = s;
var G__11068 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11049,G__11050,G__11051,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058,G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068) : target_fn.call(null,G__11049,G__11050,G__11051,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058,G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11070 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__11070);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__11075 = msg;
return Error(G__11075);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__11080 = x;
var G__11081 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11080,G__11081) : pred.call(null,G__11080,G__11081));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11082 = y;
var G__11083 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11082,G__11083) : pred.call(null,G__11082,G__11083));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map