;; Analyzed by ClojureScript 0.0-2755
{:defs {operations {:file "src/staplo/operations.cljs", :line 15, :column 1, :end-line 15, :end-column 17, :test true, :name staplo.operations/operations}, rotate {:protocol-inline nil, :name staplo.operations/rotate, :variadic false, :file "src/staplo/operations.cljs", :end-column 14, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string])), :test true}, reverse {:file "src/staplo/operations.cljs", :line 8, :column 1, :end-line 8, :end-column 14, :test true, :name staplo.operations/reverse}, wrap-endec {:protocol-inline nil, :name staplo.operations/wrap-endec, :variadic false, :file "src/staplo/operations.cljs", :end-column 18, :method-params ([fun]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag function, :variadic false, :max-fixed-arity 1}), :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fun])), :test true}}, :name staplo.operations, :doc nil, :excludes #{reverse}, :use-macros nil, :require-macros nil, :uses nil, :requires {clojure.string clojure.string, str clojure.string}, :imports nil}