;; Analyzed by ClojureScript 0.0-2755
{:defs {operations {:file "src/staplo/operations.cljs", :line 30, :column 1, :end-line 30, :end-column 17, :test true, :name staplo.operations/operations}, sqrt {:file "src/staplo/operations.cljs", :line 28, :column 1, :end-line 28, :end-column 11, :test true, :name staplo.operations/sqrt}, safe-apply {:protocol-inline nil, :name staplo.operations/safe-apply, :variadic false, :file "src/staplo/operations.cljs", :end-column 18, :method-params ([operation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag function, :variadic false, :max-fixed-arity 1}), :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([operation])), :test true}, contains-str {:protocol-inline nil, :name staplo.operations/contains-str, :variadic false, :file "src/staplo/operations.cljs", :end-column 20, :method-params ([string substring]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 2}), :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([string substring])), :test true}, operation-pair {:protocol-inline nil, :name staplo.operations/operation-pair, :variadic false, :file "src/staplo/operations.cljs", :end-column 22, :method-params ([op precondition]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([op precondition])), :test true}, same-char? {:protocol-inline nil, :name staplo.operations/same-char?, :variadic false, :file "src/staplo/operations.cljs", :end-column 18, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string])), :test true}, rotate {:protocol-inline nil, :name staplo.operations/rotate, :variadic false, :file "src/staplo/operations.cljs", :end-column 14, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string])), :test true}, wrap-endec {:protocol-inline nil, :name staplo.operations/wrap-endec, :variadic false, :file "src/staplo/operations.cljs", :end-column 18, :method-params ([fun]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag function, :variadic false, :max-fixed-arity 1}), :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fun])), :test true}}, :name staplo.operations, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {clojure.string clojure.string, str clojure.string}, :imports nil}