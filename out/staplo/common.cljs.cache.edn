;; Analyzed by ClojureScript 0.0-2755
{:defs {accumulate {:protocol-inline nil, :name staplo.common/accumulate, :variadic false, :file "src/staplo/common.cljs", :end-column 18, :method-params ([fun base times]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 3}), :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([fun base times])), :test true}, rand-interval {:protocol-inline nil, :name staplo.common/rand-interval, :variadic false, :file "src/staplo/common.cljs", :end-column 21, :method-params ([p__4929]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 1}), :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [start end]}])), :test true}, rand2 {:protocol-inline nil, :name staplo.common/rand2, :variadic false, :file "src/staplo/common.cljs", :end-column 13, :method-params ([start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 2}), :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start end])), :test true}, interval {:protocol-inline nil, :name staplo.common/interval, :variadic false, :file "src/staplo/common.cljs", :end-column 16, :method-params ([start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 3, :end-line 3, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start end])), :test true}}, :name staplo.common, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil}